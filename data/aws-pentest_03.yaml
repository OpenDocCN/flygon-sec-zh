- en: '*Chapter 2*: Pentesting and Ethical Hacking'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第2章*：渗透测试和道德黑客'
- en: The following chapter discusses penetration testing, also known as pentesting.
    Pentesting is something that grew out of computer concerns during the 1960s. As
    computer systems began to distribute data more, ensuring the security of that
    data became crucial. After much discussion of how communication lines could be
    penetrated, it was recommended that some type of "penetration assessment" be used
    to assess computer systems and communication lines with "real threat-like" assessments.
    Moving forward to the early 1970s, tiger teams were created as the first penetration
    testing teams and carried out operations similar to the tactics you will see and
    read about in this book. The primary responsibility of these tiger teams was to
    discover vulnerabilities and assess the threat impact level based on manually
    exploiting the vulnerabilities found.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 以下章节讨论了渗透测试，也称为渗透测试。渗透测试是在20世纪60年代出现的一种与计算机有关的事物。随着计算机系统开始更多地分发数据，确保数据的安全变得至关重要。在讨论了通信线路如何被渗透后，建议使用某种类型的“渗透评估”来评估计算机系统和通信线路的“真实威胁”评估。进入20世纪70年代初，虎队成为了第一个渗透测试团队，并执行了类似于本书中将看到和阅读到的战术。这些虎队的主要责任是发现漏洞，并根据手动利用发现的漏洞来评估威胁影响级别。
- en: Fast-forward to today, and the world of pentesting is growing in popularity
    and is becoming a common way to assess a corporation's infrastructure and security
    posture. Businesses hire pentesters to hack their companies and highlight areas
    of weakness ethically. The purpose of pentesting is to let the good guys know
    about vulnerabilities before the bad guys find out about them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 快进到今天，渗透测试的世界越来越受欢迎，并且正在成为评估公司基础设施和安全状况的常见方式。企业雇佣渗透测试人员来合法地黑客攻击他们的公司，并突出显示弱点。渗透测试的目的是让善良的人在坏人发现之前知道漏洞。
- en: Before we get into AWS, we'll learn about the pentesting parts of cybersecurity
    and what it means to execute pentesting successfully, so as to lay a foundation
    for our work in this book. We need to understand it so that we can think like
    a pentester and move through the book with that thought process. After all, to
    know the enemy, you have to think like the enemy.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解AWS之前，我们将学习关于网络安全渗透测试的部分，以及成功执行渗透测试意味着什么，为我们在本书中的工作奠定基础。我们需要理解它，这样我们才能像渗透测试人员一样思考，并以这种思维过程来阅读本书。毕竟，要了解敌人，你必须像敌人一样思考。
- en: In this chapter, we will take a brief journey into what defines penetration
    testing. Then, we will set up a Kali Linux system locally on our own machines
    and explore the tools installed on the operating system. Do not worry about not
    having experience in Linux; this chapter will cover everything you need to know.
    We will also go over some pentesting tools and install some tools when needed.
    We will also learn how to write a basic script that we can run against our own
    host.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将简要介绍渗透测试的定义。然后，我们将在自己的机器上本地设置Kali Linux系统，并探索操作系统上安装的工具。不要担心没有Linux经验；本章将涵盖您需要了解的一切。我们还将介绍一些渗透测试工具，并在需要时安装一些工具。我们还将学习如何编写一个基本的脚本，可以针对我们自己的主机运行。
- en: 'In this chapter, we''ll cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: What is penetration testing?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是渗透测试？
- en: Kali Linux
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux
- en: Linux commands
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux命令
- en: Pentesting tools
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渗透测试工具
- en: Operating systems
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To follow along with the instructions in this chapter, you will need the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要按照本章的说明进行操作，您需要以下内容：
- en: 'VirtualBox: [https://www.virtualbox.org/manual/ch01.html](https://www.virtualbox.org/manual/ch01.html)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'VirtualBox: [https://www.virtualbox.org/manual/ch01.html](https://www.virtualbox.org/manual/ch01.html)'
- en: PyCharm
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyCharm
- en: 'The code used in this chapter is available at the following link: [https://github.com/PacktPublishing/AWS-Penetration-Testing/tree/master/Chapter%202:%20Pentesting%20and%20Ethical%20Hacking](https://github.com/PacktPublishing/AWS-Penetration-Testing/tree/master/Chapter%202:%20Pentesting%20and%20Ethical%20Hacking).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的代码可在以下链接找到：[https://github.com/PacktPublishing/AWS-Penetration-Testing/tree/master/Chapter%202:%20Pentesting%20and%20Ethical%20Hacking](https://github.com/PacktPublishing/AWS-Penetration-Testing/tree/master/Chapter%202:%20Pentesting%20and%20Ethical%20Hacking)。
- en: 'Check out the following video to see the Code in Action: [https://bit.ly/386jRrY](https://bit.ly/386jRrY)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频以查看代码的实际操作：[https://bit.ly/386jRrY](https://bit.ly/386jRrY)
- en: What is penetration testing?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是渗透测试？
- en: The term "penetration tester" is an interesting job title for a professional
    to have. While the job title may be a good conversation starter, and despite the
    funny remarks, penetration testing can be one of the most rewarding careers within
    cybersecurity. So, what is penetration testing, or pentesting?
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: “渗透测试人员”这个职业头衔是一个有趣的职业头衔。虽然这个职业头衔可能是一个不错的谈话开场白，尽管有些有趣的评论，但渗透测试可以是网络安全领域内最有价值的职业之一。那么，什么是渗透测试，或者渗透测试？
- en: Penetration testing is the evaluation of a system's attack surface through manual
    and automated exploitation. This involves using multiple sources to discover and
    exploit issues within systems. A system is a set of people, mechanisms, software,
    and policies that make up an entity (system).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试是通过手动和自动利用评估系统的攻击面。这涉及使用多个来源发现和利用系统内的问题。一个系统是由人员、机制、软件和政策组成的实体（系统）。
- en: Another way we can look at it is that pentesting highlights how systems work
    and reveals the vulnerabilities that leave them exposed to hacking, enabling the
    vulnerabilities to be corrected before adversaries can exploit them. This gives
    personnel an understanding of their technology, its security, and how attackers
    think about and exploit such systems. In today's environments, adversaries are
    always playing a cat-and-mouse game with companies. It is a pentester's job to
    ensure that those systems have more skilled cats to hunt the malicious mice.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种看待渗透测试的方式是，它突出了系统的工作方式，并揭示了使其暴露于黑客攻击的漏洞，使漏洞能够在对手利用之前得到纠正。这使人员了解他们的技术、其安全性以及攻击者如何思考和利用这些系统。在今天的环境中，对手总是与公司玩猫鼠游戏。渗透测试人员的工作是确保这些系统有更有技能的猫来猎捕恶意的老鼠。
- en: Finding critical issues before the bad guys do
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在坏人之前找到关键问题
- en: Staying out of the news is the name of the game, and pentesting is a process
    that helps companies stay in the game. As many of us have seen, the news loves
    to run stories on companies that have been attacked by cybercriminals. Those attacks
    cost companies millions of dollars in losses as well as diminishing their reputation.
    As many of these companies are small companies, they stand less of a chance of
    bouncing back. In fact, 60% of small businesses fold within 6 months of a cyberattack.
    Penetration testing is a high-level quality assurance check that makes sure that
    companies can close gaps in their attack surface and solve issues before they
    get exploited, ultimately keeping them out of the news and keeping them from suffering
    severe monetary repercussions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 不出现在新闻中是游戏的名字，渗透测试是帮助公司留在游戏中的过程。正如我们许多人所见，新闻喜欢报道被网络犯罪分子攻击的公司。这些攻击给公司造成了数百万美元的损失，同时也损害了它们的声誉。许多这些公司都是小公司，它们恢复的机会较小。事实上，60%的小企业在遭受网络攻击后的6个月内倒闭。渗透测试是一种高水平的质量保证检查，确保公司可以关闭其攻击面的漏洞并在被利用之前解决问题，最终使它们远离新闻，并避免遭受严重的经济后果。
- en: Pentesting methodology
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渗透测试方法
- en: It's essential to understand the steps involved in pentesting. Having knowledge
    of the engagements not only gives you an insight into how security operations
    are performed within your business but also presents a formal representation of
    how attackers may actually attempt to exploit your systems.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 了解渗透测试所涉及的步骤是至关重要的。对参与的了解不仅让您了解您的业务内部如何执行安全操作，还提供了攻击者可能实际尝试利用您的系统的正式表现。
- en: 'Here is a compressed list of the steps taken in a pentest engagement:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是渗透测试参与过程中所采取的步骤的压缩列表：
- en: '**Planning** out the pentest is one of the most critical phases of pentesting.
    During this phase, you need to lay out your entire plan legally and logically.
    The scope of the engagement is determined and goals are set.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**规划** 渗透测试是渗透测试中最关键的阶段之一。在这个阶段，您需要合法和逻辑地制定整个计划。确定参与范围并设定目标。'
- en: You will gather information during the **reconnaissance** phase. This will involve
    you finding information passively or actively.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将在**侦察**阶段收集信息。这将涉及您 passively 或 actively 查找信息。
- en: '**Threat modeling** relies on you gathering all the data collected during the
    test and using that data to give a view of the system, highlighting its measured
    threats.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**威胁建模**依赖于您收集测试期间收集的所有数据，并使用这些数据来给出系统的视图，突出其测量的威胁。'
- en: '**Testing and exploiting** involves you probing vulnerabilities found earlier
    in the test. If a probe is validated as successful, then exploiting the vulnerability
    commences. Exploiting vulnerabilities can happen in a number of ways. Some common
    ways you can do so include sending unexpected input to a web application, using
    automated tools and exploits, and/or performing manual exploitation.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**测试和利用** 涉及您探测先前测试中发现的漏洞。如果探测被验证为成功，那么利用漏洞就开始了。利用漏洞可以通过多种方式进行。您可以通过向Web应用程序发送意外输入、使用自动化工具和利用程序，以及/或执行手动利用等常见方式来进行。'
- en: When you enter the **post-exploitation phase**, you will maintain persistence
    and perform lateral movements and data exfiltration. Further, staying stealthy
    and covering your tracks are good practices to execute. Staying stealthy allows
    the blue team to test detection and response.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您进入**后渗透**阶段时，您将保持持久性并执行横向移动和数据外泄。此外，保持隐秘并掩盖您的踪迹是执行的良好实践。保持隐秘允许蓝队测试检测和响应。
- en: '**Reporting** is the most crucial portion of the test. Delivering an excellent
    report ensures that the client/tested company understands the issues discovered
    and how to mitigate the problems found during the pentesting engagement.'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**报告** 是测试中最关键的部分。提交出色的报告确保客户/被测试公司了解发现的问题以及如何在渗透测试参与过程中发现的问题进行缓解。'
- en: While we've looked at the general steps in pentesting, we need to also understand
    the different approaches, which we will look at next. These approaches are the
    "style" of pentesting that can be executed through pentesting. These styles use
    either an outsider or insider approach and are used in common pentesting practice
    today!
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们已经了解了渗透测试的一般步骤，但我们还需要了解不同的方法，接下来我们将会看到。这些方法是可以通过渗透测试执行的渗透测试的“风格”。这些风格使用外部人员或内部人员的方法，并且在今天的常见渗透测试实践中使用！
- en: Types of pentesting
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渗透测试的类型
- en: 'When planning your pentesting, it''s important to understand the approach you
    want to follow. Let''s look at the general approaches:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在规划渗透测试时，了解您想要遵循的方法是很重要的。让我们来看一下一般的方法：
- en: '**Black box**: This type of test involves assessing the in-scope targets with
    no knowledge of the inner workings of the in-scope systems and applications. Often,
    it can be thought of as a validation of a system''s functional requirements. For
    example, a client will develop a new application and requires a test to be performed
    at the user level.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**黑盒**：这种测试类型涉及对范围内目标进行评估，但对范围内系统和应用程序的内部工作一无所知。通常，它可以被视为对系统功能要求的验证。例如，客户将开发一个新应用程序，并要求在用户级别执行测试。'
- en: Typically, a user has no knowledge of the inner workings of the application
    and only uses it for its functional properties – this means a functional test
    may be needed. A functional test looks to highlight any vulnerabilities that someone
    with little to no knowledge could find in an application.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，用户对应用程序的内部工作一无所知，只使用它的功能属性 - 这意味着可能需要进行功能测试。功能测试旨在突出任何有人可能发现的应用程序中的漏洞。
- en: '**White box**: White box testing is the most common testing method you see
    in the real world. It involves testing a system with full knowledge of everything
    that is in scope. Think of this as quality assurance or testing every possible
    detail of a system to ensure that it is not vulnerable. White box testing is a
    great way to discover and validate the internals of source code and system setups.
    Often, a white box test will be executed before a new product (applications, hardware,
    and so on) is integrated into a business. White box testing is what we will be
    doing throughout this book.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**白盒**：白盒测试是你在现实世界中看到的最常见的测试方法。它涉及对系统进行全面了解的测试。将其视为质量保证或测试系统的每一个可能的细节，以确保它不容易受到攻击。白盒测试是发现和验证源代码和系统设置内部的一个很好的方法。通常，在新产品（应用程序、硬件等）被整合到业务之前，会执行白盒测试。在本书中，我们将一直进行白盒测试。'
- en: '**Gray box**: Simply put, this is a hybrid of black box and white box testing.
    A good example of this is testing a web application. A tester will have full knowledge
    of the frontend of the web application but little to no knowledge of the backend.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**灰盒**：简单来说，这是黑盒测试和白盒测试的混合体。一个很好的例子是测试一个Web应用程序。测试人员将完全了解Web应用程序的前端，但对后端几乎一无所知。'
- en: Advantages and disadvantages
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优点和缺点
- en: We have explored various styles of testing, so let's look at their advantages
    and disadvantages before we go any further. Each style of testing has an optimal
    time and place, the conditions of which we will look at below.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们已经探讨了各种测试风格，让我们在继续之前先看看它们的优缺点。每种测试风格都有最佳的时间和地点，我们将在下面看到这些条件。
- en: Advantages
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: 'A white box test has the following advantages:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 白盒测试具有以下优点：
- en: Quick due to less time needed for discovery
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于发现所需的时间较少，因此速度快
- en: Cheap due to fewer time constraints
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于时间限制较少，价格便宜
- en: Allows testers more time to look at deep functional aspects such as code review
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许测试人员有更多时间查看深层功能方面，如代码审查
- en: 'A black box test has the following advantages:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 黑盒测试具有以下优点：
- en: Delivers more dependable and realistic results due to testers having to emulate
    real threat vectors
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于测试人员必须模拟真实的威胁向量，因此提供更可靠和现实的结果
- en: Highlights end-user weakness through phishing campaigns
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过钓鱼活动突显最终用户的弱点
- en: 'A gray box test has the following advantages:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 灰盒测试具有以下优点：
- en: Uses a combination of both white box and black box testing
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用白盒测试和黑盒测试的组合
- en: Allows creativity and is not constrained to one style of testing
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许创造性，不受一种测试风格的约束
- en: Now that we've looked at the advantages, let's move on to the disadvantages
    of each type of test.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看过了优点，让我们继续看看每种测试类型的缺点。
- en: Disadvantages
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: 'A white box test has the following disadvantages:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 白盒测试具有以下缺点：
- en: Typically, white box testing does not deliver results based on real attacker
    scenarios.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，白盒测试不会根据真实的攻击者场景提供结果。
- en: It can be a headache if not planned out properly. Often, white box tests are
    not prepared correctly and lots of information is missing when the test begins.
    For example, when a white box test is started, often the target business may overlook
    something and forget about specific resources that are part of the pentest. This
    is something that should be looked out for and is discussed more in [*Chapter
    10*](B15630_10_Final_ASB_ePub.xhtml#_idTextAnchor438)*, Pentesting Best Practices*.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果计划不周，可能会很头疼。通常，白盒测试没有准备好，测试开始时会缺少很多信息。例如，当白盒测试开始时，目标业务往往会忽视某些东西，并忘记渗透测试的特定资源。这是需要注意的事情，并且在[*第10章*](B15630_10_Final_ASB_ePub.xhtml#_idTextAnchor438)*，渗透测试最佳实践*中有更多讨论。
- en: Such tests can present a biased opinion since the testers know everything about
    the environment already.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这样的测试可能会提出有偏见的意见，因为测试人员已经对环境了解一切。
- en: 'A black box test has the following disadvantages:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 黑盒测试具有以下缺点：
- en: It is time consuming because testers have to take their time to gain access.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 因为测试人员需要花时间获取访问权限，所以耗时。
- en: It can be expensive, depending on the length of the engagement.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据参与的长度，可能会很昂贵。
- en: 'A gray box test has the following disadvantages:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 灰盒测试具有以下缺点：
- en: It can be time consuming, depending on how full the scope of the pentest and
    the knowledge of the pentest is.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据渗透测试的范围和渗透测试的知识程度，可能会耗费时间。
- en: It can also be expensive, depending on the test length.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据测试的长度，可能也会很昂贵。
- en: Now that we have a good overview of what pentesting is, let's download a VirtualBox
    image of Kali Linux and set up the operating system so that we can use it to interact
    with our AWS environment.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在我们已经对渗透测试有了一个很好的概述，让我们下载Kali Linux的VirtualBox镜像，并设置操作系统，以便我们可以用它与我们的AWS环境进行交互。
- en: Kali Linux
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kali Linux
- en: Kali Linux is a Debian distribution that is offered for free by Offensive Security
    ([www.offensive-security.com](http://www.offensive-security.com)). Because of
    the growing importance of security, Kali Linux has become popular over the past
    few years. In fact, it's essential for anyone working in pentesting. This is due
    to the operating system coming preloaded with a bundle of security tools that
    don't have to be manually installed.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux是一个Debian发行版，由Offensive Security（[www.offensive-security.com](http://www.offensive-security.com)）免费提供。由于安全性的日益重要，Kali
    Linux在过去几年中变得很受欢迎。事实上，对于从事渗透测试的任何人来说，它都是必不可少的。这是因为操作系统预装了一系列安全工具，无需手动安装。
- en: In this section, we will learn how to set up our own Kali Linux image locally
    on our own machine. The purpose of this exercise will be to make us more comfortable
    with Kali and also to teach you how to set up your own virtual machine. We will
    also use this Kali instance to interact with AWS throughout this book.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何在本地设置我们自己的Kali Linux镜像。这个练习的目的是让我们更加熟悉Kali，并教会您如何设置自己的虚拟机。我们还将在本书中使用这个Kali实例与AWS进行交互。
- en: Setting up a Linux image
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Linux镜像
- en: 'Setting up Kali Linux is easy. Follow along with the steps given here:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 设置Kali Linux很容易。按照这里给出的步骤进行：
- en: 'We need to go grab a Kali image from the Offensive Security website. Ensure
    that you grab `Kali Linux VirtualBox 64-bit version` for VirtualBox: https://www.offensive-security.com/kali-linux-vm-vmware-VirtualBox-image-download/.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要去Offensive Security网站上获取一个Kali镜像。确保您获取的是VirtualBox的`Kali Linux 64位版本`：https://www.offensive-security.com/kali-linux-vm-vmware-VirtualBox-image-download/。
- en: 'While that downloads, let''s go and grab a new version of VirtualBox. VirtualBox
    will be where we build and host our Kali machine: https://www.VirtualBox.org/wiki/Downloads.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下载的同时，让我们去下载一个新版本的VirtualBox。VirtualBox将是我们构建和托管Kali机器的地方：https://www.VirtualBox.org/wiki/Downloads。
- en: Follow the instructions to install VirtualBox. The installation steps will vary
    depending on your host operating system.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照说明安装VirtualBox。安装步骤将根据您的主机操作系统而有所不同。
- en: Start VirtualBox and go to the top left-hand corner and click **Import Appliance…**,
    listed under **File**:![Figure 2.1 – The File menu with Import Appliance… selected
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动VirtualBox，转到左上角，单击**导入虚拟设备...**，列在**文件**下方：![图2.1 - 选择导入虚拟设备的文件菜单
- en: '](img/Figure_2.01_B15630.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.01_B15630.jpg)'
- en: Figure 2.1 – The File menu with Import Appliance… selected
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1 - 文件菜单中选择导入虚拟设备...
- en: After that, you will need to import the Kali Linux `.ova` file that we downloaded
    in *step 1*. The `.ova` file is a VirtualBox-formatted file that allows us to
    import our virtual image directly into VirtualBox with little to no effort:![Figure
    2.2 – Importing the Kali Linux .ova file
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那之后，您需要导入我们在*步骤1*中下载的Kali Linux `.ova`文件。`.ova`文件是一个VirtualBox格式的文件，它允许我们将虚拟镜像直接导入到VirtualBox中，几乎没有任何努力：![图2.2
    - 导入Kali Linux .ova文件
- en: '](img/Figure_2.02_B15630.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.02_B15630.jpg)'
- en: Figure 2.2 – Importing the Kali Linux .ova file
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2 - 导入Kali Linux .ova文件
- en: Once you select the new image, you'll need to change the name of the virtual
    machine. In this case, we change the name to **AWS Kali**. If you change the name
    to something else, ensure that you remember what you name it so you can use the
    Kali Linux machine throughout this book. We also turn off the **USB Controller**
    functionality since we won't be using it:![Figure 2.3 – Appliance settings window
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择新镜像后，您需要更改虚拟机的名称。在这种情况下，我们将名称更改为**AWS Kali**。如果您将名称更改为其他内容，请确保记住您的命名，以便在本书中使用Kali
    Linux机器。我们还关闭**USB控制器**功能，因为我们不会使用它：![图2.3 - 虚拟设备设置窗口
- en: '](img/Figure_2.03_B15630.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.03_B15630.jpg)'
- en: Figure 2.3 – Appliance settings window
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3 - 虚拟设备设置窗口
- en: Now let's start up our Kali Linux virtual machine. To do so, double-click on
    the host you created. The virtual machine will start up and prompt you with a
    user login:![Figure 2.4 – Kali Linux start screen
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们启动我们的Kali Linux虚拟机。为此，请双击您创建的主机。虚拟机将启动并提示您进行用户登录：![图2.4 - Kali Linux启动屏幕
- en: '](img/Figure_2.04_B15630.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.04_B15630.jpg)'
- en: Figure 2.4 – Kali Linux start screen
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4 - Kali Linux启动屏幕
- en: 'To log in, use the following credentials:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要登录，请使用以下凭据：
- en: 'Username: `root`'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 用户名：`root`
- en: 'Password: `toor`'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 密码：`toor`
- en: Now that we have logged in to our Kali machine, let's get comfortable with learning
    some basic Linux commands that will help us throughout this book. It's important
    to know what these commands do because it allows you to maneuver in your Kali
    Linux machine as well as other Linux distributions.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经登录到了Kali机器，让我们熟悉一些基本的Linux命令，这些命令将帮助我们在本书中进行操作。了解这些命令的作用很重要，因为它允许您在Kali
    Linux机器以及其他Linux发行版中进行操作。
- en: Exploring essential Linux commands
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索基本的Linux命令
- en: 'Since we are working with AWS and Kali Linux, it''s important to understand
    some basic Linux commands. There will be lots of tools that you use that will
    require using a terminal. Thus, it''s essential that you understand how to run
    basic commands. We will discover some of these new commands using our new Kali
    Linux image that we set up locally on our machine:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在使用AWS和Kali Linux，了解一些基本的Linux命令很重要。您将使用许多工具，这些工具需要使用终端。因此，了解如何运行基本命令至关重要。我们将使用我们在本地设置的新Kali
    Linux镜像来发现一些新的命令。
- en: 'With your Kali instance started and up and running, let''s log in and make
    a directory. To do so, you will need to type the `mkdir` command. This command
    allows us to make directories that we can store information in. Let''s name the
    directory `Pentesting`:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您的Kali实例启动并运行时，让我们登录并创建一个目录。为此，您需要输入`mkdir`命令。这个命令允许我们创建可以存储信息的目录。让我们把目录命名为`Pentesting`：
- en: '[PRE0]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'After that, you''re going to need to move into that directory, but before we
    can do that, we need to know what directory we are currently working in. Use the
    `pwd` command to print out your current directory. `Pentesting` directory by using
    the `cd` command:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您需要进入该目录，但在这之前，我们需要知道我们当前正在工作的目录是什么。使用`pwd`命令打印出您当前的目录。使用`cd`命令进入`Pentesting`目录：
- en: '[PRE1]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now that we have the directory, let''s create a `.txt` file that we can add
    notes to later throughout this book. Type the `touch` command to make a file called
    `notes.txt`:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了目录，让我们创建一个`.txt`文件，以便以后在本书中添加笔记。键入`touch`命令以创建一个名为`notes.txt`的文件：
- en: '[PRE2]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now that we've created a file, let's put some actual notes in it. We are going
    to use the `echo` command to output some text into our `notes.txt` file. After
    that, we will use the `cat` command to list out the words in the file. The `cat`
    command prints out the contents of files and can also be used to concatenate two
    files together. After that, we will create another file called `notes2.txt` and
    combine it with `notes.txt` to form one file.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经创建了一个文件，让我们在其中放一些实际的笔记。我们将使用`echo`命令将一些文本输出到我们的`notes.txt`文件中。之后，我们将使用`cat`命令列出文件中的单词。`cat`命令打印文件的内容，还可以用于将两个文件连接在一起。之后，我们将创建另一个名为`notes2.txt`的文件，并将其与`notes.txt`组合成一个文件。
- en: 'Let''s output some text into `notes.txt`:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将一些文本输出到`notes.txt`中：
- en: '[PRE3]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now list out the context using the `cat` command:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用`cat`命令列出上下文：
- en: '[PRE4]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now let''s make another file and add some text to it all in one command:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在让我们创建另一个文件，并一次性添加一些文本：
- en: '[PRE5]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Then, we will combine `notes.txt` and `notes2.txt` to form one file:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将组合`notes.txt`和`notes2.txt`以形成一个文件：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You should have something that looks like the following:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该有类似以下内容的东西：
- en: '![Figure 2.5 – The output of combining notes.txt and notes2.txt'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.5 - 组合notes.txt和notes2.txt的输出'
- en: '](img/Figure_2.05_B15630.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.05_B15630.jpg)'
- en: Figure 2.5 – The output of combining notes.txt and notes2.txt
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 - 组合notes.txt和notes2.txt的输出
- en: Congratulations! You have now learned how to make directories and files within
    the Linux operating system. While these commands are great to know, they aren't
    all the commands we will need to know. Now we will look at a few other commands
    that are good to know as we move through this book and learn more about AWS and
    pentesting.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您现在已经学会了在Linux操作系统中创建目录和文件。虽然这些命令很重要，但并非我们需要了解的所有命令。现在，我们将看一些其他命令，这些命令在我们阅读本书并了解更多关于AWS和渗透测试时是很重要的。
- en: '**Additional commands**:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**其他命令**：'
- en: 'Some of the additional commands that we need to know while working through
    this book are as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本书时，我们需要了解的一些其他命令如下：
- en: '`ls`: This command means "list" and is used to list out the contents of a directory.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ls`：这个命令表示“列出”，用于列出目录的内容。'
- en: '`rm`: This command means "remove" and removes files from a directory.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rm`：此命令表示“删除”，并从目录中删除文件。'
- en: '`mv`: This command moves files from one directory to another location that
    you specify.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mv`：此命令将文件从一个目录移动到您指定的另一个位置。'
- en: '`ping`: This command isn''t just for Linux but is a good command to know. The
    `ping` command sends an echo request to the host in the hopes of receiving echo
    responses. It talks to the host to see whether they are online. However, there
    are times when the host will have ping disabled, making them seem offline. If
    this occurs, we can use the `-Pn` switch in `ping`.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ping`：这个命令不仅适用于Linux，而且是一个很好的命令。`ping`命令向主机发送回显请求，希望收到回显响应。它与主机通信，以查看它们是否在线。但是，有时主机会禁用ping，使它们看起来离线。如果发生这种情况，我们可以在`ping`中使用`-Pn`开关。'
- en: '`ifconfig`: This allows you to see your running network interfaces. With Kali,
    running `ifconfig` will typically show you the **eth0** interface, which is typically
    routed or connected to your main **network interface card** (**NIC**).'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ifconfig`：这允许您查看正在运行的网络接口。使用Kali，运行`ifconfig`通常会显示**eth0**接口，该接口通常路由或连接到您的主**网络接口卡**（**NIC**）。'
- en: In this section, we explored the basic commands in Linux. These commands will
    help us use Linux effectively as we follow along with the lessons in this title.
    Next, we will start exploring the pentesting tools that will help us learn pentesting.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探索了Linux中的基本命令。这些命令将帮助我们有效地使用Linux，以便我们能够跟上本标题中的课程。接下来，我们将开始探索将帮助我们学习渗透测试的渗透测试工具。
- en: Pentesting tools
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试工具
- en: In pentesting, you will have copious amounts of tools at your disposal to meet
    all your needs. Besides using tools for manual testing, automated testing, or
    even writing your own scripts – which we will do in this book – the possibilities
    really are endless when it comes to being creative with testing.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试中，您将拥有大量的工具可供选择，以满足您的所有需求。除了使用手动测试、自动化测试甚至编写自己的脚本之外 - 我们将在本书中进行 - 在测试方面的创造力真的是无限的。
- en: While I encourage you to look at the tools within Kali Linux, we will also take
    a brief look at a couple of tools that we will use quite a bit over this book.
    For this section, let's take a look at NMAP and **Metasploit**. These two tools
    provide very accurate results when it comes to scanning and probing for services
    and vulnerabilities. We will also briefly look at **AWS Inspector**, a fantastic
    tool for vulnerability analysis on EC2 instances.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我鼓励您查看Kali Linux中的工具，但我们还将简要介绍一些我们将在本书中经常使用的工具。在本节中，让我们看一看NMAP和**Metasploit**。这两个工具在扫描和探测服务和漏洞时提供非常准确的结果。我们还将简要介绍**AWS
    Inspector**，这是一个在EC2实例上进行漏洞分析的绝佳工具。
- en: NMAP
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: NMAP
- en: NMAP is a wonderful tool that comes pre-installed within Kali Linux. It is an
    open source tool that is commonly used by network administrators, but it has gained
    popularity in pentesting due to its ability to discover services and open ports
    on multiple hosts at once – this is commonly known as port scanning.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: NMAP是一个在Kali Linux中预先安装的精彩工具。它是一个开源工具，通常被网络管理员使用，但由于其能够同时发现多个主机上的服务和开放端口的能力，它在渗透测试中变得越来越受欢迎
    - 这通常被称为端口扫描。
- en: 'Port scanning is done by probing for a specific port, and if that port is open,
    returning information about that port. There are also various scripts that can
    be run from NMAP that will tell you whether the scanned host is vulnerable to
    a particular issue. Remember how we set up an anonymous server in [*Chapter 1*](B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025)*,
    Building Your AWS Environment*? We can use the following script to detect anonymous
    FTP logins:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 端口扫描是通过探测特定端口来进行的，如果该端口是开放的，就会返回有关该端口的信息。还有各种脚本可以从NMAP运行，告诉你扫描的主机是否容易受到特定问题的影响。还记得我们在[*第1章*]（B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025）*，构建您的AWS环境*中设置了一个匿名服务器吗？我们可以使用以下脚本来检测匿名FTP登录：
- en: '[PRE7]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s break down the command to better understand what''s going on. We will
    break down the switches as they occur in sequence:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解命令以更好地理解发生了什么。我们将按顺序分解开关：
- en: The `-sV` switch enumerates the version of the service. This means that the
    scan output will relay what version of FTP is being used.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sV`开关列举了服务的版本。这意味着扫描输出将传达正在使用的FTP版本。'
- en: The `-sC` switch is for using scripts in conjunction with your scan. In this
    case, it will check for anonymous FTPs.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-sC`开关用于与扫描一起使用脚本。在这种情况下，它将检查匿名FTP。'
- en: The `-p` switch indicates what port(s) to scan. In our case, we only used port
    `21` since we are only probing for port `21`. However, we can scan for more than
    one port.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p`开关表示要扫描的端口。在我们的情况下，我们只使用了端口`21`，因为我们只是探测端口`21`。但是，我们可以扫描多个端口。'
- en: We will discover and use NMAP more as we move through this book. In the meantime,
    please feel free to look at more functions with NMAP. Check out [www.nmap.org](http://www.nmap.org)
    for more information.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们在本书中的进展，我们将更多地发现和使用NMAP。与此同时，请随意查看更多有关NMAP的功能。请访问[www.nmap.org](http://www.nmap.org)获取更多信息。
- en: AWS Inspector
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Inspector
- en: AWS Inspector is a tool available in your AWS environment that runs automated
    security assessments on the EC2 instances within your AWS cloud environment. The
    scanner checks for common vulnerabilities, exposures, and best practices – remediations
    – that will allow you to securely and quickly harden your environment. The drawback
    to AWS Inspector is that there is a service fee, so we will avoid using it in
    this book. However, feel free to read up on the service.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Inspector是您的AWS环境中可用的工具，它在AWS云环境中的EC2实例上运行自动化安全评估。该扫描程序检查常见的漏洞、曝光和最佳实践 -
    修复措施 - 这将使您能够安全快速地加固您的环境。AWS Inspector的缺点是有服务费用，因此我们将在本书中避免使用它。但是，欢迎阅读有关该服务的更多信息。
- en: Metasploit
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Metasploit
- en: 'We mentioned Metasploit in [*Chapter 1*](B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025)*,
    Building Your AWS Environment*, and learned how to update it through our AWS Kali
    instance. Given what we learned about Metasploit in [*Chapter 1*](B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025)*,
    Building Your AWS Environment*, let''s take a quick look at some of its features.
    We are going to access our local instance for this exercise:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[*第1章*]（B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025）*，构建您的AWS环境*中提到了Metasploit，并学习了如何通过我们的AWS
    Kali实例更新它。鉴于我们在[*第1章*]（B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025）*，构建您的AWS环境*中学到的有关Metasploit的知识，让我们快速看一下它的一些特性。我们将访问我们的本地实例进行此练习：
- en: 'Before we do anything, we will need to update Metasploit the same way we did
    before, in [*Chapter 1*](B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025)*, Building
    Your AWS Environment*:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们做任何事情之前，我们需要以与之前相同的方式更新Metasploit，在[*第1章*]（B15630_01_Final_ASB_ePub.xhtml#_idTextAnchor025）*，构建您的AWS环境*中：
- en: '[PRE8]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once you have finished updating Metasploit, get started by starting up the
    program:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您完成了更新Metasploit，就可以开始启动程序了：
- en: '[PRE9]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now that Metasploit is running, let''s test out the port scanning module on
    our own host. This is going to help us understand some of the syntaxes of the
    Metasploit commands. Before we begin, we will need to start up SSH on our host.
    To get started, open a new terminal and type the following command to start up
    SSH:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在Metasploit正在运行，让我们在我们自己的主机上测试一下端口扫描模块。这将帮助我们了解一些Metasploit命令的语法。在开始之前，我们需要在我们的主机上启动SSH。要开始，请打开一个新的终端并输入以下命令以启动SSH：
- en: '[PRE10]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To ensure that the service is running, we can type in the following command:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了确保服务正在运行，我们可以输入以下命令：
- en: '[PRE11]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'If all is up and running, you should see something similar to the output in
    the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切正常运行，您应该看到类似于以下截图中的输出：
- en: '![Figure 2.6 – Output from starting SSH'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.6 - 启动SSH的输出'
- en: '](img/Figure_2.06_B15630.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.06_B15630.jpg)'
- en: Figure 2.6 – Output from starting SSH
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6 - 启动SSH的输出
- en: 'Now that we have SSH started, let''s see what we can do with it and Metasploit:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经启动了SSH，让我们看看我们可以用它和Metasploit做些什么：
- en: 'Go back to your terminal that has Metasploit open and use the `search` command
    to find a TCP port scanner. The syntax should look something similar to `search
    TCP portscan`. One of the first results will be `auxiliary/scanner/portscan/tcp`.
    Let''s use that to scan our machine:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回到您打开Metasploit的终端，并使用`search`命令查找TCP端口扫描程序。语法应该类似于`search TCP portscan`。其中的一个最初的结果将是`auxiliary/scanner/portscan/tcp`。让我们使用它来扫描我们的机器：
- en: '[PRE12]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Once you have the module loaded, type the `options` command to see what parameters
    we need to set. The `options` command lists out all the parameters that are part
    of the module. Different modules will have different parameters that need to be
    set:![Figure 2.7 – Output for the options command
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载模块后，键入`options`命令以查看我们需要设置的参数。`options`命令列出了模块的所有参数。不同的模块将有不同的需要设置的参数：![图2.7
    - 选项命令的输出
- en: '](img/Figure_2.07_B15630.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.07_B15630.jpg)'
- en: Figure 2.7 – Output for the options command
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7 - 选项命令的输出
- en: The only parameter we will need to set in this chapter is `RHOSTS`. Now, `RHOSTS`
    stands for `ifconfig` command to discover the IP of your machine. In this case,
    the IP of my machine is `192.168.1.5`:![Figure 2.8 – Output from running ifconfig
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本章中，我们唯一需要设置的参数是`RHOSTS`。现在，`RHOSTS`代表`ifconfig`命令来发现您的机器的IP。在这种情况下，我的机器的IP是`192.168.1.5`：![图2.8
    - 运行ifconfig的输出
- en: '](img/Figure_2.08_B15630.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.08_B15630.jpg)'
- en: Figure 2.8 – Output from running ifconfig
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8 - 运行ifconfig的输出
- en: 'Now that you know the IP of your machine, type the following command to assign
    it to the `RHOSTS` parameter:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在您知道了您的机器的IP，键入以下命令将其分配给`RHOSTS`参数：
- en: '[PRE13]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Since that is the only parameter we need, go ahead and use the `run` command
    to launch the module against our host. It should discover that SSH has an open
    port:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这是我们需要的唯一参数，请继续使用`run`命令来针对我们的主机启动模块。它应该会发现SSH有一个开放的端口：
- en: '![Figure 2.9 – Output from using the run command'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '![图2.9 - 使用运行命令的输出'
- en: '](img/Figure_2.09_B15630.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.09_B15630.jpg)'
- en: Figure 2.9 – Output from using the run command
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9 - 使用运行命令的输出
- en: As you can see, it shows that port `22` is open! Looking at the output of the
    command shows us that the host scan is 100% complete and shows `22 – TCP OPEN`.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，它显示端口`22`是开放的！查看命令的输出显示主机扫描已经完成100%，并显示`22 - TCP OPEN`。
- en: And just like that, we now know how to set up scanning modules within Metasploit.
    We will be using Metasploit quite a bit throughout this book, and we'll be using
    it for a whole chapter in [*Chapter 9*](B15630_09_Final_ASB_ePub.xhtml#_idTextAnchor381)*,
    Real-Life Pentesting with Metasploit and More!*. Now that we know a little bit
    about using Metasploit, let's move on to look at scripting.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 就像那样，我们现在知道如何在Metasploit中设置扫描模块。我们将在整本书中经常使用Metasploit，并且我们将在[*第9章*](B15630_09_Final_ASB_ePub.xhtml#_idTextAnchor381)*，使用Metasploit进行真实渗透测试等！*中使用它整整一章。现在我们知道了一些关于使用Metasploit的知识，让我们继续看看脚本编写。
- en: Scripting
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚本编写
- en: Scripting is an important – or even essential – part of ethical hacking and
    pentesting. There will be times when you have a tool that isn't working well,
    or you may just need to write a quick script to test an application or service.
    When in doubt, write out a script that will help you achieve the results that
    you need. We'll take a look at some very basic scripting using Python programming
    in **PyCharm**.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本编写是道德黑客和渗透测试的重要-甚至是必不可少的-部分。有时您可能会遇到工具运行不好，或者您可能只需要编写一个快速脚本来测试应用程序或服务。如果有疑问，编写一个脚本将帮助您实现所需的结果。我们将使用**PyCharm**中的Python编程来看一些非常基本的脚本编写。
- en: 'PyCharm is an IDE that allows you to build and run your own code. What separates
    IDEs from using terminals and text editors is the built-in troubleshooting that
    comes packaged in the software. There''s no need to hunt down syntax errors; the
    IDE will highlight issues before you even run the code. This section is going
    to go through installing PyCharm on our local Kali instance and creating a Python
    script that we can debug in a step or two. Don''t feel overwhelmed if you have
    never scripted before; this basic script will give us the general knowledge and
    syntax of what''s needed to move forward with Python:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: PyCharm是一个允许您构建和运行自己代码的IDE。IDE与使用终端和文本编辑器的区别在于软件中打包的内置故障排除。无需寻找语法错误；在运行代码之前，IDE将突出显示问题。本节将介绍在本地Kali实例上安装PyCharm并创建一个Python脚本，我们可以在一两步中进行调试。如果您以前从未编写过脚本，不要感到不知所措；这个基本脚本将为我们提供前进Python所需的一般知识和语法：
- en: 'To start, we are going to need to install PyCharm on our local Kali machine.
    To do so, you''ll need to get a current download of it, which you can retrieve
    from JetBrains: [https://www.jetbrains.com/pycharm/download/](https://www.jetbrains.com/pycharm/download/).'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要在本地Kali机器上安装PyCharm。为此，您需要获取当前的下载，您可以从JetBrains获取：[https://www.jetbrains.com/pycharm/download/](https://www.jetbrains.com/pycharm/download/)。
- en: 'Download a free version of the community edition and then move it to our working
    folder:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载免费的社区版，然后将其移动到我们的工作文件夹中：
- en: '[PRE14]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Once it''s moved over, you''ll want to go ahead and extract all the content
    from the folder, and then move it to the `/opt` folder:'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦移动过去，你会想继续提取文件夹中的所有内容，然后将其移动到`/opt`文件夹中：
- en: '[PRE15]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now that we have it extracted, we can move on and run the program. To get started,
    move into the `/bin` folder and run the following command:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经提取了它，我们可以继续并运行程序。要开始，请进入`/bin`文件夹并运行以下命令：
- en: '[PRE16]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Once you're done installing PyCharm, create a new project and name it `Script`.
    This will be our working folder where we can make all our scripts throughout this
    book. Feel free to call your folder anything you like, but make sure you remember
    the name and where you store it:![Figure 2.10 – Creating a new project in PyCharm
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装PyCharm后，创建一个新项目并命名为`Script`。这将是我们的工作文件夹，我们可以在整本书中制作所有我们的脚本。随意给您的文件夹取任何您喜欢的名字，但请确保您记住名称和存储位置：![图2.10
    - 在PyCharm中创建一个新项目
- en: '](img/Figure_2.10_B15630.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_2.10_B15630.jpg)'
- en: Figure 2.10 – Creating a new project in PyCharm
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10 - 在PyCharm中创建一个新项目
- en: 'Now that we have a folder, let''s make a program called `1`. This will automatically
    store the file as `1.py`. To get started, right-click on your folder and create
    a new file. Then, assign it a name; in this case, assign it the name `1`. Click
    `statement` variable has the text that matches the `if` condition. Let''s see
    what happens if we change the statement to *Hello World!*:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们有了一个文件夹，让我们创建一个名为`1`的程序。这将自动将文件存储为`1.py`。要开始，请右键单击文件夹并创建一个新文件。然后，为它分配一个名称；在这种情况下，为它分配名称`1`。点击`statement`变量具有与`if`条件匹配的文本。让我们看看如果将声明更改为*Hello
    World!*会发生什么：
- en: '[PRE17]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Chances are that you will get the other statement of *That statement is not
    correct*. This is due to the syntax of the variable not matching the condition
    set by the `if` statement. The condition was supposed to be "Hello World," not
    "Hello World!" – therefore making the condition invalid.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能你会得到另一个声明*该声明不正确*。这是由于变量的语法与`if`语句设置的条件不匹配。条件应该是“Hello World”，而不是“Hello World！”-因此使条件无效。
- en: Take some time to look at how Python works. There are many resources that will
    highlight the basics of Python and its usage in security and pentesting. Later
    on in this book, we will discover ways to use Python to write scripts for our
    AWS environment.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 花些时间了解Python的工作原理。有许多资源可以突出Python的基础知识以及其在安全和渗透测试中的用法。在本书的后面，我们将发现如何使用Python为我们的AWS环境编写脚本的方法。
- en: Operating systems
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统
- en: On your pentesting journey, you will come across multiple different operating
    systems. Various operating systems have different uses, including as servers,
    host clients, or cloud environments. It's important to understand these various
    operating systems because you will need to understand the ways they work in their
    environments. For this section, we will discuss some aspects of Linux and Windows
    systems that you ought to know about when pentesting.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的渗透测试旅程中，您将遇到多种不同的操作系统。各种操作系统具有不同的用途，包括作为服务器、主机客户端或云环境。了解这些各种操作系统很重要，因为您需要了解它们在其环境中的工作方式。在本节中，我们将讨论渗透测试时应该了解的Linux和Windows系统的一些方面。
- en: Linux/Unix
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux/Unix
- en: Linux is an open source operating system based on the Unix platform. It's seen
    on quite a few devices and servers that we currently use, so it's important that
    you understand some of the basics about it. It is open source, so it has an open
    platform for collaboration that allows other developers to work on it, meaning
    you can add your own code and bug fixes.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Linux是基于Unix平台的开源操作系统。它出现在我们目前使用的许多设备和服务器上，因此重要的是您了解一些基本知识。它是开源的，因此具有开放的协作平台，允许其他开发人员对其进行工作，这意味着您可以添加自己的代码和错误修复。
- en: Linux comes in many different "flavors" of operating system, such as Debian
    – which Kali is – Fedora, and Ubuntu, to name a few. Expect to come across some
    of these systems in your IT career, and even in this book!
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: Linux有许多不同的操作系统“风味”，例如Debian - Kali就是其中之一，Fedora和Ubuntu等。在您的IT职业生涯中，甚至在本书中，都可能会遇到其中一些系统！
- en: Linux file permissions
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Linux文件权限
- en: 'It''s important to understand how Linux filesystems work. Linux filesystems
    are what are known as **flat filesystems**, meaning that every file within the
    operating system must have a different name. The files in the operating system
    are created with three different permissions that can be set:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 了解Linux文件系统的工作原理很重要。Linux文件系统被称为**扁平文件系统**，这意味着操作系统中的每个文件必须具有不同的名称。操作系统中的文件具有三种不同的权限可以设置：
- en: 'Read: Allows users to read files'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取：允许用户读取文件
- en: 'Write: Allows users to write to files'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入：允许用户写入文件
- en: 'Execute: Allows users to execute programs'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行：允许用户执行程序
- en: 'This is important to know because there will be times where you will need to
    know or set the permissions of a file. In pentesting, you will come across open
    source tools that you may need to edit and then set as an executable. The `chmod`
    command allows you to change the permissions of a file to make it an executable.
    For example, if we had a file named `pentest.py` and needed to set it to be an
    executable, we could use the following command to create the executable:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这很重要，因为有时您需要了解或设置文件的权限。在渗透测试中，您将遇到需要编辑然后设置为可执行文件的开源工具。`chmod`命令允许您更改文件的权限以使其成为可执行文件。例如，如果我们有一个名为`pentest.py`的文件，并且需要将其设置为可执行文件，我们可以使用以下命令创建可执行文件：
- en: '[PRE18]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Sometimes, you may not have the rights to run programs like this. You may need
    additional privileges to run commands or even move around in certain directories.
    To unlock these privileges, let's talk about the **superuser**.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能没有权限运行此类程序。您可能需要额外的特权来运行命令，甚至在某些目录中移动。要解锁这些特权，让我们谈谈**超级用户**。
- en: sudo
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: sudo
- en: '`sudo`, which stands for **superuser do**, will run any command that follows
    it as the superuser:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`sudo`代表**superuser do**，将以超级用户身份运行其后的任何命令：'
- en: '[PRE19]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: All `sudo` users are stored in the `/etc/sudoers` file path and can only be
    edited by using the `visudo` command. Feel free to check out the file path in
    your local Kali instance.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 所有`sudo`用户都存储在`/etc/sudoers`文件路径中，只能通过使用`visudo`命令进行编辑。随时可以在本地Kali实例中检查文件路径。
- en: 'Now that we know a little more about Linux, let''s take a look at one of the
    operating systems that we have all used at one point in time in our lives: the
    Windows operating system.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对Linux有了更多了解，让我们来看看我们生活中曾经使用过的操作系统之一：Windows操作系统。
- en: Windows
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: Windows is an operating system that everyone has more than likely used at one
    point in their lives. It's the most common home user operating system and is often
    used as the user operating system for many different companies. While the operating
    system does prove easy to use, with its amazing desktop environment and everything
    being a click and drag away, the operating system has had some backlash over recent
    years because of vulnerabilities and certain UI and UX decisions in newer versions.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: Windows是每个人在生活中很可能都使用过的操作系统。它是最常见的家庭用户操作系统，通常用作许多不同公司的用户操作系统。虽然该操作系统易于使用，具有令人惊叹的桌面环境，一切都可以通过点击和拖动来完成，但由于漏洞和新版本中的某些UI和UX决策，该操作系统在近年来遭受了一些抨击。
- en: Many different exploits have targeted Windows operating systems over the years.
    For instance, there was **EternalBlue**, an exploit that attacks the **Server
    Message Block** service and allows attackers to gain access to victims' systems.
    This exploit was actually used to exploit systems and then use those systems as
    a server for a ransomware payload that generated a lot of headaches a few years
    back.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，许多不同的漏洞利用已针对Windows操作系统。例如，有**EternalBlue**，一种攻击**服务器消息块**服务的漏洞利用，允许攻击者访问受害者的系统。实际上，这种漏洞利用被用于利用系统，然后使用这些系统作为勒索软件有效载荷的服务器，几年前造成了许多麻烦。
- en: Other exploits and issues have been seen to target Windows systems over the
    years. EternalBlue was just one example, but an important one to highlight and
    understand why patching and security is so important. If a Windows system is left
    vulnerable, it could cause issues on a large scale.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，其他漏洞和问题也已经被发现针对Windows系统。EternalBlue只是一个例子，但是一个重要的例子，突出了为什么补丁和安全性如此重要。如果Windows系统存在漏洞，可能会在大规模上造成问题。
- en: GUI
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图形用户界面
- en: One of the biggest differences between Linux and Windows is the `kali - undercover`
    in a Terminal.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Linux和Windows之间最大的区别之一是终端中的“kali-undercover”。
- en: Summary
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter covered quite a bit, so please go back through it if you feel the
    need to. We learned about what pentesting is and how to set up Kali Linux locally
    on our machine and use various tools within the operating system, and we looked
    at various operating systems.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了相当多的内容，所以如果有需要，请返回查看。我们学习了什么是渗透测试，以及如何在我们的机器上本地设置Kali Linux并在操作系统中使用各种工具，我们还研究了各种操作系统。
- en: In the next chapter, we will be moving into the next section of this book and
    begin looking at AWS and how to conduct pentesting and security assessments within
    our own environment.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将进入本书的下一部分，并开始研究AWS以及如何在我们自己的环境中进行渗透测试和安全评估。
- en: Further reading
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Learn more about AWS Inspector: https://aws.amazon.com/inspector/'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解更多关于AWS Inspector的信息：https://aws.amazon.com/inspector/
- en: 'Python website and resources: https://www.python.org'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python网站和资源：https://www.python.org
- en: 'NMAP website and resources: https://www.nmap.org'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NMAP网站和资源：https://www.nmap.org
