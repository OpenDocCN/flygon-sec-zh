- en: Botnet Detection with Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习下的僵尸网络检测
- en: Nowadays, connected devices play an important role in modern life. From smart
    home appliances, computers, coffee machines, and cameras, to connected cars, this
    huge shift in our lifestyles has made our lives easier. Unfortunately, these exposed
    devices could be attacked and accessed by attackers and cyber criminals who could
    use them later to enable larger-scale attacks. Security vendors provide many solutions
    and products to defend against botnets, but in this chapter, as we did in previous
    chapters, we are going to learn how to build novel botnet detection systems with
    Python and machine learning techniques.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，连接设备在现代生活中扮演着重要角色。从智能家居电器、计算机、咖啡机和摄像头，到连接的汽车，我们生活方式的巨大转变使我们的生活变得更加轻松。不幸的是，这些暴露的设备可能会受到攻击，并且攻击者和网络犯罪分子可能会稍后使用它们来实施更大规模的攻击。安全供应商提供了许多解决方案和产品来防御僵尸网络，但在本章中，就像我们在之前的章节中所做的那样，我们将学习如何使用Python和机器学习技术构建新颖的僵尸网络检测系统。
- en: 'In this chapter, we will see:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到：
- en: An overview of botnets
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 僵尸网络概述
- en: How to build a botnet detector with different machine learning algorithms
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用不同的机器学习算法构建僵尸网络检测器
- en: How to build a Twitter bot detector
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何构建Twitter僵尸网络检测器
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: You will find all the code discussed, in addition to some other useful scripts,
    in the following repository: [https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter5](https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter5).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在以下存储库中找到所有讨论的代码，以及其他一些有用的脚本：[https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter5](https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter5)。
- en: Botnet overview
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 僵尸网络概述
- en: 'Botnet is a combination of the two terms **bot** and **net**. The bot part
    represents the fact that this malware automates things and tasks like a robot.
    The second part refers to a network, in other words, a network of compromised
    devices. So, by definition, a botnet is a form of malware that attacks computers
    on the internet and controls them with command and control servers to perform
    a wide variety of automated tasks, including sending spam emails and performing **Distributed
    Denial of Service** (**DDoS**) attacks. Attacked machines join an immense network
    of compromised machines. One of the most notable botnets in previous years was
    the *Mirai botnet*. Mirai means *the future* in Japanese. This botnet hit millions
    of online devices, especially **Internet of Things** (**IoT**) appliances, by
    scanning and identifying vulnerable machines, taking advantage of the fact that
    most of them are accessed using default login credentials. Some of the tasks performed
    by botnets are:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 僵尸网络是**bot**和**net**两个术语的组合。bot部分表示这种恶意软件自动化事物和任务，就像机器人一样。第二部分指的是网络，换句话说，是一组受损设备的网络。因此，根据定义，僵尸网络是一种恶意软件，它攻击互联网上的计算机，并通过命令和控制服务器控制它们执行各种自动化任务，包括发送垃圾邮件和执行**分布式拒绝服务**（**DDoS**）攻击。受攻击的机器加入了一个庞大的受损机器网络。以前几年最引人注目的僵尸网络之一是*Mirai僵尸网络*。Mirai在日语中意为*未来*。这个僵尸网络攻击了数百万在线设备，特别是**物联网**（**IoT**）设备，通过扫描和识别易受攻击的机器，利用大多数设备使用默认登录凭据的事实。僵尸网络执行的一些任务包括：
- en: Advertising fraud and sending spam emails
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 广告欺诈和发送垃圾邮件
- en: Cryptocurrency mining
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密货币挖矿
- en: Stealing personal data and sensitive information
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 窃取个人数据和敏感信息
- en: Performing DDoS attacks
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行DDoS攻击
- en: Performing brute force attacks
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行暴力攻击
- en: 'The following diagram describes the different actors of a botnet ecosystem:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表描述了僵尸网络生态系统的不同参与者：
- en: '![](img/00116.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00116.jpeg)'
- en: 'Hacking is a methodological task. Criminals and cyber attackers usually use
    the same defined steps. As you are penetration testers and information security
    professionals, you are aware of the hacking phases, which are information gathering,
    or what we call reconnaissance; scanning; gaining access; maintaining access;
    and finally clearing tracks. Thus, botnets usually respect some defined steps.
    Botnets work based on four different phases:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客是一项有方法的任务。罪犯和网络攻击者通常使用相同的定义步骤。作为渗透测试人员和信息安全专业人员，您了解黑客阶段，即信息收集，或者我们所说的侦察；扫描；获取访问权限；保持访问权限；最后清除痕迹。因此，僵尸网络通常遵循一些定义的步骤。僵尸网络基于四个不同的阶段工作：
- en: '**Infection**: In this phase, the attackers infect the targeted machines by
    sending the malware.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**感染**：在这个阶段，攻击者通过发送恶意软件感染目标机器。'
- en: '**Connection**: In this phase, the botnet initiates an internet connection
    with the control and command server to receive the commands and automated tasks.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接**：在这个阶段，僵尸网络与控制和命令服务器建立互联网连接，以接收命令和自动任务。'
- en: '**Control**: In this phase, the attack occurs, for example, sending spam emails.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**控制**：在这个阶段，攻击发生，例如发送垃圾邮件。'
- en: '**Multiplication**: In this phase, the botnet will try to compromise more machine
    to join them in the network and become what we call **zombies**:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**繁殖**：在这个阶段，僵尸网络将尝试感染更多的机器加入网络，并成为我们所说的**僵尸**：'
- en: '![](img/00117.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00117.jpeg)'
- en: Building a botnet detector model with multiple machine learning techniques
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用多种机器学习技术构建僵尸网络检测器模型
- en: In this section, we are going to learn how to build different botnet detection
    systems with many machine learning algorithms. As a start to a first practical
    lab, let's start by building a machine learning-based botnet detector using different
    classifiers. By now, I hope you have acquired a clear understanding about the
    major steps of building machine learning systems. So, I believe that you already
    know that, as a first step, we need to look for a dataset. Many educational institutions
    and organizations are given a set of collected datasets from internal laboratories.
    One of the most well known botnet datasets is called the **CTU-13** dataset. It
    is a labeled dataset with botnet, normal, and background traffic delivered by
    CTU University, Czech Republic. During their work, they tried to capture real
    botnet traffic mixed with normal traffic and background traffic. To download the
    dataset and check out more information about it, you can visit the following link: [https://mcfp.weebly.com/the-ctu-13-dataset-a-labeled-dataset-with-botnet-normal-and-background-traffic.html](https://mcfp.weebly.com/the-ctu-13-dataset-a-labeled-dataset-with-botnet-normal-and-background-traffic.html).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何使用许多机器学习算法构建不同的僵尸网络检测系统。作为第一个实验室的开始，让我们通过使用不同的分类器构建基于机器学习的僵尸网络检测器。到目前为止，我希望您已经清楚地了解了构建机器学习系统的主要步骤。因此，我相信您已经知道，作为第一步，我们需要寻找一个数据集。许多教育机构和组织都提供了从内部实验室收集的数据集。最知名的僵尸网络数据集之一称为**CTU-13**数据集。这是捷克共和国CTU大学提供的带有僵尸网络、正常和背景流量的标记数据集。在他们的工作中，他们试图捕获真实的僵尸网络流量与正常流量和背景流量混合在一起。要下载数据集并查看更多信息，您可以访问以下链接：[https://mcfp.weebly.com/the-ctu-13-dataset-a-labeled-dataset-with-botnet-normal-and-background-traffic.html](https://mcfp.weebly.com/the-ctu-13-dataset-a-labeled-dataset-with-botnet-normal-and-background-traffic.html)。
- en: 'The dataset is bidirectional NetFlow files. But what are bidirectional NetFlow
    files? Netflow is an internet protocol developed by Cisco. The goal of this protocol
    is to collect IP traffic information and monitor network traffic in order to have
    a clearer view about the network traffic flow. The main components of a NetFlow
    architecture are a **NetFlow Exporter**, a **Netflow collector**, and a **Flow
    Storage**. The following diagram illustrates the different components of a NetFlow
    infrastructure:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集是双向NetFlow文件。但是什么是双向NetFlow文件？Netflow是由思科开发的互联网协议。该协议的目标是收集IP流量信息并监视网络流量，以便更清晰地了解网络流量流动。NetFlow架构的主要组件是**NetFlow
    Exporter**、**Netflow收集器**和**流存储**。以下图示了NetFlow基础设施的不同组件：
- en: '![](img/00118.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00118.jpeg)'
- en: 'When it comes to NetFlow generally, when host A sends an information to **host
    B** and from **host B** to **host A** as a reply, the operation is named unidirectional
    NetFlow. The sending and the reply are considered different operations. In bidirectional
    NetFlow, we consider the flows from **host A** and **host B** as one flow. Let''s
    download the dataset by using the following command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 就NetFlow而言，当主机A向**主机B**发送信息，然后从**主机B**回复给**主机A**时，该操作被称为单向NetFlow。发送和回复被视为不同的操作。在双向NetFlow中，我们将来自**主机A**和**主机B**的流视为一个流。通过以下命令下载数据集：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/00119.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00119.jpeg)'
- en: 'Extract the downloaded `tar.bz2` file by using the following command:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下命令提取下载的`tar.bz2`文件：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/00120.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00120.jpeg)'
- en: 'The file contains all the datasets, with the different scenarios. For the demonstration,
    we are going to use dataset 8 (scenario 8). You can select any scenario or you
    can use your own collected data, or any other `.binetflow` files delivered by
    other institutions:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 该文件包含所有数据集，具有不同的场景。为了演示，我们将使用数据集8（场景8）。您可以选择任何场景，也可以使用自己收集的数据，或者其他机构提供的任何其他`.binetflow`文件：
- en: '![](img/00121.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00121.jpeg)'
- en: 'Load the data using pandas as usual:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用pandas通常加载数据：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Exploring the data is essential in any data-centric project. For example, you
    can start by checking the names of the features or the columns:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何数据中心项目中，探索数据是至关重要的。例如，您可以从检查特征或列的名称开始：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The command results in the columns of the dataset: `StartTime`, `Dur`, `Proto`,
    `SrcAddr`, `Sport`, `Dir`, `DstAddr`, `Dport`, `State`, `sTos`, `dTos`, `TotPkts`,
    `TotBytes`, `SrcBytes`, and `Label`. The columns represent the features used in
    the dataset; for example, `Dur` represents duration, `Sport` represent the source
    port, and so on. You can find the full list of features in the chapter''s GitHub
    repository.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令会显示数据集的列：`StartTime`、`Dur`、`Proto`、`SrcAddr`、`Sport`、`Dir`、`DstAddr`、`Dport`、`State`、`sTos`、`dTos`、`TotPkts`、`TotBytes`、`SrcBytes`和`Label`。这些列代表数据集中使用的特征；例如，`Dur`代表持续时间，`Sport`代表源端口，依此类推。您可以在本章的GitHub存储库中找到特征的完整列表。
- en: Before training the model, we need to build some scripts to prepare the data.
    This time, we are going to build a separate Python script to prepare data, and
    later we can just import it into the main script.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练模型之前，我们需要构建一些脚本来准备数据。这一次，我们将构建一个单独的Python脚本来准备数据，稍后我们可以将其导入到主脚本中。
- en: 'I will call the first script `DataPreparation.py`. There are many proposals
    done to help extract the features and prepare data to build botnet detectors using
    machine learning. In our case, I customized two new scripts inspired by the data
    loading scripts built by *NagabhushanS*:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我将称第一个脚本为`DataPreparation.py`。有许多提案可以帮助提取特征并准备数据以构建使用机器学习的僵尸网络检测器。在我们的案例中，我根据*NagabhushanS*构建的数据加载脚本定制了两个新脚本：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After importing the required Python packages, we created a class called `Prepare`
    to select training and testing data:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在导入所需的Python包后，我们创建了一个名为`Prepare`的类来选择训练和测试数据：
- en: '[PRE5]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The second script is called `LoadData.py`. You can find it on GitHub and use
    it directly in your projects to load data from `.binetflow` files and generate
    a `pickle` file.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个脚本称为`LoadData.py`。您可以在GitHub上找到它，并直接在您的项目中使用它来从`.binetflow`文件中加载数据并生成一个`pickle`文件。
- en: Let's use what we developed previously to train the models. After building the
    data loader and preparing the machine learning algorithms that we are going to
    use, it is time to train and test the models.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用之前开发的内容来训练模型。构建数据加载器并准备我们将要使用的机器学习算法后，是时候训练和测试模型了。
- en: 'First, load the data from the `pickle` file, which is why we need to import
    the `pickle` Python library. Don''t forget to import the previous scripts using:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，从`pickle`文件中加载数据，这就是为什么我们需要导入`pickle` Python库。不要忘记使用以下代码导入之前的脚本：
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Select the data sections:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 选择数据部分：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](img/00122.gif)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00122.gif)'
- en: 'As machine learning classifiers, we are going to try many different algorithms
    so later we can select the best algorithm for our model. Import the required modules
    to use four machine learning algorithms from `sklearn`:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作为机器学习分类器，我们将尝试许多不同的算法，以便稍后可以选择最适合我们模型的算法。导入所需的模块以使用`sklearn`中的四种机器学习算法：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Prepare the data by using the previous module build. Don''t forget to import
    `DataPreparation` by typing `import DataPreparation`:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用之前的模块构建数据。不要忘记通过输入`import DataPreparation`来导入`DataPreparation`：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now, we can train the models; and to do that, we are going to train the model
    with different techniques so later we can select the most suitable machine learning
    technique for our project. The steps are like what we learned in previous projects:
    after preparing the data and selecting the features, define the machine learning
    algorithm, fit the model, and print out the score after defining its variable.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以训练模型了；为此，我们将使用不同的技术来训练模型，以便稍后可以选择最合适的机器学习技术用于我们的项目。步骤与我们在以前的项目中学到的一样：在准备数据并选择特征之后，定义机器学习算法，拟合模型，并在定义其变量后打印出得分。
- en: 'As machine learning classifiers, we are going to test many of them. Let''s
    start with a decision tree:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 作为机器学习分类器，我们将测试其中许多。让我们从决策树开始：
- en: '**Decision tree model**:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**决策树模型**：'
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](img/00123.gif)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00123.gif)'
- en: The score of the decision tree classifier is 99%
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树分类器的得分为99%
- en: '**Logistic regression model**:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑回归模型**：'
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](img/00124.gif)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00124.gif)'
- en: The score of the logistic regression classifier is 96%
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑回归分类器的得分为96%
- en: '**Gaussian Naive Bayes model**:'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高斯朴素贝叶斯模型**：'
- en: '[PRE13]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](img/00125.gif)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00125.gif)'
- en: The score of the Gaussian Naive Bayes classifier is 72%
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯朴素贝叶斯分类器的得分为72%
- en: '**k-Nearest Neighbors model**:'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**k-最近邻模型**：'
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](img/00126.gif)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00126.gif)'
- en: The score of the k-Nearest Neighbors classifier is 96%
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: k-最近邻分类器的得分为96%
- en: '**Neural network model**:'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**神经网络模型**：'
- en: 'To build a Neural network Model use the following code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建神经网络模型，请使用以下代码：
- en: '[PRE15]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: With this code, we imported the required Keras modules, we built the layers,
    we compiled the model with an SGD optimizer, we fit the model, and we printed
    out the score of the model.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这段代码，我们导入了所需的Keras模块，构建了层，用SGD优化器编译了模型，拟合了模型，并打印出了模型的得分。
- en: How to build a Twitter bot detector
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何构建Twitter机器人检测器
- en: 'In the previous sections, we saw how to build a machine learning-based botnet
    detector. In this new project, we are going to deal with a different problem instead
    of defending against botnet malware. We are going to detect Twitter bots because
    they are also dangerous and can perform malicious actions. For the model, we are
    going to use the *NYU Tandon Spring 2017 Machine Learning Competition: Twitter
    Bot classification* dataset. You can download it from this link: [https://www.kaggle.com/c/twitter-bot-classification/data](https://www.kaggle.com/c/twitter-bot-classification/data). Import
    the required Python packages:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '在之前的部分中，我们看到了如何构建基于机器学习的僵尸网络检测器。在这个新项目中，我们将处理一个不同的问题，而不是防御僵尸网络恶意软件。我们将检测Twitter机器人，因为它们也是危险的，可以执行恶意操作。对于模型，我们将使用*NYU
    Tandon Spring 2017 Machine Learning Competition: Twitter Bot classification*数据集。你可以从这个链接下载它：[https://www.kaggle.com/c/twitter-bot-classification/data](https://www.kaggle.com/c/twitter-bot-classification/data)。导入所需的Python包：'
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Let''s load the data using pandas and highlight the bot and non-bot data:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用pandas加载数据并突出显示机器人和非机器人数据：
- en: '[PRE17]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![](img/00127.gif)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00127.gif)'
- en: Visualization with seaborn
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用seaborn进行可视化
- en: 'In every project, I want to help you discover new data visualization Python
    libraries because, as you saw, data engineering and visualization are essential
    to every modern data-centric project. This time, I chose seaborn to visualize
    the data and explore it before starting the training phase. Seaborn is a Python
    library for making statistical visualizations. The following is an example of
    generating a plot with seaborn:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个项目中，我都想帮助你发现新的数据可视化Python库，因为正如你所看到的，数据工程和可视化对于每个现代数据中心项目都是至关重要的。这一次，我选择了seaborn来可视化数据并在开始训练阶段之前探索数据。Seaborn是一个用于制作统计可视化的Python库。以下是使用seaborn生成图表的示例：
- en: '[PRE18]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](img/00128.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00128.jpeg)'
- en: 'For example, in our case, if we want to identify the missing data:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我们的情况下，如果我们想要识别缺失的数据：
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](img/00129.jpeg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00129.jpeg)'
- en: The previous two code snippets were some examples to learn how to visualize
    data. Visualization helps data scientists to explore and learn more about the
    data. Now, let's go back and continue building our model.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 前两个代码片段是一些学习如何可视化数据的示例。可视化帮助数据科学家探索并了解更多关于数据的信息。现在，让我们回去继续构建我们的模型。
- en: 'Identify the bag of words by selecting some bad words used by Twitter bots.
    The following is an example of bad words used by a bot. Of course, you can add
    more words:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择一些Twitter机器人使用的坏词来识别词袋。以下是机器人使用的坏词的示例。当然，你可以添加更多的词：
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now, it is time to identify training features:'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，是时候识别训练特征了：
- en: '[PRE21]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Feature extraction: Let''s select `features` to use in our model:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特征提取：让我们选择在我们的模型中使用的`features`：
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now, train the model with a decision tree classifier:'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，用决策树分类器训练模型：
- en: '[PRE23]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We import some previously discussed modules:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们导入一些先前讨论过的模块：
- en: '[PRE24]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We define the classifier:'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们定义分类器：
- en: '[PRE25]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'We split the classifier:'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们分割分类器：
- en: '[PRE26]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'We fit the model:'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们拟合模型：
- en: '[PRE27]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We print out the accuracy scores:'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们打印出准确率分数：
- en: '[PRE28]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Our model detects Twitter bots with an 88% detection rate, which is a good accuracy
    rate.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的模型以88%的检测率检测到了Twitter机器人，这是一个很高的准确率。
- en: This technique is not the only possible way to detect botnets. Researchers have
    proposed many other models based on different machine learning algorithms, such
    as Linear SVM and decision trees. All these techniques have an accuracy of 90%.
    Most studies showed that feature engineering was a key contributor to improving
    machine learning models.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术并非检测僵尸网络的唯一可能方式。研究人员提出了许多基于不同机器学习算法的其他模型，例如线性SVM和决策树。所有这些技术的准确率都达到了90%。大多数研究表明，特征工程是改进机器学习模型的关键因素。
- en: To study a real-world case, check out a paper called *What we learn from learning
    - Understanding capabilities and limitations of machine learning in botnet attacks*
    ([https://arxiv.org/pdf/1805.01333.pdf](https://arxiv.org/pdf/1805.01333.pdf)),
    conducted by David Santana, Shan Suthaharan, and Somya Mohanty.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 要研究一个真实案例，可以查看一篇名为*从学习中学到的东西 - 了解机器学习在僵尸网络攻击中的能力和局限性*的论文（[https://arxiv.org/pdf/1805.01333.pdf](https://arxiv.org/pdf/1805.01333.pdf)），作者是David
    Santana，Shan Suthaharan和Somya Mohanty。
- en: Summary
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter was a lightweight guide to learning about botnet fundamentals and
    how to build a machine learning-based detector using different techniques. Also,
    we discussed how to identify Twitter bots. The next chapter will dive deep into
    anomalies and how to build many projects to identify anomalies using novel approaches.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是一个轻量级指南，介绍了有关僵尸网络基础知识以及如何使用不同技术构建基于机器学习的检测器。此外，我们还讨论了如何识别Twitter机器人。下一章将深入探讨异常情况以及如何使用新方法构建多个项目来识别异常情况。
- en: Questions
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we do after every chapter, we are going to give you the opportunity to practice
    what you learned and evaluate your skills. This chapter''s GitHub repository contains
    a link to a botnet traffic dataset in the `Practice` folder:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在每章结束后，我们都会给你机会练习所学的知识并评估你的技能。本章的GitHub存储库中包含了`Practice`文件夹中的一个僵尸网络流量数据集的链接：
- en: Download the dataset and load it with the pandas library
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载数据集并使用pandas库加载它
- en: Select suitable features
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择合适的特征
- en: Identify the training and testing sets, then export them into a pickle file
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别训练集和测试集，然后将它们导出到一个pickle文件中
- en: Load the pickle file
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载pickle文件
- en: Import a support vector machine classifier and fit the model
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入支持向量机分类器并拟合模型
- en: Train the SVM model
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 训练SVM模型
- en: Print out the accuracy of the model built
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印出构建的模型的准确率
- en: Further reading
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more about botnets and how to detect them with machine learning, I
    highly recommend you check out these useful external links:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于僵尸网络以及如何使用机器学习检测它们的知识，我强烈建议你查看这些有用的外部链接：
- en: '**How botnets expand and how to protect against them:** [https://bitninja.io/blog/2016/01/11/how-botnets-expand-and-how-protect-against-them](https://bitninja.io/blog/2016/01/11/how-botnets-expand-and-how-protect-against-them)'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**僵尸网络如何扩展以及如何保护自己免受它们的侵害：** [https://bitninja.io/blog/2016/01/11/how-botnets-expand-and-how-protect-against-them](https://bitninja.io/blog/2016/01/11/how-botnets-expand-and-how-protect-against-them)'
- en: '**Botnet basics – don''t become a zombie!**: [https://blog.trendmicro.com/botnet-basics/](https://blog.trendmicro.com/botnet-basics/)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**僵尸网络基础知识 - 不要成为僵尸！**： [https://blog.trendmicro.com/botnet-basics/](https://blog.trendmicro.com/botnet-basics/)'
- en: '**Deep neural networks for bot detection**: [https://arxiv.org/abs/1802.04289](https://arxiv.org/abs/1802.04289)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用于僵尸网络检测的深度神经网络**： [https://arxiv.org/abs/1802.04289](https://arxiv.org/abs/1802.04289)'
- en: '**Network-based Detection of IoT Botnet Attacks (N-BaIoT) using deep autoencoders**: [https://arxiv.org/abs/1805.03409](https://arxiv.org/abs/1805.03409)'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用深度自动编码器进行物联网僵尸网络攻击的基于网络的检测（N-BaIoT）**： [https://arxiv.org/abs/1805.03409](https://arxiv.org/abs/1805.03409)'
- en: '**A Hybrid Spectral Clustering and Deep Neural Network Ensemble Algorithm for
    Intrusion Detection in Sensor Networks** ([http://www.covert.io/research-papers/deep-learning-security/A%20Hybrid%20Spectral%20Clustering%20and%20Deep%20Neural%20Network%20Ensemble%20Algorithm%20for%20Intrusion%20Detection%20in%20Sensor%20Networks.pdf](http://www.covert.io/research-papers/deep-learning-security/A%20Hybrid%20Spectral%20Clustering%20and%20Deep%20Neural%20Network%20Ensemble%20Algorithm%20for%20Intrusion%20Detection%20in%20Sensor%20Networks.pdf)
    )'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用于传感器网络入侵检测的混合谱聚类和深度神经网络集成算法** ([http://www.covert.io/research-papers/deep-learning-security/A%20Hybrid%20Spectral%20Clustering%20and%20Deep%20Neural%20Network%20Ensemble%20Algorithm%20for%20Intrusion%20Detection%20in%20Sensor%20Networks.pdf](http://www.covert.io/research-papers/deep-learning-security/A%20Hybrid%20Spectral%20Clustering%20and%20Deep%20Neural%20Network%20Ensemble%20Algorithm%20for%20Intrusion%20Detection%20in%20Sensor%20Networks.pdf)
    )'
- en: '**An Analysis of Recurrent Neural Networks for Botnet Detection Behavior**
    ([http://www.covert.io/research-papers/deep-learning-security/An%20Analysis%20of%20Recurrent%20Neural%20Networks%20for%20Botnet%20Detection%20Behavior.pdf](http://www.covert.io/research-papers/deep-learning-security/An%20Analysis%20of%20Recurrent%20Neural%20Networks%20for%20Botnet%20Detection%20Behavior.pdf))'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用于僵尸网络检测行为的循环神经网络分析** ([http://www.covert.io/research-papers/deep-learning-security/An%20Analysis%20of%20Recurrent%20Neural%20Networks%20for%20Botnet%20Detection%20Behavior.pdf](http://www.covert.io/research-papers/deep-learning-security/An%20Analysis%20of%20Recurrent%20Neural%20Networks%20for%20Botnet%20Detection%20Behavior.pdf))'
