- en: Chapter 6. Assessing Web Applications with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。用Python评估Web应用程序
- en: Web application assessments, or web application penetration tests, are a different
    animal compared to infrastructure assessments. This is dependent on the goals
    of the assessment as well. Web application assessments, like mobile application
    assessments, are all too often approached in the wrong manner. Network or infrastructure
    penetration tests have matured, and clients are becoming wiser in what to expect
    for results. This is not always true for web application or mobile application
    assessments. There are a variety of tools that can be used to analyze applications
    for vulnerabilities, including Metasploit, Nexpose, Nessus, Core Impact, WebInspect,
    AppScan, Acunetix, and many more. Some are far better than others for web application
    vulnerability assessments, but they all have a few things in common. One of these
    things is that they are not a replacement for penetration tests.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用程序评估或Web应用程序渗透测试，与基础设施评估相比是一种不同的动物。这也取决于评估的目标。Web应用程序评估，如移动应用程序评估，往往以错误的方式进行。网络或基础设施渗透测试已经成熟，客户对结果的期望也变得更加明智。但对于Web应用程序或移动应用程序评估并非总是如此。有各种工具可用于分析应用程序的漏洞，包括Metasploit、Nexpose、Nessus、Core
    Impact、WebInspect、AppScan、Acunetix等。其中一些工具对于Web应用程序漏洞评估要好得多，但它们都有一些共同点。其中之一是它们不能替代渗透测试。
- en: These tools have their place, but depending on the scoping of the engagement
    and what weaknesses are trying to be identified, they often fall short. Specific
    products such as WebInspect, AppScan, and Acunetix are appropriate for identifying
    potential vulnerabilities, especially during the **System Development Life Cycle**
    (**SDLC**), but they will report false positives and miss complex multistage exploits.
    Every tool has its place, but even when using tools such as these, relevant risks
    can be missed.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具有它们的用处，但取决于参与范围和试图识别的弱点，它们经常不够。特定产品如WebInspect、AppScan和Acunetix适用于识别潜在的漏洞，特别是在**系统开发生命周期**（**SDLC**）期间，但它们会报告误报并错过复杂的多阶段利用。每个工具都有其用处，但即使使用这些工具，也可能会忽略相关风险。
- en: Now there is a flip side to this coin; a penetration test will not find every
    vulnerability in a web application, but it is not meant to do so anyway. Web application
    penetration tests are focused on identifying systematic developmental problems,
    processes, and critical risks. So, the identified vulnerabilities can be quickly
    remediated, but the specific weaknesses point to larger security practices that
    should be addressed in the overall SDLC.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个硬币的另一面是，渗透测试不会发现Web应用程序中的每个漏洞，但它本来就不是为此而设计的。Web应用程序渗透测试的重点是识别系统性的开发问题、流程和关键风险。因此，识别出的漏洞可以迅速得到纠正，但具体的弱点指向应该在整个SDLC中解决的更大的安全实践。
- en: 'The focus of most application penetration tests should involve at least some
    components out of the following, if not all:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数应用程序渗透测试的重点应该涉及以下至少一些组件，如果不是全部：
- en: Analysis of the current **Open Web Application Security Project** (**OWASP**)
    top 10 vulnerabilities.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对当前**开放式Web应用安全项目**（**OWASP**）十大漏洞的分析。
- en: Identification of application areas that leak data or leave residual data traces
    in some locations, which includes undocumented or unlinked pages or directories.
    This is also known as data permanency.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别泄露数据或在某些位置留下残留数据痕迹的应用程序领域，其中包括未记录或未链接的页面或目录。这也被称为数据永久性。
- en: Manners in which a malicious actor could move laterally from one account type
    to another or escalate privileges.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恶意行为者可以从一个帐户类型横向移动到另一个帐户类型或提升权限的方式。
- en: Areas in which the application could provide an attacker with the means to inject
    or manipulate data.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序可能提供攻击者注入或操纵数据的方式的领域。
- en: Ways in which the application could create **Denial of Service** (**DoS**) situations,
    but this is typically accomplished without exploitation or explicit validation
    to prevent any impact on business operations.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序可能创建**拒绝服务**（**DoS**）情况的方式，但通常是在不利用或明确验证的情况下完成，以防止对业务运营造成任何影响。
- en: Finally, how an attacker could penetrate the internal network.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，攻击者如何渗透内部网络。
- en: Consider all of these components and you will see that the use of an application
    scanning tool will not identify all of them. Additionally, a penetration test
    should have specific objectives and goals to identify indicators and issues with
    relevant proof of concepts. Otherwise, if an assessor attempts to identify all
    the vulnerabilities in the application depending on complexity, it could take
    an extensive period of time.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑所有这些组件，你会发现应用程序扫描工具无法识别所有这些组件。此外，渗透测试应该有具体的目标和目标，以识别具有相关概念证明的指示器和问题。否则，如果评估人员试图根据复杂性识别应用程序中的所有漏洞，可能需要很长一段时间。
- en: These recommendations and the application code should be reviewed by the client.
    The client should remediate all the specified locations highlighted by the assessor
    and then follow through and identify other weaknesses the assessor may not have
    identified during the time period. Once completed the SDLC should be updated so
    that future weaknesses are remediated in development. Finally, the more complex
    the application, the more the developers involved; so as you test it, be aware
    of vulnerability heat mapping.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些建议和应用程序代码应该由客户进行审查。客户应该纠正评估人员指出的所有指定位置，然后继续并识别评估人员在此期间可能未能识别的其他弱点。完成后，SDLC应该更新，以便将来的弱点在开发中得到纠正。最后，应用程序越复杂，涉及的开发人员就越多；因此，在测试时，要注意漏洞热图。
- en: Just like penetration testers, developers can have varied levels of skills,
    and if the organization's SDLC is not very mature, the grade of vulnerability
    in the application areas can vary for each development team. We call this vulnerability
    heat mapping, where some places in an application we will have more vulnerabilities
    than others. This typically means that the developer, or developers, did not have
    the necessary skills to deliver the product at the same level as the other teams.
    Areas where there are more vulnerabilities may also indicate that there are more
    critical vulnerabilities. So, if you notice that a specific area of an application
    is lighting up like a Christmas tree with weaknesses, elevate the type of attack
    vectors you are looking at.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 就像渗透测试人员一样，开发人员的技能水平可能各不相同，如果组织的SDLC不够成熟，应用程序领域的漏洞等级可能会因每个开发团队的不同而有所不同。我们称之为漏洞热图，即应用程序中的某些地方可能比其他地方有更多的漏洞。这通常意味着开发人员或团队没有必要的技能以与其他团队相同的水平交付产品。存在更多漏洞的区域也可能表明存在更多关键漏洞。因此，如果注意到应用程序的特定区域像圣诞树一样闪烁着弱点，就要提高你所关注的攻击向量的类型。
- en: Depending on the scope of the engagement, start focusing on vulnerabilities
    that will crack the security perimeter, such as **Structured Query Language injection**
    (**SQLi**), **Remote** or **Local File Inclusion** (**RFI**/**LFI**), nonvalidated
    redirects and forwards, unrestricted file uploads, and finally insecure direct
    object references. Each of these vulnerabilities are related to the manipulation
    of the request-and-response model of the application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 根据参与的范围，开始专注于可能破解安全围栏的漏洞，例如**结构化查询语言注入**（**SQLi**）、**远程**或**本地文件包含**（**RFI**/**LFI**）、未经验证的重定向和转发、不受限制的文件上传，最后是不安全的直接对象引用。这些漏洞都与应用程序的请求-响应模型的操纵有关。
- en: Applications typically work on a request-and-response model, with tracking of
    specific user session data with cookies. Therefore, when you write your scripts,
    you have to build them in a method to handle sending data, receiving it, and parsing
    the results for what was expected or not expected. Then, you can create follow-on
    requests to move further ahead.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序通常采用请求-响应模型工作，使用cookie跟踪特定用户会话数据。因此，当编写脚本时，必须以一种处理发送数据、接收数据并解析结果的方法构建它们，以确定是否符合预期。然后，可以创建后续请求以进一步推进。
- en: Identifying live applications versus open ports
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别活动应用程序与开放端口
- en: 'When assessing large environments to include **Content Delivery Networks**
    (**CDN**), you will find that you will be identifying hundreds of open web ports.
    Most of these web ports have no active web applications deployed on those ports,
    so you need to either visit each page or request the web page header. This can
    simply be done by executing a `HEAD` request to both the `http://` and `https://`
    versions of the site. A Python script that uses `urllib2` can execute this very
    easily. This script simply takes a file of the host **Internet Protocol** (**IP**)
    addresses, which then builds the strings that create the relevant **Uniform Resource
    Locator** (**URL**). As each site is requested, if it receives a successful request,
    the data is written to a file:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估包括**内容交付网络**（**CDN**）在内的大型环境时，您会发现会识别出数百个开放的Web端口。这些Web端口中大多数没有部署活动的Web应用程序，因此您需要访问每个页面或请求Web页面头。这可以通过对站点的`http://`和`https://`版本执行`HEAD`请求来简单地完成。使用`urllib2`的Python脚本可以轻松执行此操作。该脚本只需一个主机**互联网协议**（**IP**）地址文件，然后构建创建相关**统一资源定位器**（**URL**）的字符串。当请求每个站点时，如果收到成功的请求，数据将被写入文件：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following screenshot shows the output of this script on the screen as it
    is run:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了脚本在屏幕上运行时的输出：
- en: '![Identifying live applications versus open ports](img/B04315_06_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![识别活动应用程序与开放端口](img/B04315_06_01.jpg)'
- en: Note
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The full version of this script can be found at [https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/headrequest.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/headrequest.py).
    This script can easily be modified so as to execute follow-on tasks, if desired.
    There are already tools such as `PeppingTom` and `EyeWitness` available that accomplish
    this activity better than this script, but understanding how to build this basic
    script will allow you to include additional analysis as necessary.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 完整版本的脚本可以在[https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/headrequest.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/headrequest.py)找到。如果需要，可以轻松修改此脚本以执行后续任务。已经有工具如`PeppingTom`和`EyeWitness`可用，比这个脚本更好地完成这项活动，但是了解如何构建这个基本脚本将使您能够根据需要包含额外的分析。
- en: Identifying hidden files and directories with Python
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python识别隐藏文件和目录
- en: 'When we visit the site of the identified IP address, we see that it is the
    **Damn Vulnerable Web Application** (**DVWA**). We also see that it has appended
    the details of the default landing page to our initial request. This means that
    we start from the `http://192.168.195.145/dvwa/login.php` site as shown in the
    following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们访问已识别的IP地址的网站时，我们发现它是**可恶的易受攻击的Web应用程序**（**DVWA**）。我们还看到它已将默认登陆页面的详细信息附加到我们的初始请求中。这意味着我们从`http://192.168.195.145/dvwa/login.php`网站开始，如下面的屏幕截图所示：
- en: '![Identifying hidden files and directories with Python](img/B04315_06_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![使用Python识别隐藏文件和目录](img/B04315_06_02.jpg)'
- en: We now have a starting location to test from, and using these details, we can
    look for hidden directories and files. Let's modify our last script to automatically
    look for hidden files or directories.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个起点进行测试，并且使用这些详细信息，我们可以寻找隐藏的目录和文件。让我们修改我们的最后一个脚本，自动查找隐藏的文件或目录。
- en: 'The best way to do this is to start within the base directory of the site we
    are in. You can go up levels, but in environments where multiple websites are
    housed, you may end up jumping out of the scope. So, know your environment before
    proceeding to attack in that manner. As you can see, the script runs through a
    file of directories and filenames, which appends them to the target site. We are
    then reported whether they were valid or not:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的最佳方式是从我们所在的站点的基本目录开始。您可以向上级跳转，但在多个网站托管的环境中，您可能会跳出范围。因此，在进行攻击之前，请了解您的环境。如您在下面的截图中所见，该脚本运行文件夹和文件名的文件，并将它们附加到目标站点。然后我们会报告它们是否有效：
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Knowing this, we can load up four of the most common hidden or unlinked locations
    that websites house. These are `admin`, `dashboard`, `robots.txt`, and `config`.
    Using this data, when we run the script, we identify two viable locations, as
    shown in the following screenshot. `Robots.txt` is good, but `config` usually
    means we can find usernames and passwords if the permissions are incorrect or
    if the file is not in use by the web server.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 知道这一点，我们可以加载四个最常见的隐藏或未链接位置，这些位置是网站的`admin`，`dashboard`，`robots.txt`和`config`。使用这些数据，当我们运行脚本时，我们可以识别出两个可行的位置，如下面的截图所示。`Robots.txt`很好，但`config`通常意味着如果权限不正确或文件未被Web服务器使用，我们可以找到用户名和密码。
- en: '![Identifying hidden files and directories with Python](img/B04315_06_03.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用Python识别隐藏文件和目录](img/B04315_06_03.jpg)'
- en: 'As you can see here, we get a listing of the directory''s contents:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在此处所见，我们得到了目录内容的列表：
- en: '![Identifying hidden files and directories with Python](img/B04315_06_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![使用Python识别隐藏文件和目录](img/B04315_06_04.jpg)'
- en: 'Unfortunately, when you open the `config.inc.php` file, as shown in this screenshot,
    nothing is displayed:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，当您打开`config.inc.php`文件时，如此截图所示，没有显示任何内容：
- en: '![Identifying hidden files and directories with Python](img/B04315_06_05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![使用Python识别隐藏文件和目录](img/B04315_06_05.jpg)'
- en: Administrators and support personnel do not always understand the impact of
    some of their actions. When backups are made from `config` files, if they are
    not actively being used, or if the permissions are not correctly set, you can
    often read them through a browser. A backup file on a Linux system is denoted
    by a trailing `~`. We know that it is a Linux system because of the previous `HEAD`
    request, which showed that it was an Ubuntu host.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 管理员和支持人员并不总是理解他们的一些行为所产生的影响。当从`config`文件创建备份时，如果它们没有被积极使用，或者权限设置不正确，你通常可以通过浏览器读取它们。Linux系统上的备份文件以`~`结尾。我们知道这是一个Linux系统，因为之前的`HEAD`请求显示它是一个Ubuntu主机。
- en: Tip
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Remember that headers can be manipulated by administrators and security tools,
    so they should not be trusted as definitive sources of information.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，管理员和安全工具可以操纵标头，因此不应将其视为信息的权威来源。
- en: 'As you can see in the following screenshot, the request opens up a `config`
    file that provides us the details required to access a database server, from which
    we can extract critical data:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在下面的截图中所见，该请求打开了一个`config`文件，为我们提供了访问数据库服务器所需的详细信息，从中我们可以提取关键数据：
- en: '![Identifying hidden files and directories with Python](img/B04315_06_06.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![使用Python识别隐藏文件和目录](img/B04315_06_06.jpg)'
- en: As a penetration tester, you have to be efficient with your time as mentioned
    previously it is one of the obstacles of a successful penetration test. This means
    that when we research the contents of a database, we can also set up some automated
    tools. A simple test would be to use Burp Suite using Intruder.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 作为渗透测试人员，您必须高效利用时间，正如之前提到的，这是成功渗透测试的障碍之一。这意味着当我们研究数据库的内容时，我们也可以设置一些自动化工具。一个简单的测试是使用Burp
    Suite的Intruder功能。
- en: Note
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The full version of the `dirtester.py` script can be found at [https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/dirtester.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/dirtester.py).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 完整版本的`dirtester.py`脚本可以在[https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/dirtester.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/dirtester.py)找到。
- en: Credential attacks with Burp Suite
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Burp Suite进行凭证攻击
- en: Download the Burp Suite free edition from [http://portswigger.net/burp/download.html](http://portswigger.net/burp/download.html)
    and then run it. Make sure you use a browser that will not interfere with the
    assessing of your application testing. Most current browsers will mitigate much
    of your testing automatically, and most of these protective measures cannot be
    turned off, to complete unhindered testing. Firefox has these protection capabilities,
    but they can be turned off for development and security analysis. Additionally,
    the plugin support that Firefox has allows you to assess applications better.
    Many an assessor who has just started has not been able to understand why some
    new **Cross-site Scripting** (**XSS**) attack that they just executed was blocked.
    Often, it is some built-in browser protection in Chrome or Internet Explorer that
    says it is off, but really, it is not.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从[http://portswigger.net/burp/download.html](http://portswigger.net/burp/download.html)下载Burp
    Suite免费版，然后运行它。确保您使用的浏览器不会干扰您的应用程序测试评估。大多数现代浏览器会自动减轻您的测试工作，而且大多数这些保护措施无法关闭，以完成无阻碍的测试。Firefox具有这些保护功能，但可以关闭以进行开发和安全分析。此外，Firefox的插件支持使您能够更好地评估应用程序。许多刚开始的评估人员无法理解为什么他们刚刚执行的一些新的**跨站脚本攻击**（**XSS**）被阻止。通常是Chrome或Internet
    Explorer中的一些内置浏览器保护说它是关闭的，但实际上并非如此。
- en: 'Now, from Firefox, turn on the local proxy support by entering `127.0.0.1`
    and `port 8080` in the manual proxy configuration, as shown here:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，从Firefox中，通过在手动代理配置中输入`127.0.0.1`和`端口8080`来打开本地代理支持，如下所示：
- en: '![Credential attacks with Burp Suite](img/B04315_06_07.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_07.jpg)'
- en: 'While assessing web applications, you would want to restrict your scope to
    only the system you want to test. Make sure that you set this and then filter
    all other targets to clean up your output and prevent yourself from attacking
    other hosts by mistake. This can be done by either right clicking on the host
    in the **Site map** window or clicking on the **Scope** tab and adding it manually,
    as shown in this screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估Web应用程序时，您希望将范围限制在您想要测试的系统上。确保您设置了这一点，然后过滤所有其他目标以清理输出，并防止自己错误地攻击其他主机。这可以通过右键单击**站点地图**窗口中的主机，或单击**范围**选项卡并手动添加来完成，如此截图所示：
- en: '![Credential attacks with Burp Suite](img/B04315_06_08.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_08.jpg)'
- en: Now that Burp has been set up, we can start assessing the DVWA site, which has
    a simple login page that requires a username and a password. When each of these
    web pages are loaded, you have to either disable the **Intercept** mode or click
    on **Forward** to go to the next page. We are going to need the intercept capabilities
    in a few minutes, so we are going to leave that enabled. Basically, Burp Suite—as
    mentioned previously—is a transparent proxy that has all of the specified traffic
    sent between the website and the browser. This allows you to manipulate data and
    traffic in real time, which means that you can have the application perform differently
    than intended.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Burp已经设置好，我们可以开始评估DVWA网站，该网站有一个简单的登录页面，需要用户名和密码。加载每个网页时，您必须禁用**拦截**模式，或单击**转发**以转到下一个页面。我们将在几分钟内需要拦截功能，因此我们将保持启用。基本上，Burp
    Suite——如前所述——是一个透明代理，可以在网站和浏览器之间发送所有指定的流量。这使您可以实时操纵数据和流量，这意味着您可以使应用程序执行与预期不同的操作。
- en: To start this analysis, we have to see how the login page formats its request
    as it is sent to the server so that it can be manipulated. So, we provide a bad
    username and password in the login prompt—the letter `a` for both—and capture
    the request in the proxy. The following image shows the raw capture from the erroneous
    login that was captured by Burp Intruder.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始此分析，我们必须查看登录页面如何格式化其请求，因为它被发送到服务器，以便进行操纵。因此，我们在登录提示中提供错误的用户名和密码——对于用户名和密码都使用字母`a`——并在代理中捕获请求。以下图片显示了Burp
    Intruder捕获的错误登录的原始捕获。
- en: '![Credential attacks with Burp Suite](img/B04315_06_09.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_09.jpg)'
- en: Then, right-click on it, select Send to Intruder, and turn off Intercept in
    the proxy. This allows us to repeatedly manipulate the request sent to the server
    to see whether we can get different responses.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，右键单击它，选择发送到入侵者，并在代理中关闭拦截。这样我们就可以重复操纵发送到服务器的请求，看看是否可以获得不同的响应。
- en: 'Following this pattern, we can configure the attack to run through a list of
    usernames and passwords, and this may grant us access. The click on the **Intruder**
    major tab and the **Position** minor tab. Select the two positions for the originally
    supplied username and password and then select **Cluster Bomb** from the drop-down,
    as shown in the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这种模式，我们可以配置攻击以运行用户名和密码列表，这可能会授予我们访问权限。单击**入侵者**主选项卡和**位置**次要选项卡。选择最初提供的用户名和密码的两个位置，然后从下拉菜单中选择**簇弹**，如下截图所示：
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There are multiple types of intruder attack, and cluster bomb will be the most
    commonly used type in your assessments. More details about intruder attacks can
    be found at [https://support.portswigger.net/customer/portal/articles/1783129-configuring-a-burp-intruder-attack](https://support.portswigger.net/customer/portal/articles/1783129-configuring-a-burp-intruder-attack).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 入侵者攻击有多种类型，簇弹将是您评估中最常用的类型。有关入侵者攻击的更多详细信息，请访问[https://support.portswigger.net/customer/portal/articles/1783129-configuring-a-burp-intruder-attack](https://support.portswigger.net/customer/portal/articles/1783129-configuring-a-burp-intruder-attack)。
- en: '![Credential attacks with Burp Suite](img/B04315_06_10.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_10.jpg)'
- en: Then create two lists; payload set 1 is for the usernames, and payload set 2
    is for the passwords.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后创建两个列表；载荷集1用于用户名，载荷集2用于密码。
- en: '![Credential attacks with Burp Suite](img/B04315_06_11.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_11.jpg)'
- en: Next, select **Always** for following redirections, as logins often create website
    transitions.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择**始终**以跟随重定向，因为登录通常会创建网站转换。
- en: Tip
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The benefit of setting a hard scope for the entire assessment and then using
    intruder to ignore the scope, for instance, is that you know you are not creeping
    into unexpected territory throughout the engagement.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为整个评估设置一个严格的范围，然后使用入侵者忽略范围的好处是，您知道在整个过程中不会擅自进入意外的领域。
- en: '![Credential attacks with Burp Suite](img/B04315_06_13.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_13.jpg)'
- en: Then click on the **Intruder** menu item and select **Start**, which will show
    a new popup. You can identify the viable account by the change in size compared
    to the other results.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后单击**入侵者**菜单项，并选择**开始**，将显示一个新的弹出窗口。您可以通过与其他结果相比的大小变化来识别可行的帐户。
- en: '![Credential attacks with Burp Suite](img/B04315_06_14.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![使用Burp Suite进行凭证攻击](img/B04315_06_14.jpg)'
- en: Now you can gain direct access to the web application, which allows you to move
    through the application.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以直接访问Web应用程序，这使您可以浏览应用程序。
- en: Using twill to walk through the source
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用twill浏览源代码
- en: Python has a library that allows you to browse and interact with web applications
    at the source level. After installing the library, you either import the library
    or use the `twill` shell, called `twill-sh`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Python有一个库，允许您在源级别浏览和与Web应用程序交互。安装库后，您可以导入库，或使用`twill` shell，称为`twill-sh`。
- en: '![Using twill to walk through the source](img/B04315_06_15.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![使用twill浏览源代码](img/B04315_06_15.jpg)'
- en: 'You can then load the target website and review the page''s source with the
    following commands:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然后加载目标网站，并使用以下命令查看页面的源代码：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This simply shows the source code of the site, which allows you to further interact
    with the site.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是显示了网站的源代码，这使您可以进一步与网站交互。
- en: '![Using twill to walk through the source](img/B04315_06_16.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![使用twill浏览源代码](img/B04315_06_16.jpg)'
- en: 'This allows you to interact directly with the components of the site and identify
    what needs to be submitted. The `twill-sh` library has help support when run in
    interactive mode, but it is a limited tool. What twill is good for is interacting
    with the source and identifying potentially interesting areas of a site. It is
    not good for sites that have significant dynamic content or extensive pages. As
    an example, I ran the `info` command to try and identify anything particular about
    the site, like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 这允许你直接与网站的组件进行交互，并确定需要提交的内容。`twill-sh`库在交互模式下运行时提供了帮助支持，但它是一个有限的工具。twill擅长的是与源代码进行交互，并识别网站可能感兴趣的区域。它不适用于具有重要动态内容或广泛页面的网站。例如，我运行了`info`命令，试图识别网站的特定内容，就像这样：
- en: '![Using twill to walk through the source](img/B04315_06_17.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![使用twill浏览源代码](img/B04315_06_17.jpg)'
- en: 'At this basic level, you can understand the content types, data formats and
    other details that can be manipulated within the application, but there are better
    libraries in Python that can be used to achieve the same results as described
    following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个基本水平上，你可以了解应用程序中可以操纵的内容类型、数据格式和其他细节，但在Python中有更好的库可以实现与下面描述的相同的结果：
- en: Understanding when to use Python for web assessments
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解何时使用Python进行Web评估
- en: Python has several libraries that are very useful for executing web application
    assessments, but there are limitations. Python is best used for small automation
    components of web applications that cannot be simulated manually through a transparent
    proxy, such as Burp. What this means is that specific work streams that you find
    in applications may be generated on the fly and cannot be replicated easily through
    a transparent proxy. This is especially true if there are timing concerns. So,
    if you need to interact with the backend server using multiple request and response
    mechanisms, then Python may fit the bill.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Python有几个非常有用的库，用于执行Web应用程序评估，但也有一些限制。Python最适用于无法通过透明代理手动模拟的Web应用程序的小型自动化组件，例如Burp。这意味着你在应用程序中找到的特定工作流可能是临时生成的，无法通过透明代理轻松复制。特别是在涉及时间的问题时。因此，如果你需要使用多个请求和响应机制与后端服务器进行交互，那么Python可能是合适的选择。
- en: Understanding when to use specific libraries
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解何时使用特定的库
- en: There are mainly five libraries that you are going to use while working with
    web applications. Historically, I have used the `urllib2` library the most, and
    this is because of the great features and easy means to prototype code, but the
    library is old. You will find that it is missing some major capabilities and more
    advanced methods of interacting with new age web applications are considered broken,
    this is in comparison to newer libraries as described following. The `httplib2`
    Python library provides robust capabilities when you are interacting with websites,
    but it is significantly more difficult to work with than `urllib2`, `mechanize`,
    `request`, and `twill`. That said, if you are dealing with tricky detection capabilities
    related to proxies, this may be your best option as the header data sent can be
    completely manipulated to perfectly simulate standard browser traffic. This should
    be fully tested in simulated environments before it is used against real applications.
    Often, the library provides erroneous responses simply because of the way the
    client requests were crafted.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理Web应用程序时，主要会使用五个库。在历史上，我最常使用的是`urllib2`库，这是因为它具有很多出色的功能和易于原型代码的方法，但这个库已经过时了。你会发现它缺少一些重要的功能，并且与新时代的Web应用程序交互的更高级方法被认为是不可用的，这与下面描述的新库相比。`httplib2`
    Python库在与网站交互时提供了强大的功能，但与`urllib2`、`mechanize`、`request`和`twill`相比，它要难得多。也就是说，如果你需要处理与代理相关的复杂检测功能，这可能是你最好的选择，因为发送的头部数据可以完全操纵，以完美模拟标准浏览器流量。在使用于真实应用程序之前，应该在模拟环境中进行充分测试。通常，这个库会因为客户端请求的方式而提供错误的响应。
- en: If you come from the Perl world, you might instantly gravitate to `mechanize`
    as your go-to library, but it does not work well with dynamic websites and, in
    some situations, it cannot work with them at all. So what is today's answer? The
    `request` library. It is very clean and provides the necessary capabilities to
    quickly meet today's challenges of complex web engagements. To highlight the differences
    between the two and the prototype code, I have created application credential
    attack scripts using `httplib2` and `request`. The aim of these scripts is to
    identify live credential sets and capture the relevant cookie. Once this is done,
    additional features can be added to either script. Additionally, these two scripts
    highlight the differences between the library sets.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你来自Perl世界，你可能会立即倾向于将`mechanize`作为你的首选库，但它在处理动态网站时效果不佳，在某些情况下甚至根本无法使用。那么今天的答案是什么？`request`库。它非常干净，并提供了满足当今复杂Web交互挑战的必要功能。为了突出这两者之间的差异和原型代码，我使用`httplib2`和`request`创建了应用凭证攻击脚本。这些脚本的目的是识别活动凭证集并捕获相关的cookie。完成后，可以向任一脚本添加其他功能。此外，这两个脚本突出了库集之间的差异。
- en: 'The first example is the `httplib2` version, as shown here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个例子是`httplib2`版本，如下所示：
- en: '![Understanding when to use specific libraries](img/B04315_06_18.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![了解何时使用特定的库](img/B04315_06_18.jpg)'
- en: 'The second is the `request` library version, which can be seen in the following
    screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个是`request`库的版本，可以在下面的截图中看到：
- en: '![Understanding when to use specific libraries](img/B04315_06_19.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![了解何时使用特定的库](img/B04315_06_19.jpg)'
- en: Note
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The request-based script can be found at [https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/request_brute.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/request_brute.py),
    and the `httplib2` script can be found at [https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/httplib2_brute.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/httplib2_brute.py).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 基于请求的脚本可以在[https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/request_brute.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/request_brute.py)找到，`httplib2`脚本可以在[https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/httplib2_brute.py](https://raw.githubusercontent.com/funkandwagnalls/pythonpentest/master/httplib2_brute.py)找到。
- en: As you can see, they are nearly identical in length, but the crafting of the
    statements in the request makes the simulation of web traffic simpler.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，它们的长度几乎相同，但请求中的陈述制作了Web流量模拟变得更简单。
- en: Being efficient during web assessments
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Web评估期间保持高效
- en: The benefit of using scripts like these or Burp would be to analyze parameters
    that could be manipulated, injected, and or brute-forced. Specifically, you are
    able to interact with code features that are not readily apparent through a web
    browser at a speed beyond human interaction. Examples of this include the building
    of exploitation lists for common SQLi or XSS attacks. Build lists of common SQLi
    attacks or XSS attacks. Then load them into the relevant parameters on the websites
    to identify the vulnerabilities. You will have to modify the aforementioned scripts
    to hit the target parameter, but this will significantly speed up the process
    of identifying potential vulnerabilities.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这样的脚本或Burp之类的脚本的好处在于分析可以被操纵、注入或暴力破解的参数。具体来说，您可以与通过Web浏览器无法直接看到的代码功能进行交互，速度超出了人类的交互速度。其中的例子包括构建常见SQLi或XSS攻击的利用列表。构建常见的SQLi攻击或XSS攻击列表。然后将它们加载到网站上的相关参数中，以识别漏洞。您将不得不修改上述脚本以命中目标参数，但这将大大加快识别潜在漏洞的过程。
- en: Note
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Some of the best SQLi lists for common injection types for each database instance
    can be found at [http://pentestmonkey.net/category/cheat-sheet/sql-injection](http://pentestmonkey.net/category/cheat-sheet/sql-injection).
    Equally good XSS lists are available at [https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet](https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet).
    Some of these details are also built into Burp Suite, as highlighted at [https://support.portswigger.net/customer/portal/articles/1783128-Intruder_Common%20Uses.html](https://support.portswigger.net/customer/portal/articles/1783128-Intruder_Common%20Uses.html).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据库实例的常见注入类型的最佳SQLi列表可以在[http://pentestmonkey.net/category/cheat-sheet/sql-injection](http://pentestmonkey.net/category/cheat-sheet/sql-injection)找到。同样好的XSS列表可以在[https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet](https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet)找到。其中一些细节也内置在Burp
    Suite中，如[https://support.portswigger.net/customer/portal/articles/1783128-Intruder_Common%20Uses.html](https://support.portswigger.net/customer/portal/articles/1783128-Intruder_Common%20Uses.html)中所强调的。
- en: Today, we have to contend with **Web Application Firewalls** (**WAFs**) and
    protection tools that can be bypassed, but you need to know how these protections
    are set up and what character encoding can bypass them. Remember if there are
    white or black lists they are keyed on specific character sets and/or encoding,
    which may block your exploitation attempts. By automating the testing, we can
    identify the items that key on captures that prevent the exploitation the web
    applications, and from that we can tailor our injections to bypass the protections
    put in place.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们必须应对**Web应用程序防火墙**（**WAFs**）和可以被绕过的保护工具，但您需要了解这些保护是如何设置的，以及什么样的字符编码可以绕过它们。请记住，如果存在白名单或黑名单，它们是基于特定字符集和/或编码的，这可能会阻止您的利用尝试。通过自动化测试，我们可以识别那些基于捕获的项目，防止利用Web应用程序，并且我们可以根据此定制我们的注入以绕过已经设置的保护。
- en: Tip
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Character encoding for web application assessments is completely different from
    generating payloads. So, you should understand that these statements are not contradictory.
    The majority of WAFs do not smartly detect and decode data prior to comparing
    it with their white lists and/or black lists. So, you can bypass these protection
    mechanisms by changing the character format into something that an application
    can understand but the WAF cannot.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Web应用程序评估的字符编码与生成有效载荷完全不同。因此，您应该了解这些陈述并不矛盾。大多数WAF并不会在将数据与其白名单和/或黑名单进行比较之前智能地检测和解码数据。因此，您可以通过将字符格式更改为应用程序可以理解但WAF无法理解的内容来绕过这些保护机制。
- en: This is important for tools such as `sqlmap`, which is fantastic for verifying
    SQLi, but it should have its request tailored. It should be used only after you
    have confirmed that there is a plausible injection vulnerability. Then it should
    be used to build a proof of concept, extract data, or compromise systems. Loading
    up `sqlmap` to hit every parameter just to look for SQLi is a very time-consuming
    process. It can provide potential false positives and break systems.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于诸如`sqlmap`之类的工具非常重要，它非常适用于验证SQLi，但它的请求应该定制。只有在确认存在可疑的注入漏洞后才应使用它。然后应该用它来构建概念验证，提取数据或者妥协系统。加载`sqlmap`来命中每个参数以寻找SQLi是一个非常耗时的过程。它可能会提供潜在的误报并破坏系统。
- en: Tip
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Remember that if you do not customize your parameters and the request passed
    to `sqlmap`, it will likely turn non-blind injection attacks into blind injection
    attacks, which will significantly impact the time it takes to finish its task.
    The tool is probably the best in the market for what it does, but without a smart
    user, it will sometimes get lost.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果您不自定义参数和传递给`sqlmap`的请求，它可能会将非盲注入攻击转变为盲注入攻击，这将显著影响完成任务所需的时间。该工具可能是市场上最好的工具，但没有聪明的用户，它有时会迷失方向。
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed what the difference between web application assessments
    and normal network assessments is. The method of identifying live web pages versus
    open ports was highlighted, and we demonstrated how to identify unlinked or hidden
    content and execute credential attacks with Burp. Additionally, this chapter demonstrated
    how to walk through websites with twill, extract data, and then create scripts
    that will allow request-response trains to be built using different libraries.
    The wrap-up for this chapter highlighted how to be efficient by using scripts
    and open source tools to examine sites for specific vulnerabilities.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了Web应用程序评估和普通网络评估之间的区别。强调了识别活动网页与开放端口的方法，并演示了如何使用Burp识别未链接或隐藏的内容并执行凭据攻击。此外，本章还演示了如何使用twill浏览网站，提取数据，然后创建脚本，以便使用不同的库构建请求-响应链。本章的总结强调了如何通过使用脚本和开源工具来检查特定漏洞的站点以提高效率。
- en: In the next chapter, we will see how we can use techniques such as these and
    other weaknesses to crack the perimeter of an organization.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何利用这些技术和其他弱点来攻破组织的边界。
