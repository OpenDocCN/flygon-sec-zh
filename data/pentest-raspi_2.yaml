- en: Chapter 2. Preparing the Raspberry Pi
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。准备树莓派
- en: The Raspberry Pi should be considered an underpowered platform for security
    assessments. This is because it has been designed as a low-cost, portable computer
    primarily targeting educationalists and hobbyists. This open platform may be limited
    in computing power, but it does provide many powerful use cases that security
    professionals can leverage for penetration testing and other service engagements.
    The focus of this chapter will be on how to prepare a Raspberry Pi running Kali
    Linux (or other platforms) for a penetration test.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派应该被视为一个性能不足的安全评估平台。这是因为它被设计为一个低成本、便携式计算机，主要面向教育工作者和爱好者。这个开放平台在计算能力上可能有限，但它确实提供了许多强大的用例，安全专业人员可以利用它进行渗透测试和其他服务。本章的重点将是如何准备运行Kali
    Linux（或其他平台）的树莓派进行渗透测试。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Raspberry Pi use cases
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派用例
- en: The Command and Control server
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指挥和控制服务器
- en: Preparing for a penetration test
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为渗透测试做准备
- en: Overclocking
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超频
- en: Setting up wireless cards
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置无线网卡
- en: Setting up a 3G USB modem with Kali Linux
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Kali Linux设置3G USB调制解调器
- en: Setting up the SSH service
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置SSH服务
- en: SSH default keys and management
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSH默认密钥和管理
- en: Reverse shell through SSH
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过SSH进行反向shell
- en: Stunnel
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stunnel
- en: Wrapping up with an example
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以一个例子结束
- en: Raspberry Pi use cases
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派用例
- en: Raspberry Pi is a common requirement for security professionals to gather information
    from remote sites in large distributed organizations. Many people leverage commercial
    tools that specialize in vulnerability assessments for this situation; however,
    you may not have access to such tools due to a limited budget or vendor partnership
    requirements. An example of this situation is when the authors of this book had
    to take part in a security assessment that included multiple locations all over
    the world. For this project, it was not feasible to travel to every location to
    deliver local penetration testing services. To overcome this, we sent Raspberry
    Pi devices configured with Kali Linux to each location and remotely assessed the
    network for vulnerabilities at a very affordable price. We will cover this engagement
    example in more detail at the end of this chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派是安全专业人员从大型分布式组织的远程站点收集信息的常见需求。许多人利用专门用于漏洞评估的商业工具来解决这种情况；然而，由于预算有限或供应商合作伙伴要求，您可能无法获得这些工具。这种情况的一个例子是，本书的作者们不得不参与一个包括世界各地多个地点的安全评估。对于这个项目，不可能到每个地点去提供本地渗透测试服务。为了克服这个问题，我们发送了配置了Kali
    Linux的树莓派设备到每个地点，并以非常实惠的价格远程评估了网络的漏洞。我们将在本章末尾更详细地介绍这个参与案例。
- en: Another valuable use case for a Raspberry Pi is when a security professional
    wants to leave a device on-site for a long period of time. In the previous example,
    it was not cost-effective to ship and leave a high-end system at each location.
    The Raspberry Pi also has a stealth value using its small form factor through
    a portable device with a modest power requirement over a larger, more powerful
    system. It is less likely people will identify or tamper with a smaller, unknown
    black box such as a Raspberry Pi hidden in a printer power cable versus a random
    laptop placed in an inconspicuous area. For **black-box** testing, the opportunity
    to conceal a Raspberry Pi in common office supplies such as clocks, lamps, and
    printers is extremely useful. In this chapter, we will discuss how to make this
    concept more effective by explaining how you can use one or many Raspberry Pi
    systems to exploit remote locations from a centralized attack standpoint.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派的另一个有价值的用例是当安全专业人员希望长时间留下设备在现场时。在先前的例子中，将高端系统运送并留在每个位置是不划算的。树莓派还具有隐蔽价值，通过其小巧的外形和对较大、更强大系统的适度功耗要求，可以作为便携设备。人们不太可能识别或篡改一个较小的、未知的黑匣子，比如隐藏在打印机电源线中的树莓派，而不是放在不起眼区域的随机笔记本电脑。对于黑盒测试来说，将树莓派隐藏在常见的办公用品如时钟、灯和打印机中是非常有用的。在本章中，我们将讨论如何通过使用一个或多个树莓派系统从集中攻击的角度利用远程位置，使这个概念更加有效。
- en: 'The following image shows a Raspberry Pi placed in a cat clock:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了一个放置在猫钟中的树莓派：
- en: '![Raspberry Pi use cases](img/6435OT_02_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![树莓派用例](img/6435OT_02_01.jpg)'
- en: The Command and Control server
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 指挥和控制服务器
- en: As we have stated in other chapters, the Raspberry Pi is not a powerful machine.
    To overcome this weakness, it is best practice to capture data in a controlled
    manner or leverage offline computing when using Kali Linux on a Raspberry Pi.
    We found that not doing so would either overwhelm the processors when using most
    of the attack tools or quickly consume the limited local storage space when viewing
    captured data. We will cover filtering captured data in [Chapter 3](ch03.html
    "Chapter 3. Penetration Testing"), *Penetration Testing*, under the *Tuning your
    network capture* section.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在其他章节中所述，树莓派并不是一台强大的机器。为了克服这个弱点，最佳实践是以受控的方式捕获数据，或者在使用Kali Linux时利用离线计算。我们发现，如果不这样做，使用大多数攻击工具时会使处理器不堪重负，或者在查看捕获的数据时会迅速消耗有限的本地存储空间。我们将在[第3章](ch03.html
    "第3章。渗透测试") *渗透测试* 的 *调整您的网络捕获* 部分中介绍过滤捕获的数据。
- en: When planning to remotely access multiple Raspberry Pi systems, we recommend
    setting up a central **Command and Control** (**C&C**) server rather than accessing
    each box individually. The C&C server should be a more powerful system such as
    a traditional server so it can focus on CPU intensive tasks such as breaking passwords
    through brute force. More importantly, tasks can also include using the C&C server
    to perform the actual analysis and exploitation rather than locally on the Raspberry
    Pi. An example is having a **Phishing** attack send user traffic hitting the Raspberry
    Pi to the C&C server to be analyzed for vulnerabilities and exploitation.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当计划远程访问多个树莓派系统时，我们建议设置一个中央**命令和控制**（**C&C**）服务器，而不是单独访问每个盒子。C&C服务器应该是一个更强大的系统，如传统服务器，因此它可以专注于CPU密集型任务，如通过暴力破解密码。更重要的是，任务还可以包括使用C&C服务器执行实际的分析和利用，而不是在树莓派上本地执行。一个例子是，进行**钓鱼**攻击，将用户流量发送到树莓派，然后再发送到C&C服务器进行漏洞和利用分析。
- en: Preparing for a penetration test
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备进行渗透测试
- en: 'The Kali Linux ARM image we covered in [Chapter 1](ch01.html "Chapter 1. Raspberry
    Pi and Kali Linux Basics"), *Raspberry Pi and Kali Linux Basics*, has already
    been optimized for a Raspberry Pi. We found however that it is recommended to
    perform a few additional steps to ensure you are using Kali Linux in the most
    stable mode to avoid crashing the Raspberry Pi. The steps are as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在[第1章](ch01.html "第1章 树莓派和Kali Linux基础")中介绍的Kali Linux ARM镜像已经针对树莓派进行了优化。然而，我们发现建议执行一些额外的步骤，以确保您在最稳定的模式下使用Kali
    Linux，以避免使树莓派崩溃。具体步骤如下：
- en: The first recommended step is to perform the OS updates as described in detail
    in [Chapter 1](ch01.html "Chapter 1. Raspberry Pi and Kali Linux Basics"), *Raspberry
    Pi and Kali Linux Basics*. We won't repeat the steps here, so if you have not
    updated your OS, please go back to [Chapter 1](ch01.html "Chapter 1. Raspberry
    Pi and Kali Linux Basics"), *Raspberry Pi and Kali Linux Basics*, and follow the
    instructions.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一个建议的步骤是执行操作系统更新，详细描述在[第1章](ch01.html "第1章 树莓派和Kali Linux基础")中。我们不会在这里重复这些步骤，所以如果您还没有更新您的操作系统，请返回[第1章](ch01.html
    "第1章 树莓派和Kali Linux基础")，并按照说明进行操作。
- en: The next step you should perform is to properly identify your Raspberry Pi.
    The Kali Linux image ships with a generic hostname. To change the hostname, use
    the `vi` editor (although feel free to use any editor of your choice; even if
    you are a fan of nano, we won't judge you much) with the `vi /etc/hostname` command
    as shown in the following screenshot:![Preparing for a penetration test](img/6435OT_02_02.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该执行的下一步是正确识别您的树莓派。Kali Linux镜像附带一个通用主机名。要更改主机名，请使用`vi`编辑器（尽管您可以使用任何您喜欢的编辑器；即使您是nano的粉丝，我们也不会太苛刻），并使用`vi
    /etc/hostname`命令，如下面的屏幕截图所示：![准备进行渗透测试](img/6435OT_02_02.jpg)
- en: 'The only thing in this file should be your hostname. You can see from my example
    that I am changing my hostname from `Kali` to `RaspberryPi` as shown in the following
    screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件中应该只有您的主机名。您可以从我的例子中看到，我正在将我的主机名从`Kali`更改为`RaspberryPi`，如下面的屏幕截图所示：
- en: '![Preparing for a penetration test](img/6435OT_02_03.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![准备进行渗透测试](img/6435OT_02_03.jpg)'
- en: You will also want to edit the `/etc/hosts` file to modify the hostnames. This
    can also be done using the `vi` editor. You want to confirm whether your hostname
    is set correctly in your `hosts` file. The following screenshot shows how I changed
    my default hostname from `Kali` to `RaspberryPi`.![Preparing for a penetration
    test](img/6435OT_02_04.jpg)
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还需要编辑`/etc/hosts`文件以修改主机名。这也可以使用`vi`编辑器完成。您需要确认您的主机名是否在`hosts`文件中正确设置。下面的屏幕截图显示了我如何将默认主机名从`Kali`更改为`RaspberryPi`。![准备进行渗透测试](img/6435OT_02_04.jpg)
- en: Make sure you save the files after making edits. Once saved, reboot the system.
    You will notice the hostname has changed and will be reflected in the new command
    prompt.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保在编辑后保存文件。保存后，重新启动系统。您会注意到主机名已更改，并将反映在新的命令提示符中。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Using common names such as HP Jetdirect as a means to blend into the network
    could be beneficial in a black-box testing environment.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在黑盒测试环境中，使用HP Jetdirect等常见名称作为融入网络的手段可能是有益的。
- en: Overclocking
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超频
- en: Overclocking the Raspberry Pi can improve the performance. The risk of doing
    this can also greatly reduce the life of the hardware. Overclocking may require
    more power from the Raspberry Pi, so if you are powering it from a weak power
    source, overclocking could cause issues. We have had some problems resulting in
    what appears to be corruption in microSD cards and operating systems when overclocking
    the Raspberry Pi.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派超频可以提高性能。这样做的风险也可能大大缩短硬件的寿命。超频可能需要更多的电源来供应树莓派，所以如果你的电源来源不足，超频可能会导致问题。我们在超频树莓派时遇到了一些问题，导致microSD卡和操作系统出现了损坏的情况。
- en: Note
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Only overclock the Raspberry Pi if you can accept the risk that you may permanently
    damage your system.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在您能够接受可能永久损坏系统的风险时，才对树莓派进行超频。
- en: 'To overclock the Raspberry Pi, you can use the raspi-config application for
    advanced hardware manipulation. Unfortunately, this application does not come
    with the Kali Linux image and requires some configuration. Don''t worry; we have
    made the following steps pretty easy for you to follow. They are:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要超频树莓派，您可以使用raspi-config应用程序进行高级硬件操作。不幸的是，这个应用程序不随Kali Linux镜像一起提供，需要一些配置。不用担心，我们已经为您制定了以下步骤，让您可以轻松跟随。它们是：
- en: 'From your Raspberry Pi command line, type:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从您的树莓派命令行中输入：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can also use the official links to download the necessary files:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用官方链接下载必要的文件：
- en: '[http://rageweb.info/2013/06/16/updated-raspi-config-in-kali/](http://rageweb.info/2013/06/16/updated-raspi-config-in-kali/)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://rageweb.info/2013/06/16/updated-raspi-config-in-kali/](http://rageweb.info/2013/06/16/updated-raspi-config-in-kali/)'
- en: '[http://rageweb.info/2013/11/07/bootconfig-txt-in-kali/](http://rageweb.info/2013/11/07/bootconfig-txt-in-kali/)'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://rageweb.info/2013/11/07/bootconfig-txt-in-kali/](http://rageweb.info/2013/11/07/bootconfig-txt-in-kali/)'
- en: 'The following screenshot shows the launch of the preceding command:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的启动：
- en: '![Overclocking](img/6435OT_02_05.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![超频](img/6435OT_02_05.jpg)'
- en: You will need to unzip the files using the `unzip` command as shown in the following
    screenshot:![Overclocking](img/6435OT_02_06.jpg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要使用`unzip`命令解压这些文件，如以下截图所示：![超频](img/6435OT_02_06.jpg)
- en: Next, navigate to the directory you just unzipped and you will see a few files
    in it as shown in the following screenshot:![Overclocking](img/6435OT_02_07.jpg)
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，转到刚刚解压缩的目录，您将看到其中有一些文件，如以下截图所示：![超频](img/6435OT_02_07.jpg)
- en: 'Type in the following commands in the terminal window:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端窗口中输入以下命令：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now you will be able to launch the raspi-config utility. This utility will let
    you control some very specific hardware features on the Raspberry Pi. You should
    only change things if you absolutely know what you are doing, as stated in the
    earlier warnings.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将能够启动raspi-config实用程序。该实用程序将让您控制树莓派上一些非常特定的硬件功能。正如前面的警告所述，只有在您绝对知道自己在做什么时才应该更改这些内容。
- en: We personally found no issue running our Raspberry Pi Model B+ at 1000 MHz.
    Your mileage will vary, and don't be surprised if this will end up causing some
    permanent damage to your Raspberry Pi. It also voids every warranty you might
    have.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们个人发现在1000 MHz下运行我们的树莓派B+没有问题。您的情况可能会有所不同，如果这最终导致对您的树莓派造成一些永久性损害，也不要感到惊讶。这也会使您可能拥有的任何保修失效。
- en: 'The following screenshot shows the **Raspi-config** menu:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**Raspi-config**菜单：
- en: '![Overclocking](img/6435OT_02_08.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![超频](img/6435OT_02_08.jpg)'
- en: 'Our specific configuration is as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的具体配置如下：
- en: The **arm_freq** is `1000`
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**arm_freq** 是 `1000`'
- en: The **gpu_freq** is `400`
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gpu_freq** 是 `400`'
- en: The **sdram_freq** is `500`
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sdram_freq** 是 `500`'
- en: The **over_voltage** is `6`
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**over_voltage** 是 `6`'
- en: The **gpu_mem** is `128`
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gpu_mem** 是 `128`'
- en: You should issue the `dmesg` command from the command line after changing your
    hardware settings to check whether there are any error logs. We have seen most
    configurations change the GPU frequency rate to 500 MHz; however, we continuously
    got errors on our system from the `dmesg` output after a few days. We found we
    had no issue when we dialed it back to 400 MHz.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改硬件设置后，您应该从命令行中发出`dmesg`命令来检查是否有任何错误日志。我们发现大多数配置都会将GPU频率设置为500 MHz；然而，几天后我们在系统中不断看到来自`dmesg`输出的错误。我们发现将其降低到400
    MHz后就没有问题了。
- en: Setting up wireless cards
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置无线网卡
- en: 'When you purchase a Wi-Fi adapter for your Raspberry Pi, you want to make sure
    it not only works with the Raspberry Pi, but also works with Kali Linux. Luckily,
    almost every Wi-Fi adapter we used works with both the Raspberry Pi and Kali Linux.
    In this book, we are using the CanaKit Wi-Fi dongle, as shown in the following
    image:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当您为树莓派购买Wi-Fi适配器时，您需要确保它不仅适用于树莓派，而且适用于Kali Linux。幸运的是，我们使用的几乎每个Wi-Fi适配器都适用于树莓派和Kali
    Linux。在本书中，我们使用的是CanaKit Wi-Fi dongle，如下图所示：
- en: '![Setting up wireless cards](img/6435OT_02_09.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![设置无线网卡](img/6435OT_02_09.jpg)'
- en: CanaKit makes an extremely popular Raspberry Pi kit that ships with this version
    of the Wi-Fi adapter. You can also purchase an adapter separately. If you need
    to purchase a separate card, make sure it is one that works with Debian Linux.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: CanaKit制造了一个非常受欢迎的树莓派套件，其中包含了这个版本的Wi-Fi适配器。您也可以单独购买适配器。如果您需要购买单独的网卡，请确保它是与Debian
    Linux兼容的。
- en: Tip
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: A good resource for compatible cards is [http://elinux.org/RPi_USB_Wi-Fi_Adapters](http://elinux.org/RPi_USB_Wi-Fi_Adapters).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 兼容卡的一个很好的资源是[http://elinux.org/RPi_USB_Wi-Fi_Adapters](http://elinux.org/RPi_USB_Wi-Fi_Adapters)。
- en: 'Once you connect your Wi-Fi adapter, you should first verify that the system
    shows it is functioning properly. You can do this by issuing the `iwconfig` command
    in a terminal window as shown in the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 连接Wi-Fi适配器后，您应该首先验证系统是否正常运行。您可以通过在终端窗口中输入`iwconfig`命令来进行验证，如以下截图所示：
- en: '![Setting up wireless cards](img/6435OT_02_10.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![设置无线网卡](img/6435OT_02_10.jpg)'
- en: 'You should see a `wlan0` interface representing your new wireless interface.
    The next step is to enable the interface. We do this by issuing the `ifconfig
    wlan0` command followed by the `up` keyword as shown in the following screenshot:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到一个代表您的新无线接口的`wlan0`接口。下一步是启用该接口。我们通过在终端窗口中输入`ifconfig wlan0`命令，然后跟随以下截图中显示的`up`关键字来完成这一步骤：
- en: '![Setting up wireless cards](img/6435OT_02_11.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![设置无线网卡](img/6435OT_02_11.jpg)'
- en: 'At this point, your wireless interface should be up and ready to scan the area
    for wireless networks. This will allow us to test the wireless card to make sure
    it works, as well as evaluate the wireless spectrum in the area. We will do this
    by issuing the `iwlist wlan0 scanning` command as shown in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您的无线接口应该已经准备好扫描区域内的无线网络。这将使我们能够测试无线网卡是否正常工作，并评估区域内的无线频谱。我们将通过发出`iwlist wlan0
    scanning`命令来完成这一步骤，如以下截图所示：
- en: '![Setting up wireless cards](img/6435OT_02_12.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![设置无线网卡](img/6435OT_02_12.jpg)'
- en: Tip
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is important to remember most wireless networks you will identify will be
    in the 2.4 GHz range. This is because most common adapters are 2.4 GHz 802.11
    b/g. You may need to change adapters depending upon your requirements.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要记住，您识别到的大多数无线网络都将在2.4 GHz范围内。这是因为大多数常见的适配器都是2.4 GHz 802.11 b/g。根据您的需求，您可能需要更换适配器。
- en: The `iwlist wlan0 scanning` command will show the SSID and the MAC address associated
    with the access points found in the area. You can see in the following screenshot
    that we scanned a `Wireless Lab` network and it has a MAC address of `0E:18:1A:36:D6:22`.
    You can also see the Wi-Fi channel the AP is transmitting on, which is `Channel
    36`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`iwlist wlan0 scanning` 命令将显示区域内发现的接入点的SSID和MAC地址。您可以在以下截图中看到，我们扫描到了一个名为`Wireless
    Lab`的网络，其MAC地址为`0E:18:1A:36:D6:22`。您还可以看到AP正在传输的Wi-Fi信道，即`信道36`。'
- en: '![Setting up wireless cards](img/6435OT_02_13.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![设置无线网卡](img/6435OT_02_13.jpg)'
- en: We have now set up wireless on our Raspberry Pi running Kali Linux.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经在运行Kali Linux的树莓派上设置了无线网络。
- en: Setting up a 3G USB modem with Kali Linux
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Kali Linux上设置3G USB调制解调器
- en: You can use 3G USB modem cards with Kali Linux and connect to your Raspberry
    Pi over cellular for stealthy remote access. Each card is manufactured a little
    differently, and therefore the setup may vary based on the type of 3G card and
    service provider. Our recommendation is using a **MiFi** (short for **Mobile Wi-Fi**)
    hotspot and connecting Kali Linux through a Wi-Fi adapter; however, if you want
    to use a 3G USB modem, make sure you verify it works with Debian.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在Kali Linux上使用3G USB调制解调器卡，并通过蜂窝网络连接到您的树莓派，以进行隐秘的远程访问。每张卡的制造方式略有不同，因此基于3G卡的类型和服务提供商的设置可能会有所不同。我们建议使用**MiFi**（**移动Wi-Fi**的缩写）热点，并通过Wi-Fi适配器连接Kali
    Linux；但是，如果您想使用3G USB调制解调器，请确保它与Debian兼容。
- en: In our next example, we use the Huawei 3G USB modem connect card. This is a
    3G GSM card that works with most frequencies around the globe.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一个示例中，我们使用华为3G USB调制解调器连接卡。这是一张能够在全球大多数频率上工作的3G GSM卡。
- en: 'Here are the steps to set up this card:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是设置此卡的步骤：
- en: 'Open up a terminal window and type in the following command:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端窗口，输入以下命令：
- en: '[PRE2]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Unzip the file issuing the `unzip` command.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`unzip`命令解压文件。
- en: Make changes in the directory you just unzipped.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您刚解压缩的目录中进行更改。
- en: Make the file an executable by typing in `chmod +x 3gusbm*`.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`chmod +x 3gusbm*`将文件设置为可执行。
- en: Run the script by typing `./3gusbmodem –interactive`.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`./3gusbmodem –interactive`来运行脚本。
- en: The script takes a few minutes to run, so be patient. Please select the **Kernel**
    module when prompted.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 脚本需要几分钟才能运行，请耐心等待。请在提示时选择**Kernel**模块。
- en: You will need to select your **Access Point Name** (**APN**) from your mobile
    provider. You may also need to know the username and password for the APN login
    for your mobile provider.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要从您的移动提供商中选择**接入点名称**（**APN**）。您可能还需要了解您的移动提供商的APN登录的用户名和密码。
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Sometimes a username and password is not needed. If this is the case, type in
    anything for the username and password. This should be done even if a username
    and password is not required by your mobile provider.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 有时不需要用户名和密码。如果是这种情况，请为用户名和密码输入任何内容。即使您的移动提供商不需要用户名和密码，也应该这样做。
- en: Select **OK** when the process is completed. After a minute, you should see
    that you have successfully connected to the 3G network.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当过程完成后选择**确定**。一分钟后，您应该看到已成功连接到3G网络。
- en: Setting up the SSH service
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置SSH服务
- en: The **Secure Shell** (**SSH**) gives you full access to the Kali Linux operating
    system on a Raspberry Pi from a remote location. It is the most common way to
    manage Linux systems using a command line. Since the Kali Linux GUI is not needed
    for most penetration testing exercises, we recommend that you use SSH or command-line
    utilities whenever possible. We found some installations of Kali Linux have SSH
    enabled while others may need you to install the OpenSSH server.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全外壳**（**SSH**）允许您从远程位置完全访问树莓派上的Kali Linux操作系统。这是使用命令行管理Linux系统的最常见方式。由于大多数渗透测试练习不需要Kali
    Linux GUI，我们建议您尽可能使用SSH或命令行实用程序。我们发现一些Kali Linux的安装已启用了SSH，而其他一些可能需要您安装OpenSSH服务器。'
- en: You should first verify whether the SSH service is installed. Type in the `service
    --status-all` command to check whether the SSH service is running. If you see
    **+** as shown in the following screenshot, you are good to go. If you see a **-**
    sign, then you will need to install the OpenSSH server.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该首先验证SSH服务是否已安装。输入`service --status-all`命令来检查SSH服务是否正在运行。如果您看到如下截图中所示的**+**，则一切正常。如果您看到**-**符号，则需要安装OpenSSH服务器。
- en: '![Setting up the SSH service](img/6435OT_02_14.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![设置SSH服务](img/6435OT_02_14.jpg)'
- en: 'To install the OpenSSH server, open a command-line terminal and type `apt-get
    install openssh-server` to install the SSH services. You will need to start the
    SSH services by issuing the `service ssh start` command as shown in the following
    screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装OpenSSH服务器，请打开命令行终端，输入`apt-get install openssh-server`以安装SSH服务。您需要通过发出`service
    ssh start`命令来启动SSH服务，如下截图所示：
- en: '![Setting up the SSH service](img/6435OT_02_15.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![设置SSH服务](img/6435OT_02_15.jpg)'
- en: 'Once you enable the SSH service, you should enable the SSH service to start
    running after a reboot. To do this, first remove the run level settings for SSH
    using the `update-rc.d -f ssh remove` command as shown in the following screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 启用SSH服务后，应该在重新启动后启用SSH服务。为此，首先使用`update-rc.d -f ssh remove`命令删除SSH的运行级设置，如下截图所示：
- en: '![Setting up the SSH service](img/6435OT_02_16.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![设置SSH服务](img/6435OT_02_16.jpg)'
- en: 'Next, load SSH defaults by using the `update-rc.d -f ssh defaults` command
    as shown in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用`update-rc.d -f ssh defaults`命令加载SSH默认设置，如下截图所示：
- en: '![Setting up the SSH service](img/6435OT_02_17.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![设置SSH服务](img/6435OT_02_17.jpg)'
- en: Now you should have SSH permanently enabled on your Kali Linux system. You can
    reboot the system at any time without needing to reconfigure the system to run
    SSH.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该在Kali Linux系统上永久启用SSH。您可以在任何时候重新启动系统，而无需重新配置系统以运行SSH。
- en: SSH default keys and management
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSH默认密钥和管理
- en: At this point, you have a Raspberry Pi ready for remote management using SSH.
    This is good; however, the keys that are installed by default are extremely predictable
    with every other default installation for OpenSSH. Although this is optional,
    best practice is changing the default keys. After all, it would be embarrassing
    if your penetration testing machine got hacked.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，您已经准备好通过SSH远程管理树莓派。这很好；但是，默认安装的密钥对对于OpenSSH的每个其他默认安装都是非常可预测的。虽然这是可选的，但最佳做法是更改默认密钥。毕竟，如果您的渗透测试机器被黑客入侵，这将是令人尴尬的。
- en: 'Here are the steps to create a new SSH key for your Kali Linux system:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为Kali Linux系统创建新SSH密钥的步骤：
- en: Note
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure you use a keyboard and console for the following steps. Do not attempt
    to perform the following steps over an existing SSH session.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您使用键盘和控制台进行以下步骤。不要尝试在现有的SSH会话中执行以下步骤。
- en: 'Move the default SSH keys by typing the following into the terminal or command
    line:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过在终端或命令行中输入以下内容来移动默认的SSH密钥：
- en: '[PRE3]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Generate a new key by using the following command and watching the prompts:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令生成新的密钥，并观察提示：
- en: '[PRE4]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following screenshot shows the launch of the preceding commands:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了前面命令的启动：
- en: '![SSH default keys and management](img/6435OT_02_18.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![SSH默认密钥和管理](img/6435OT_02_18.jpg)'
- en: The final step is restarting the SSH services on your Kali Linux system using
    the `service ssh restart` command.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是使用`service ssh restart`命令重新启动Kali Linux系统上的SSH服务。
- en: Reverse shell through SSH
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过SSH进行反向shell
- en: We have already covered the advantages of using a Raspberry Pi at remote locations.
    The important thing to consider is how you should control the Raspberry Pi once
    you have placed the Raspberry Pi on the target's network. The most obvious and
    flexible way would be to SSH into Kali Linux.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了在远程位置使用树莓派的优势。需要考虑的重要事情是，一旦将树莓派放置在目标网络上，您应该如何控制树莓派。最明显和灵活的方式是通过SSH连接到Kali
    Linux。
- en: Since Kali Linux is a fully featured Linux operating system, you can control
    the entire environment through SSH; however, your incoming SSH connections may
    be blocked by firewalls or other security solutions. Many organizations have security
    measures in place to block incoming connections with the goal of preventing backdoors
    into their network. In a **white-box** assessment, you may be explicitly able
    to open up a firewall to permit SSH to your Raspberry Pi as shown in the following
    image. The bad news is even if this is possible from a policy standpoint, it may
    be difficult to achieve when dealing with multiple sites under multiple administrative
    controls. Reverse SSH is a good alternative to manage a Raspberry Pi running Kali
    Linux.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Kali Linux是一个功能齐全的Linux操作系统，您可以通过SSH控制整个环境；但是，您的传入SSH连接可能会被防火墙或其他安全解决方案阻止。许多组织都采取了安全措施，阻止传入连接，以防止其网络中的后门。在**白盒**评估中，您可能可以明确地打开防火墙，以允许SSH连接到您的树莓派，如下图所示。坏消息是，即使从政策上讲这是可能的，但在处理多个站点并受到多个管理控制时，可能难以实现。反向SSH是管理运行Kali
    Linux的树莓派的一个很好的替代方法。
- en: In a reverse connection, the client connects and initiates the connection to
    the server instead of the server connecting to the client. In both cases, the
    server controls the client. This is the same technique as many backdoor programs.
    For our purposes, we will use this as a management utility.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在反向连接中，客户端连接并启动与服务器的连接，而不是服务器连接到客户端。在两种情况下，服务器控制客户端。这与许多后门程序的技术相同。对于我们的目的，我们将将其用作管理实用程序。
- en: Note
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many intrusion detection and prevention solutions can detect SSH based on the
    network traffic looking different regardless of the port. For example, using port
    443 would still look different from common HTTPS traffic.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 许多入侵检测和预防解决方案可以根据网络流量的不同来检测基于SSH的连接，而不管端口如何。例如，使用端口443仍然会与常见的HTTPS流量不同。
- en: '![Reverse shell through SSH](img/6435OT_02_19.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![通过SSH进行反向shell](img/6435OT_02_19.jpg)'
- en: We will use the `R` switch in the `ssh` command to create a reverse connection
    to the listener. A listener is the device listening to accept reverse SSH connections.
    In our case, the C&C server is the listener. The syntax for the commands used
    on the remote host (Raspberry Pi) is `ssh -R [bind_address:]port:host:hostport`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`ssh`命令中使用`R`开关来创建到监听器的反向连接。监听器是接受反向SSH连接的设备。在我们的情况下，C&C服务器是监听器。在远程主机（树莓派）上使用的命令的语法是`ssh
    -R [bind_address:]port:host:hostport`。
- en: The `R` switch defines the port that the remote side will connect over or how
    it will initiate the connection. In other words, we need to pick a port that our
    remote Raspberry Pi will be able to connect on. Most organizations do not have
    strict outbound filtering policies, making this approach more effective than a
    standard SSH connection. We find common ports open are TCP ports 22, 80, 443,
    or 53, meaning clients may be able to freely connect to the outside world using
    these ports.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`R`开关定义了远程端将连接的端口，或者它将如何启动连接。换句话说，我们需要选择一个我们的远程树莓派能够连接的端口。大多数组织没有严格的出站过滤策略，这使得这种方法比标准SSH连接更有效。我们发现常见的开放端口是TCP端口22、80、443或53，这意味着客户端可能能够自由地使用这些端口连接到外部世界。'
- en: Note
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Strict outbound protocol inspection devices such as next-generation firewalls,
    next-generation **IPS** (short for **Intrusion Prevention System**), and advanced
    proxy servers may block these types of connections.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 诸如下一代防火墙、下一代**IPS**（入侵防范系统的缩写）和高级代理服务器等严格的出站协议检查设备可能会阻止这些类型的连接。
- en: The **hostport** is the port on your Raspberry Pi that has a service setup for
    listening. In our case, we are running an SSH server so the hostport by default
    will be `22`. You could change the default port to be more stealthy or leverage
    stunnel, which is covered next in this chapter. To summarize, the port will be
    the TCP port and the server is accepting incoming connections from the Raspberry
    Pi. The hostport is the port the server is running the SSH service.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**hostport**是您的树莓派上设置用于监听的端口。在我们的情况下，我们运行一个SSH服务器，因此默认情况下hostport将是`22`。您可以将默认端口更改为更隐蔽的端口，或者利用stunnel，这将在本章中介绍。总之，端口将是TCP端口，服务器正在接受来自树莓派的传入连接。hostport是服务器运行SSH服务的端口。'
- en: 'On our Raspberry Pi example, we will enter the following command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的树莓派示例中，我们将输入以下命令：
- en: '[PRE5]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This assumes port `7000` is allowed out from the network our Raspberry Pi is
    connected on. If that does not work, try different ports. Most organizations will
    allow outbound port `443` as shown in the following image:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这假设从我们的树莓派连接的网络允许端口`7000`出去。如果不起作用，请尝试不同的端口。大多数组织将允许出站端口`443`，如下图所示：
- en: '![Reverse shell through SSH](img/6435OT_02_20.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![通过SSH进行反向shell](img/6435OT_02_20.jpg)'
- en: 'To try again with a different port on your Raspberry Pi, use the following
    command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要在您的树莓派上尝试不同的端口，请使用以下命令：
- en: '[PRE6]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'On your C&C central server, open up a command-line terminal and enter the following
    command:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的C&C中央服务器上，打开命令行终端并输入以下命令：
- en: '[PRE7]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You will be prompted for the root password of your Kali Linux Raspberry Pi.
    You can see from the last command-line example that the command prompt has changed.
    We are now on our remote server and have full control of our Raspberry Pi as shown
    in the following image:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您将被提示输入Kali Linux树莓派的root密码。您可以从最后一个命令行示例中看到，命令提示符已更改。我们现在在我们的远程服务器上，并且完全控制我们的树莓派，如下图所示：
- en: '![Reverse shell through SSH](img/6435OT_02_21.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![通过SSH进行反向shell](img/6435OT_02_21.jpg)'
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will need to make sure the OpenSSH server is installed and running or this
    process will fail. You will most likely see the failure by a connection refused
    error message. It is also important that you have modified the startup variables
    so your Raspberry Pi has SSH running after a reboot.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保OpenSSH服务器已安装并正在运行，否则此过程将失败。您很可能会看到连接被拒绝的错误消息。同样重要的是，您已经修改了启动变量，以便在重新启动后您的树莓派上运行SSH。
- en: This technique is called reverse shell tunneling. Pick any port as your source
    port, such as port `53`, which is the same port as DNS, or port `80` to use the
    same port as HTTP. It is important to keep in mind that changing the port numbers
    does not necessarily mean you are changing the underlining protocols.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术称为反向shell隧道。选择任何端口作为您的源端口，例如端口`53`，这是DNS的相同端口，或端口`80`以使用HTTP的相同端口。重要的是要记住，更改端口号并不一定意味着您正在更改底层协议。
- en: Stunnel
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Stunnel
- en: Many administrators will have detection technologies such as IDS/IPS to detect
    and prevent open VPN connections. One method to get around this is levering stunnel.
    Stunnel creates secure communication between a TCP client and server by hiding
    inside another SSL envelope. This is done by acting like an SSL encryption wrapper
    between the remote client and server using industry-standard crypto libraries
    such as OpenSSL. What makes stunnel cool is it adds SSL functionality to commonly
    used daemons like POP2, POP3, and IMAP servers without any changes in the program's
    code.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 许多管理员将使用IDS/IPS等检测技术来检测和阻止开放VPN连接。绕过这一点的一种方法是利用stunnel。Stunnel通过在另一个SSL封套中隐藏来创建TCP客户端和服务器之间的安全通信。这是通过使用行业标准的加密库（如OpenSSL）在远程客户端和服务器之间充当SSL加密包装器来实现的。Stunnel之所以很酷，是因为它为常用的守护进程（如POP2、POP3和IMAP服务器）添加了SSL功能，而无需更改程序代码。
- en: 'To use stunnel, you first need to download the code using the `apt-get install
    stunnel4 –y` command as shown in the following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用stunnel，您首先需要使用`apt-get install stunnel4 –y`命令下载代码，如下图所示：
- en: '![Stunnel](img/6435OT_02_22.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![Stunnel](img/6435OT_02_22.jpg)'
- en: You may get a message that the latest version of stunnel is already installed.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会收到stunnel的最新版本已经安装的消息。
- en: You will need to create a file called `stunnel.conf` inside the `/etc/stunnel/`
    directory. You can use your favorite text editor such as nano or `vi` to create
    the file.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在`/etc/stunnel/`目录中创建一个名为`stunnel.conf`的文件。您可以使用您喜欢的文本编辑器，如nano或`vi`来创建文件。
- en: 'The following will be configured and entered into the `stunnel.conf` file.
    Note that you can change the ports to something that better suits you:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下内容将被配置并输入到`stunnel.conf`文件中。请注意，您可以将端口更改为更适合您的内容：
- en: '[PRE8]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following screenshot shows the configurations in the `stunnel.conf` file:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了`stunnel.conf`文件中的配置：
- en: '![Stunnel](img/6435OT_02_23.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![Stunnel](img/6435OT_02_23.jpg)'
- en: 'Next, you need to generate your private key using the following commands:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要使用以下命令生成您的私钥：
- en: '[PRE9]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Once installed, you need to configure stunnel using the `sudo nano /etc/default/stunnel4`
    command.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您需要使用`sudo nano /etc/default/stunnel4`命令配置stunnel。
- en: 'This opens the `.conf` file. Change `enable = 0` to `enable = 1`. Next, open
    a file called `stunnel.conf` and add the following configuration to the file:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开`.conf`文件。将`enable = 0`更改为`enable = 1`。接下来，打开一个名为`stunnel.conf`的文件，并将以下配置添加到文件中：
- en: '[PRE10]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, add a firewall setting on the Raspberry Pi by creating the `firewall.sh`
    file using the following commands:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过以下命令在树莓派上添加防火墙设置，创建`firewall.sh`文件：
- en: '[PRE11]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The next step is to restart the stunnel services by issuing the following command:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是通过发出以下命令重新启动stunnel服务：
- en: '[PRE12]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The final step is installing the Squid proxy on your Kali Linux Raspberry Pi
    by issuing the `apt-get install squid3 –y` command.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是通过发出`apt-get install squid3 –y`命令在Kali Linux树莓派上安装Squid代理。
- en: Installing a Stunnel client
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Stunnel客户端
- en: Now we need to install a stunnel client. We can do this by downloading the Windows
    stunnel client application available at [https://www.stunnel.org/downloads.html](https://www.stunnel.org/downloads.html).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要安装一个stunnel客户端。我们可以通过下载Windows stunnel客户端应用程序来完成，该应用程序可在[https://www.stunnel.org/downloads.html](https://www.stunnel.org/downloads.html)上获得。
- en: 'The following image shows a stunnel-installer executable file icon:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了一个stunnel-installer可执行文件图标：
- en: '![Installing a Stunnel client](img/6435OT_02_24.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: 安装Stunnel客户端
- en: When you have completed the install, open the stunnel install directory on Windows
    (it is usually located at `C:\Program Files\stunnel`).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，在Windows上打开stunnel安装目录（通常位于`C:\Program Files\stunnel`）。
- en: Copy the `stunnel.pem` certificate you created on Kali to your Windows client
    inside the same directory.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 将您在Kali上创建的`stunnel.pem`证书复制到Windows客户端的同一目录中。
- en: 'You should then open the `stunnel.conf` file and replace the contents with
    the following (please adjust any port settings you might have changed from our
    example):'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您应该打开`stunnel.conf`文件，并用以下内容替换其中的内容（请调整您可能已从我们的示例更改的任何端口设置）：
- en: '[PRE13]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Save and close the file. Next, run the `stunnel.exe` application. You will
    see the configuration page displayed:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 保存并关闭文件。接下来，运行`stunnel.exe`应用程序。您将看到配置页面显示：
- en: '![Installing a Stunnel client](img/6435OT_02_25.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![安装Stunnel客户端](img/6435OT_02_25.jpg)'
- en: 'Now you can connect to your Raspberry Pi securely using the **IP address**
    and **Port** specified in the configuration''s `accept` parameter you defined:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以使用配置的`accept`参数中指定的**IP地址**和**端口**安全地连接到您的Raspberry Pi：
- en: '![Installing a Stunnel client](img/6435OT_02_26.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![安装Stunnel客户端](img/6435OT_02_26.jpg)'
- en: Wrapping it up with an example
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用一个例子来总结
- en: Going back to our example from the beginning of the chapter, let's see how the
    topics covered in this chapter would apply to the real world. To recap on the
    situation, we had a customer with multiple international locations requiring on-site
    penetration testing services at an affordable price. To meet this challenge, we
    put together a Raspberry Pi hosting Kali Linux kit that cost us under a hundred
    dollars to construct per location. We sent a kit to each location and had a local
    person connect the Raspberry Pi to the local network. The method of connection
    and the tools that we ran will be covered in the next chapter.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 回到本章开头的例子，让我们看看本章涵盖的主题如何应用于现实世界。回顾一下情况，我们有一个客户需要在多个国际地点提供价格实惠的现场渗透测试服务。为了应对这一挑战，我们组装了一个成本不到一百美元的Raspberry
    Pi托管Kali Linux套件，每个地点都有一个。我们把一个套件寄到每个地点，并让当地的人把Raspberry Pi连接到当地的网络。连接的方法和我们运行的工具将在下一章中介绍。
- en: Each local site was not aware of our service engagement, so we had to work around
    existing security such as firewalls configured to block outbound connections.
    To do this, we set up stunnel over a mail port and accessed all Raspberry Pi kits
    from a MacBook running Kali Linux. This gave us a centralized command and control
    point for each Raspberry Pi and a method to offload anything requiring heavy processes.
    At this point, we started launching various attacks from each Raspberry Pi from
    our home office in USA.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 每个当地的站点都不知道我们的服务参与，所以我们不得不绕过现有的安全措施，比如配置为阻止出站连接的防火墙。为了做到这一点，我们在邮件端口上设置了stunnel，并从运行Kali
    Linux的MacBook上访问了所有的Raspberry Pi套件。这为我们提供了每个Raspberry Pi的集中式命令和控制点，以及一个卸载需要大量处理的任何东西的方法。在这一点上，我们开始从美国的家庭办公室的每个Raspberry
    Pi上发动各种攻击。
- en: The total cost of this approach versus charging for travel and on-site services,
    which was night and day based, was as per initial budget expectations. The customer
    was happy to pay a few hundred dollars for hardware cost per site since we had
    a markup for time for construction and shipping. Outside of that, we charged for
    our services and that was it, making the overall project affordable and successful.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的总成本与旅行和现场服务收费相比，是根据最初的预算期望而定的。客户很乐意为每个站点的硬件成本支付几百美元，因为我们对建设和运输的时间有所涨价。除此之外，我们还收取了我们的服务费，就是这样，使整个项目既实惠又成功。
- en: Summary
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to customize a Raspberry Pi running Kali Linux
    for penetration testing environments. We covered best practices to tune the performance
    and to limit the use of GUI tools using command-line configurations.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学会了如何定制运行Kali Linux的Raspberry Pi，用于渗透测试环境。我们介绍了调整性能和限制使用命令行配置的GUI工具的最佳实践。
- en: One major point covered was how to set up a remote C&C server to offload all
    possible tasks from the Raspberry Pi as well as exporting data (exporting data
    is covered in [Chapter 3](ch03.html "Chapter 3. Penetration Testing"), *Penetration
    Testing*). This included establishing communication between the Raspberry Pi and
    the C&C server. We did this using SSH, HTTPS, and other types of tunnels. We also
    covered how to deal with placing a Raspberry Pi behind a firewall and still being
    able to manage it using reverse shell tunneling back to the C&C server.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 一个主要的问题是如何设置一个远程C&C服务器，以卸载Raspberry Pi的所有可能的任务，以及导出数据（导出数据在[第3章](ch03.html "第3章。渗透测试")中有所涵盖，*渗透测试*）。这包括建立Raspberry
    Pi和C&C服务器之间的通信。我们使用SSH、HTTPS和其他类型的隧道来做到这一点。我们还介绍了如何处理将Raspberry Pi放在防火墙后，并仍然能够使用反向shell隧道管理它。
- en: After this chapter, you should be ready to start your penetration test. In the
    next chapter, we will cover how to perform penetration testing exercises from
    the Raspberry Pi hosting Kali Linux.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章之后，你应该准备开始你的渗透测试。在下一章中，我们将介绍如何从托管Kali Linux的Raspberry Pi执行渗透测试练习。
