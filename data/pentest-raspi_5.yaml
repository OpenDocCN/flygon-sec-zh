- en: Chapter 5. Ending the Penetration Test
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。结束渗透测试
- en: Hacking into networks can be fun when it's taking place in your personal lab.
    At some point, however, you might need to take it to a real environment. When
    that time comes, it is critical that you make sure you conclude things properly.
    For people providing penetration testing as a service, you must show evidence
    to justify your findings or you won't demonstrate enough value for future business.
    This means documenting everything and not leaving behind possible problems caused
    by your services. For attackers, you will want to remove your footprint so that
    the authorities can't track you back through a forensic investigation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在个人实验室进行网络入侵可能很有趣。然而，某个时候，您可能需要将其应用到真实环境中。当那个时候到来时，确保您正确地结束事情至关重要。对于提供渗透测试服务的人来说，您必须提供证据来证明您的发现，否则您将无法为未来的业务提供足够的价值。这意味着记录一切，不要留下可能由您的服务引起的问题。对于攻击者，您将希望清除您的足迹，以便当局无法通过法证调查追踪您。
- en: When it comes to reporting identified network weaknesses as a paid service,
    people don't like when their child is called ugly, and will probably challenge
    your findings. It is important to document the entire process so that it is repeatable,
    assuming that the network is in the same state as when the penetration test was
    performed. Documentation needs to be tailored for both technical and non-technical
    reviewers since both types of people probably have a stake in funding the service
    engagement. You should also note the beginning state of the exercise, including
    any information provided upfront by your customer. You can learn more about the
    starting state of penetration testing by researching white box, black box, and
    grey box penetration testing.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告已识别的网络弱点作为付费服务时，人们不喜欢听到自己的孩子被称为丑陋，并且可能会质疑您的发现。因此，重要的是记录整个过程，以便可以重复，假设网络处于进行渗透测试时的相同状态。文档需要为技术和非技术审阅者量身定制，因为这两种类型的人可能都对资助服务参与有利。您还应该记录练习的起始状态，包括客户提前提供的任何信息。您可以通过研究白盒、黑盒和灰盒渗透测试了解更多关于渗透测试的起始状态。
- en: Another key element of ending a penetration test is being aware of the footprint
    that you created during the assignment. Many exploits can impact the functionality
    of systems and cause downtime that most customers will not be happy about. This
    and other types of behaviors could tip off those watching out for your presence,
    which might push them to adjust their security measures. This will make it much
    tougher to accomplish your original task, and will also not provide a true penetration
    testing simulation as real attackers might not be sloppy and get identified. Administrators
    might also fix any identified vulnerabilities before they are reported, thereby
    deflating the value of your final report. This is why everything you attempt on
    a target should be stealthy unless the service engagement is completely in the
    clear, meaning all the parties know that you are providing the service against
    specific systems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 结束渗透测试的另一个关键元素是意识到您在任务中创建的足迹。许多漏洞可能会影响系统的功能，并导致大多数客户不会满意的停机时间。这种行为和其他类型的行为可能会引起监视您存在的人的注意，这可能会促使他们调整其安全措施。这将使您原始任务变得更加困难，并且也不会提供真正的渗透测试模拟，因为真正的攻击者可能不会那么马虎并且被识别。管理员也可能在报告之前修复任何已识别的漏洞，从而降低您最终报告的价值。这就是为什么您在目标上尝试的一切都应该是隐秘的，除非服务参与完全公开，即所有参与方都知道您正在针对特定系统提供服务。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Covering your tracks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Covering your tracks
- en: Wiping logs
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wiping logs
- en: Masking your network footprints
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 掩盖您的网络足迹
- en: Proxychains
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Proxychains
- en: Resetting the Raspberry Pi back to factory settings
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将树莓派重置为出厂设置
- en: Remotely corrupting Kali Linux
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程损坏Kali Linux
- en: Developing reports
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作报告
- en: Creating screenshots
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建截图
- en: Compressing files
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 压缩文件
- en: Note
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You should have approval from the proper parties prior to executing any penetration
    testing assignment. This approval should be reviewed by a legal representative
    and signed in ink to avoid the risk of being made responsible for any negative
    results caused by an authorized penetration test. If you are an unauthorized hacker,
    don't get caught.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行任何渗透测试任务之前，您应该得到相关方的批准。这份批准应该由法律代表审查，并用墨水签字，以避免因未经授权的渗透测试造成的任何负面结果而被追责。如果您是未经授权的黑客，不要被抓住。
- en: Covering your tracks
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Covering your tracks
- en: One of the key tasks in which penetration testers as well as criminals tend
    to fail is cleaning up after they breach a system. Forensic evidence can be anything
    from the digital network footprint (the IP address, type of network traffic seen
    on the wire, and so on) to the logs on a compromised endpoint. There is also evidence
    on the used tools, such as those used when using a Raspberry Pi to do something
    malicious. An example is running `more ~/.bash_history` on a Raspberry Pi to see
    the entire history of the commands that were used.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试人员和犯罪分子经常失败的一个关键任务是在侵入系统后进行清理。法证证据可以是从数字网络足迹（IP地址、在传输线上看到的网络流量类型等）到受损终端上的日志的任何东西。还有关于使用的工具的证据，比如使用树莓派进行恶意操作时使用的工具。例如，在树莓派上运行`more
    ~/.bash_history`可以查看使用过的所有命令的完整历史记录。
- en: The good news for Raspberry Pi hackers is that they don't have to worry about
    storage elements such as ROM since the only storage to consider is the microSD
    card. This means attackers just need to reflash the microSD card to erase evidence
    that the Raspberry Pi was used. Before doing that, let's work our way through
    the clean up process starting from the compromised system to the last step of
    reimaging your Raspberry Pi.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派黑客的好消息是，他们不必担心ROM等存储元素，因为唯一需要考虑的存储是microSD卡。这意味着攻击者只需重新刷写microSD卡以抹去树莓派被使用的证据。在这之前，让我们从受损的系统开始，逐步进行清理工作，直到重新设置树莓派。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can use the SD Format tool we covered in [Chapter 1](ch01.html "Chapter 1. Raspberry
    Pi and Kali Linux Basics"), *Raspberry Pi and Kali Linux Basics*,for this purpose.
    You can also use the steps covered in [Chapter 1](ch01.html "Chapter 1. Raspberry
    Pi and Kali Linux Basics"), *Raspberry Pi and Kali Linux*, *Basics* to back up
    your image before performing a penetration test and resetting your Raspberry Pi
    back to that image to hide how it was used prior to reimaging it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用我们在[第1章](ch01.html "第1章 树莓派和Kali Linux基础")中介绍的SD格式化工具，*树莓派和Kali Linux基础*，来完成此操作。您还可以使用[第1章](ch01.html
    "第1章 树莓派和Kali Linux基础")中介绍的步骤，*树莓派和Kali Linux基础*，在执行渗透测试并将树莓派重置回到该镜像之前，备份镜像以隐藏其在重新镜像之前的使用方式。
- en: Wiping logs
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 清除日志
- en: The first step you should perform to cover your tracks is clean any event logs
    from the compromised system that you accessed. For Windows systems, Kali Linux
    has a tool within Metasploit called **clearev** that does this for you in an automated
    fashion. Clearev is designed to access a Windows system and wipe the logs. An
    overzealous administrator might notice the changes when you clean the logs. However,
    most administrators will never notice the changes. Also, since the logs are wiped,
    the worst that could happen is that an administrator might identify that their
    systems have been breached, but the logs containing your access information would
    have been removed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该执行的第一步是清除您访问过的受损系统中的任何事件日志。对于Windows系统，Kali Linux在Metasploit中有一个名为**clearev**的工具，可以自动完成这项任务。Clearev旨在访问Windows系统并清除日志。当您清除日志时，过于热心的管理员可能会注意到更改。但是，大多数管理员永远不会注意到这些更改。此外，由于日志已被清除，最糟糕的情况是管理员可能会发现他们的系统已被入侵，但包含您访问信息的日志已被删除。
- en: Clearev comes with the Metasploit arsenal. To use clearev once you have breached
    a Windows system with a Meterpreter, type `meterpreter > clearev`. There are no
    configurations once it is run, which means it just wipes the logs upon execution.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Clearev随Metasploit一起提供。要在使用Meterpreter入侵了Windows系统后使用clearev，请输入`meterpreter
    > clearev`。一旦运行，它就会自动擦除日志，这意味着它运行时不需要进行任何配置。
- en: 'The following screenshot shows the launch of the preceding command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了上述命令的启动：
- en: '![Wiping logs](img/6435OT_05_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![清除日志](img/6435OT_05_01.jpg)'
- en: 'Here is an example of the logs before they are wiped on a Windows system:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在Windows系统上擦除日志之前的日志示例：
- en: '![Wiping logs](img/6435OT_05_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![清除日志](img/6435OT_05_02.jpg)'
- en: Another way to wipe off logs from a compromised Windows system is by installing
    a Windows log cleaning program. There are many options available to download,
    such as **ClearLogs** found at [http://ntsecurity.nu/toolbox/clearlogs/](http://ntsecurity.nu/toolbox/clearlogs/).
    Programs such as these are simple to use, meaning you just install and run it
    on a target once you are finished with your penetration test. You can also just
    delete the logs manually using the `C:\ del %WINDR%\* .log /a/s/q/f` command.
    This command directs all logs using `/a` including subfolders `/s`, disables any
    queries so you don't get prompted, and `/f` forces this action.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 从受损的Windows系统中擦除日志的另一种方法是安装Windows日志清理程序。有许多可供下载的选项，例如在[http://ntsecurity.nu/toolbox/clearlogs/](http://ntsecurity.nu/toolbox/clearlogs/)上找到的**ClearLogs**。这些程序非常简单易用，意味着您只需在完成渗透测试后在目标上安装并运行它。您还可以使用`C:\
    del %WINDR%\* .log /a/s/q/f`命令手动删除日志。此命令使用`/a`包括子文件夹`/s`中的所有日志，禁用任何查询，因此您不会收到提示，`/f`强制执行此操作。
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Whichever program you use, make sure to delete the executable file once the
    log files are removed so that the file isn't identified during a future forensic
    investigation.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您使用哪个程序，请确保在删除日志文件后删除可执行文件，以便在将来的法证调查中不会识别该文件。
- en: 'For Linux systems, you need to get access to the `/var/log` folder to find
    the log files. Once you have access to the log files, simply open them and remove
    all entries. The following screenshot shows an example of my Raspberry Pi''s `log`
    folder:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Linux系统，您需要访问`/var/log`文件夹以查找日志文件。一旦您访问了日志文件，只需打开它们并删除所有条目。下面的截图显示了我的Raspberry
    Pi的`log`文件夹的一个示例：
- en: '![Wiping logs](img/6435OT_05_03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![清除日志](img/6435OT_05_03.jpg)'
- en: You can just delete the files using the remove command, `rm`, such as `rm FILE.txt`
    or delete the entire folder; however, this wouldn't be as stealthy as wiping existing
    files clean of your footprint. Another option is in Bash. One can simply type
    `> /path/to/file` to empty the contents of a file, without removing it necessarily.
    This approach has some stealth benefits.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用删除命令`rm`来删除文件，例如`rm FILE.txt`，或者删除整个文件夹；但是，这不如清除现有文件中的痕迹干净。另一个选项是在Bash中。可以简单地输入`>
    /path/to/file`来清空文件的内容，而不一定要删除它。这种方法有一些隐蔽的好处。
- en: Kali Linux does not have a GUI-based text editor, so one easy-to-use tool that
    you can install is **gedit**. Use `apt-get install gedit` to download it. Once
    installed, you can find `gedit` under the application dropdown or just type `gedit`
    in the terminal window. As you can see from the following screenshot, it looks
    like many common text file editors. Click on **File** and select files from the
    `log` folder to modify them.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux没有基于GUI的文本编辑器，因此您可以安装的一个易于使用的工具是**gedit**。使用`apt-get install gedit`进行下载。安装完成后，您可以在应用程序下拉菜单中找到`gedit`，或者在终端窗口中直接输入`gedit`。如下面的截图所示，它看起来像许多常见的文本文件编辑器。单击**文件**，并从`log`文件夹中选择文件进行修改。
- en: '![Wiping logs](img/6435OT_05_04.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![清除日志](img/6435OT_05_04.jpg)'
- en: 'You also need to erase the command history since the Bash shell saves the last
    500 commands. This forensic evidence can be accessed by typing the `more ~/.bash_history`
    command. The following screenshot shows the first of the hundreds of commands
    I recently ran on my Raspberry Pi:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要删除命令历史记录，因为Bash shell会保存最近的500个命令。可以通过输入`more ~/.bash_history`命令来访问这些法证证据。下面的截图显示了我最近在我的Raspberry
    Pi上运行的数百个命令中的第一个命令：
- en: '![Wiping logs](img/6435OT_05_05.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![清除日志](img/6435OT_05_05.jpg)'
- en: To verify the number of stored commands in the `history` file, type the `echo
    $HISTSIZE` command. To erase this history, type `export HISTSIZE=0`. From this
    point, the shell will not store any command history, that is, if you press the
    up arrow key, it will not show the last command.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要验证`history`文件中存储的命令数量，请键入`echo $HISTSIZE`命令。要擦除此历史记录，请键入`export HISTSIZE=0`。从这一点开始，shell将不会存储任何命令历史记录，也就是说，如果您按上箭头键，它将不会显示上一个命令。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: These commands can also be placed in a `.bashrc` file on Linux hosts.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令也可以放在Linux主机的`.bashrc`文件中。
- en: 'The following screenshot shows that I have verified if my last 500 commands
    are stored. It also shows what happens after I erase them:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示我已经验证了我的最后500个命令是否被存储。它还显示了在我擦除它们之后发生了什么：
- en: '![Wiping logs](img/6435OT_05_06.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Wiping logs](img/6435OT_05_06.jpg)'
- en: Note
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is a best practice to set this command prior to using any commands on a compromised
    system, so that nothing is stored upfront. You could log out and log back in once
    the export `HISTSIZE=0` command is set to clear your history as well. You should
    also do this on your C&C server once you conclude your penetration test if you
    have any concerns of being investigated.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用受损系统上的任何命令之前设置此命令是最佳实践，以便事先不存储任何内容。一旦设置了export `HISTSIZE=0`命令，您可以注销并重新登录以清除您的历史记录。如果您担心被调查，还应该在您的C&C服务器上执行此操作，以结束您的渗透测试。
- en: 'A more aggressive and quicker way to remove your history file on a Linux system
    is to shred it with the `shred –zu /root/.bash_history` command. This command
    overwrites the history file with zeros and then deletes the log files. Verify
    this using the `less /root/.bash_history` command to see if there is anything
    left in your history file, as shown in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux系统上删除您的历史文件的一种更激进和更快的方法是使用`shred –zu /root/.bash_history`命令将其销毁。此命令使用零覆盖历史文件，然后删除日志文件。使用`less
    /root/.bash_history`命令验证这一点，看看您的历史文件中是否还有任何内容，如下面的截图所示：
- en: '![Wiping logs](img/6435OT_05_07.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Wiping logs](img/6435OT_05_07.jpg)'
- en: Masking your network footprint
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 掩盖您的网络足迹
- en: You should not launch attacks from a source such as your home network that can
    be traced back to you unless you don't mind being linked to your actions. The
    most common method to hide your real source address is using a proxy or multiple
    proxies between you and the victim. In simple terms, a proxy acts as an intermediary
    for requests from clients seeking resources from another system. The target will
    see traffic from the intermediary system and will not know the real source. Layering
    proxies can cause an onion effect, making tracing the real source extremely difficult
    during a forensic investigation.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 除非您不介意被追踪到您的行为，否则您不应该从可以追溯到您的家庭网络等来源发起攻击。隐藏您真实的来源地址最常见的方法是使用代理或多个代理在您和受害者之间。简单来说，代理充当了寻求来自另一个系统资源的客户端请求的中介。目标将看到来自中介系统的流量，并不会知道真正的来源。分层代理可能会导致洋葱效应，在取证调查期间极其困难地追踪真正的来源。
- en: There are hundreds of free network proxies available online. You can search
    `Free Anonymous Web Proxy Server` on Google to find various flavors such as Proxify,
    Anonymouse, Anonymizer and Ninja Cloak. The following screenshot shows Anonymouse
    including the explanation of surfing through a proxy. For their service, you need
    to simply type in the address you want to access in the search field.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在线有数百个免费的网络代理可用。您可以在Google上搜索“免费匿名网络代理服务器”以找到各种类型，如Proxify，Anonymouse，Anonymizer和Ninja
    Cloak。下面的截图显示了Anonymouse，包括通过代理浏览的解释。对于他们的服务，您只需在搜索框中输入要访问的地址。
- en: '![Masking your network footprint](img/6435OT_05_08.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![Masking your network footprint](img/6435OT_05_08.jpg)'
- en: Note
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Administrators of proxies can see all traffic as well as identify both the target
    and the victims that communicate through their proxy. It is highly recommended
    that you research any proxy prior to using it as some might use information captured
    without your permission. This includes providing forensic evidence to authorities
    or selling your sensitive information.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 代理管理员可以看到所有流量，并识别通过他们的代理进行通信的目标和受害者。强烈建议您在使用任何代理之前进行研究，因为有些代理可能会在未经您许可的情况下使用捕获的信息。这包括向当局提供取证证据或出售您的敏感信息。
- en: Proxychains
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Proxychains
- en: Another option to hide your source IP address is using proxychains. Proxychains
    allows you to tunnel Kali commands through a proxy server. You will need to install
    proxy chains using the `sudo apt-get install proxychains` command since it is
    not preinstalled in the Kali Linux ARM image.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 隐藏您的源IP地址的另一个选项是使用proxychains。Proxychains允许您通过代理服务器隧道Kali命令。您需要使用`sudo apt-get
    install proxychains`命令安装proxy chains，因为它没有预装在Kali Linux ARM镜像中。
- en: 'Once installed, you will need to add a proxy IP address in the `etc/proxychains.conf`
    file:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您需要在`etc/proxychains.conf`文件中添加代理IP地址：
- en: '![Proxychains](img/6435OT_05_09.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![Proxychains](img/6435OT_05_09.jpg)'
- en: HideMyAss Internet security offers a list of free proxy servers that you can
    use for this purpose. You can find their website at [http://proxylist.hidemyass.com](http://proxylist.hidemyass.com).
    Remember, these are not very reliable and can possibly use your data without your
    permission since the proxy administrators see all the traffic.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: HideMyAss Internet security提供了一系列可用于此目的的免费代理服务器。您可以在他们的网站[http://proxylist.hidemyass.com](http://proxylist.hidemyass.com)上找到。请记住，这些代理并不是非常可靠，可能会在未经您许可的情况下使用您的数据，因为代理管理员可以看到所有流量。
- en: The syntax for proxychains is `proxychains < command you want tunneled and proxied>
    <optional arguments>`. In the following example, we will use the `nmap` command
    to scan the `192.168.1.0/24` network through proxychains to hide from where the
    scan is being done. Note that we had to edit the `.conf` file with a proxy prior
    to executing this command.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: proxychains的语法是`proxychains <要隧道和代理的命令> <可选参数>`。在下面的示例中，我们将使用`nmap`命令通过proxychains扫描`192.168.1.0/24`网络，以隐藏扫描的来源。请注意，我们必须在执行此命令之前编辑`.conf`文件以使用代理。
- en: '[PRE0]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Resetting the Raspberry Pi to factory settings
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将Raspberry Pi重置为出厂设置
- en: Once you cover your tracks on the endpoints and network, the final step is to
    remove forensic evidence from the tools that you used. To clean a Raspberry Pi,
    you simply need to reimage the SD drive. You can find steps in [Chapter 1](ch01.html
    "Chapter 1. Raspberry Pi and Kali Linux Basics"), *Raspberry Pi and Kali Linux
    Basics,* to format your SD card using SD Card Formatter or Apple's Disk Utility.
    You can continue following [Chapter 1](ch01.html "Chapter 1. Raspberry Pi and
    Kali Linux Basics"), *Raspberry Pi and Kali Linux Basics*, to install a new image
    such as the original NOOBS software to hide that the Raspberry Pi once ran Kali
    Linux. You can also use a Kali Linux image that has been customized prior to launching
    your penetration test to save you the time of rebuilding an attack system, yet
    remove what was done during the previous penetration testing engagement.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在端点和网络上覆盖了您的踪迹，最后一步是从您使用的工具中删除取证证据。要清理树莓派，您只需要重新映像SD驱动器。您可以在[第1章](ch01.html
    "第1章 树莓派和Kali Linux基础")中找到使用SD卡格式化程序或苹果的磁盘实用程序格式化SD卡的步骤。您可以继续阅读[第1章](ch01.html
    "第1章 树莓派和Kali Linux基础")中的内容，安装新的映像，例如原始的NOOBS软件，以隐藏树莓派曾经运行Kali Linux的事实。您还可以使用在启动渗透测试之前定制过的Kali
    Linux映像，以节省重建攻击系统的时间，同时删除先前渗透测试过程中的操作。
- en: 'Another option is to remove and break the microSD card. The following image
    shows an example of a cut up microSD card so that it can''t be used for a future
    investigation:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择是移除并损坏microSD卡。以下图片显示了一个切割的microSD卡的示例，以便它无法用于将来的调查：
- en: '![Resetting the Raspberry Pi to factory settings](img/6435OT_05_10.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![将树莓派重置为出厂设置](img/6435OT_05_10.jpg)'
- en: Remotely corrupting Kali Linux
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 远程损坏Kali Linux
- en: You might be put in a situation where you can't physically access your Raspberry
    Pi and need to make sure that it can't be confiscated and later used for a future
    forensic investigation. This could happen if you planted a Raspberry Pi as a network
    tap, remotely accessed it to breach systems, and now need to conclude things by
    killing the Raspberry Pi. In this scenario, you can't wipe the microSD drive,
    so the next best thing is corrupting Kali Linux so that a forensic investigator
    can't access it to see how it was used during the network breach. Let's look at
    how you can remotely kill a Raspberry Pi running Kali Linux.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会遇到这样的情况，无法直接访问您的树莓派，需要确保它不会被没收并在将来用于取证调查。如果您将树莓派作为网络监听器，远程访问它以侵入系统，现在需要通过关闭树莓派来结束事情。在这种情况下，您无法擦除microSD驱动器，因此下一个最好的选择是损坏Kali
    Linux，以便取证调查人员无法访问它以查看在网络入侵期间的使用情况。让我们看看如何远程关闭运行Kali Linux的树莓派。
- en: The first thing you might want to do is delete everything. You can do this by
    using the `rm –rf /` command which means `rm` = remove, `-rf`= remove recursively
    forcing all files and folders without prompting you and `/` tells this command
    to start in the root directory. Running the same command with a `.*` , that is
    `rm –rf .*`, would delete all the configuration files. This option isn't that
    good since deleting only tells the system that space is available, but it does
    not replace the data, meaning it can be uncovered with a forensic tool. A better
    approach is using `dd if=/dev/zero of=/dev/sda1` so that you overwrite bytes making
    the data harder to recover.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想做的第一件事是删除所有内容。您可以使用`rm –rf /`命令来执行此操作，其中`rm`表示删除，`-rf`表示递归删除所有文件和文件夹，而不会提示您，`/`表示此命令从根目录开始。使用`.*`运行相同的命令，即`rm
    –rf .*`，将删除所有配置文件。这个选项并不是很好，因为仅删除告诉系统空间可用，但不会替换数据，这意味着可以使用取证工具找回数据。更好的方法是使用`dd
    if=/dev/zero of=/dev/sda1`，这样您可以覆盖字节，使数据更难恢复。
- en: Another option is to format the hard drive using the `mkfs.ext4 /dev/sda1` command.
    The `mkfs.ext4` command creates a new `.ext4` file system and `/dev/sda1` specifies
    the first partition on the first hard drive, which is what we are using to run
    Kali Linux.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选择是使用`mkfs.ext4 /dev/sda1`命令格式化硬盘。`mkfs.ext4`命令创建一个新的`.ext4`文件系统，`/dev/sda1`指定了第一个硬盘上的第一个分区，这是我们用来运行Kali
    Linux的。
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Running these commands will kill your Kali Linux installation. Be careful of
    people who tell you to use such commands as it is common to see people suggest
    these as a prank.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 运行这些命令将关闭您的Kali Linux安装。要小心那些建议您使用这些命令的人，因为常见的情况是有人建议这样做作为恶作剧。
- en: Developing reports
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发报告
- en: The most important part of a penetration testing service is the quality of the
    deliverable to the customer. We have seen very talented testers lose business
    to low quality, yet more professional, service providers purely on the basis of
    the customer's reaction to the final report. This is due to the way the message
    is delivered considering the target audience, how sensitive they are to bad news,
    as well as the level of details provided. The best way to customize the message
    for a potential customer is to leverage a mix of standardized reports as well
    as imagine how they would read the material. For example, calling an individual
    a potential weakness would probably be a bad idea if that person has influence
    over the budget for this and other services.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试服务最重要的部分是向客户提供的交付品质。我们曾看到非常有才华的测试人员因为最终报告的质量低而失去业务，而更专业的服务提供商则纯粹基于客户对最终报告的反应。这是由于传递消息的方式，考虑目标受众的敏感程度以及提供的细节水平。为潜在客户定制消息的最佳方式是利用标准化报告的混合以及想象他们如何阅读材料。例如，如果某人对这项服务以及其他服务的预算有影响力，那么称呼他为潜在弱点可能是个坏主意。
- en: Developing reports is not just documenting your findings. You need to capture
    the entire scenario including the environment prior to the penetration test, what
    information was provided upfront, assumptions about the current conditions, steps
    used when the services was being provided, and the results from each step. You
    might find that administrators patch holes prior to the completion of your report,
    so it's critical to document the time and date of each step. You can learn more
    about best practices for developing reports by using creditable sources such as
    OWASP's testing guide at [https://www.owasp.org/index.php/Testing_Guide_Introduction](https://www.owasp.org/index.php/Testing_Guide_Introduction).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 开发报告不仅仅是记录你的发现。您需要捕捉整个场景，包括渗透测试前的环境，提前提供的信息，对当前条件的假设，提供服务时使用的步骤，以及每个步骤的结果。您可能会发现管理员在报告完成之前修补漏洞，因此关键要记录每个步骤的时间和日期。您可以通过使用可信来源，如OWASP的测试指南，了解有关开发报告的最佳实践[https://www.owasp.org/index.php/Testing_Guide_Introduction](https://www.owasp.org/index.php/Testing_Guide_Introduction)。
- en: Let's look at some tools that you can use to help build professional reports.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一些可以帮助您构建专业报告的工具。
- en: Creating screenshots
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建截图
- en: The Kali Linux ARM has limited functions to keep the operating system thin.
    One simple concept that can be tedious to execute is capturing screenshots of
    results for reporting purposes. Let's look at a command-line- and GUI-based tool
    that can simplify this process.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux ARM的功能有限，以保持操作系统的轻便。一个简单的概念，可能会让人感到繁琐的是为了报告目的而捕捉结果的屏幕截图。让我们来看看一个可以简化这个过程的基于命令行和GUI的工具。
- en: ImageMagick
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ImageMagick
- en: ImageMagick is a tool that can be downloaded and executed from a terminal to
    launch a screenshot. To download it, type the `sudo apt-get install imagemagick`
    command.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: ImageMagick是一个可以从终端下载和执行截图的工具。要下载它，请键入`sudo apt-get install imagemagick`命令。
- en: Once installed, you can type the `import screenshot.png` command to launch a
    screenshot. ImageMagick will change your mouse icon to a box representing that
    it is ready to capture something. Click on the part of the screen you want to
    capture and a screenshot will be saved as a `.png` file in your root. If you click
    on a window, ImageMagick will just capture that particular window. You can type
    the `eog screenshot.png` command to view your screenshot.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您可以键入`import screenshot.png`命令来启动截图。ImageMagick会将鼠标图标更改为表示它已准备好捕捉某物的框。点击屏幕上要捕捉的部分，截图将保存为`.png`文件在您的根目录中。如果您点击窗口，ImageMagick将只捕捉该特定窗口。您可以键入`eog
    screenshot.png`命令来查看您的截图。
- en: 'To capture the entire Raspberry Pi screen while introducing a delay, type the
    `sleep 10; import –window root screenshot.png` command. This is useful for including
    things that require interaction, such as opening a menu while performing a screen
    capture. The number after `sleep` will give you the delay time before the screenshot
    will be taken. The `import –window root` command tells ImageMagick to take a screenshot
    of the entire screen. The last part of the command is the name of your screenshot.
    The following screenshot shows the command to capture the screenshot:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要在引入延迟的同时捕捉整个Raspberry Pi屏幕，请键入`sleep 10; import –window root screenshot.png`命令。这对于包括需要交互的内容很有用，比如在执行屏幕截图时打开菜单。`sleep`后面的数字将给出截图前的延迟时间。`import
    –window root`命令告诉ImageMagick截取整个屏幕的截图。命令的最后一部分是您的截图名称。以下截图显示了捕获截图的命令：
- en: '![ImageMagick](img/6435OT_05_11.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![ImageMagick](img/6435OT_05_11.jpg)'
- en: Shutter
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Shutter
- en: Another image capturing tool is Shutter. Once again, you need to download it
    using the `apt-get install shutter` command. Once installed, you can find it under
    the applications dropdown or just type `shutter` in a terminal window. Shutter
    has a popup that will inform you that it is updating its plugins prior to fully
    launching for the first time.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个截图工具是Shutter。同样，您需要使用`apt-get install shutter`命令来下载它。安装完成后，您可以在应用程序下拉菜单中找到它，或者只需在终端窗口中键入`shutter`。Shutter有一个弹出窗口，在完全启动之前会通知您正在更新其插件。
- en: 'The following screenshot shows a **Session-Shutter** window:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**Session-Shutter**窗口：
- en: '![Shutter](img/6435OT_05_12.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![Shutter](img/6435OT_05_12.jpg)'
- en: 'Shutter will show a window with options. To take a screenshot, you can click
    on the arrow or scissors image depending on the version. This will change the
    screen and ask you to draw a rectangle where you want to take a screenshot. Once
    you do this, you will draw a rectangle around your desired image and your screenshot
    will appear in the shutter window. From here, you can edit your image and save
    it for your report. The following example shows a screenshot taken by me of a
    part of the website [www.thesecurityblogger.com](http://www.thesecurityblogger.com):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Shutter将显示一个带有选项的窗口。要进行截图，您可以点击箭头或剪刀图像，具体取决于版本。这将改变屏幕并要求您在要截图的位置画一个矩形。一旦您这样做，您将在Shutter窗口中画一个矩形围绕您想要的图像，您的截图将出现在Shutter窗口中。在这里，您可以编辑您的图像并保存到您的报告中。以下示例显示了我对网站[www.thesecurityblogger.com](http://www.thesecurityblogger.com)的部分截图：
- en: '![Shutter](img/6435OT_05_13.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![Shutter](img/6435OT_05_13.jpg)'
- en: The other option is to take a screenshot of the entire desktop by clicking the
    square labeled desktop or various ways to capture part of a window by clicking
    one of the options to the right of the desktop capture image. Once you have an
    image, you can click on the paintbrush to bring up the editing features, as shown
    in the following screenshot. You can crop, adjust the size, and so on prior to
    saving your final image. You can also upload images using the computer image button
    and edit those images using the paintbrush.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个选项是通过点击标有“desktop”标签的方框来截取整个桌面，或者通过点击桌面捕捉图像右侧的选项之一来捕捉窗口的一部分。一旦您有了图像，您可以点击画笔图标来调出编辑功能，如下图所示。在保存最终图像之前，您可以裁剪、调整大小等。您还可以使用计算机图像按钮上传图像并使用画笔编辑这些图像。
- en: '![Shutter](img/6435OT_05_14.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![Shutter](img/6435OT_05_14.jpg)'
- en: Compressing files
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 压缩文件
- en: If you compromise a system or network, at some point you will probably want
    to insert or remove data. Data can be large, which means it can take a while to
    send it over the network. This can be a problem if you only have limited time
    on the compromised system. Also, moving large files off a network can trigger
    security defenses such as the **Data Loss Prevention** (**DLP**) technology.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您入侵了一个系统或网络，那么在某个时候您可能会想要插入或删除数据。数据可能很大，这意味着在网络上传输可能需要一些时间。如果您在被入侵的系统上的时间有限，这可能会成为一个问题。此外，将大文件从网络上移动可能会触发安全防御措施，如**数据丢失预防**（**DLP**）技术。
- en: The best practice is to compress and break files into smaller sizes to speed
    up the download/upload process as well as hide the sending/receiving action. Let's
    look at a command-line and GUI tool that you can use to accomplish these goals.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳做法是将文件压缩并分割成较小的大小，以加快下载/上传过程，并隐藏发送/接收操作。让我们看看您可以使用的命令行和GUI工具来实现这些目标。
- en: Zip/Unzip
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zip/Unzip
- en: One simple to use command-line-based compression application is Zip. This program
    let's you shrink files on the Raspberry Pi so that you can send them to the C&C
    server to expand back to their normal form. Zip does not come preinstalled on
    the ARM image, so you will need to use the `apt-get install zip` command to install
    it.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单易用的基于命令行的压缩应用程序是Zip。这个程序可以让您在树莓派上缩小文件，以便您可以将它们发送到C&C服务器以恢复到正常形式。Zip未预装在ARM映像上，因此您需要使用`apt-get
    install zip`命令进行安装。
- en: 'Once installed, use the `zip "zip file name" "file to be zipped"` command,
    where `"zip file name"` is what the output will be called and `"file to be zipped"`
    is the file to compress. A `.zip` extension will be added to the compressed file,
    meaning this example will be `data.zip` after being compressed. The following
    screenshot shows the compressing of the `VictimData` file to the `Stolen.zip`
    file:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，使用`zip "zip文件名" "要压缩的文件"`命令，其中`"zip文件名"`是输出文件的名称，`"要压缩的文件"`是要压缩的文件。压缩文件将添加`.zip`扩展名，这意味着此示例在压缩后将成为`data.zip`。以下截图显示了将`VictimData`文件压缩为`Stolen.zip`文件：
- en: '![Zip/Unzip](img/6435OT_05_15.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![Zip/Unzip](img/6435OT_05_15.jpg)'
- en: 'Use `unzip Stolen.zip` to open the ZIP file back in its normal form, that is
    `VictimData`. You can also specify a particular file to be extracted, for example
    `unzip Stolen.zip VictimData.doc`. The following screenshot shows the unzipping
    of `Stolen.zip`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`unzip Stolen.zip`来打开ZIP文件，使其恢复到正常形式，即`VictimData`。您还可以指定要提取的特定文件，例如`unzip
    Stolen.zip VictimData.doc`。以下截图显示了`Stolen.zip`的解压过程：
- en: '![Zip/Unzip](img/6435OT_05_16.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![Zip/Unzip](img/6435OT_05_16.jpg)'
- en: File Roller
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: File Roller
- en: If you are looking for a GUI-based compression program that can read various
    formats, File Roller could meet your needs. Just like Zip, you can open and compress
    files using a simple GUI. File Roller is not included with the Kali Linux ARM
    image, so you will need to use the `apt-get install file-roller` command to install
    it. Once installed, type `file roller` in the terminal and the GUI will open up.
    The following screenshot shows the `VictimData` file after I dragged and dropped
    the `Stolen.zip` file in File Roller. You can also click on the **Open** button
    to open the compressed files.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在寻找一个可以读取各种格式的基于GUI的压缩程序，File Roller可能符合您的需求。就像Zip一样，您可以使用简单的GUI打开和压缩文件。File
    Roller未包含在Kali Linux ARM映像中，因此您需要使用`apt-get install file-roller`命令进行安装。安装完成后，在终端中键入`file
    roller`，GUI将打开。以下截图显示了我在File Roller中拖放`Stolen.zip`文件后的`VictimData`文件。您还可以单击**打开**按钮打开压缩文件。
- en: '![File Roller](img/6435OT_05_17.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![File Roller](img/6435OT_05_17.jpg)'
- en: 'To compress files, you can drag the file into the window and File Roller will
    ask you whether you want to create a new compressed file. Here is an example in
    the following screenshot of dropping the `VictimData` file into File Roller and
    creating a new compressed file called `VictimDataNew.tar.gz`. At the file prompt,
    I told File Roller to call my new file `VictimDataNew` and it added the `.tar.gz`
    extension once the file was compressed:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要压缩文件，您可以将文件拖放到窗口中，File Roller会询问您是否要创建一个新的压缩文件。以下截图中的示例显示了将`VictimData`文件拖放到File
    Roller中，并创建一个名为`VictimDataNew.tar.gz`的新压缩文件。在文件提示中，我告诉File Roller将我的新文件命名为`VictimDataNew`，一旦文件被压缩，它就会添加`.tar.gz`扩展名：
- en: '![File Roller](img/6435OT_05_18.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![File Roller](img/6435OT_05_18.jpg)'
- en: Split
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分割
- en: To further reduce a file, you can split it into multiple parts before sending
    it over the wire. One simple utility to accomplish this is split. To split a file,
    type `split "size of each file" "file to be split" "name of split files"`. The
    next example in the following screenshot shows splitting a file called `VictimData`
    into smaller 50 MB files called `Breakup`. Each 50 MB file will have the name
    `Breakup` followed by letters starting with `aa`. So, our example created three
    files called `Breakupaa`, `Breakupab`, and `Breakupac`.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步减小文件大小，您可以在发送文件之前将其分割成多个部分。一个简单的实用程序可以实现这一点是split。要分割一个文件，输入`split "每个文件的大小"
    "要分割的文件" "分割文件的名称"`。以下截图中的下一个示例显示了将名为`VictimData`的文件分割成名为`Breakup`的较小的50MB文件。每个50MB文件的名称将以`aa`开头，所以我们的示例创建了三个文件，分别为`Breakupaa`，`Breakupab`和`Breakupac`。
- en: '![Split](img/6435OT_05_19.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![Split](img/6435OT_05_19.jpg)'
- en: 'To reassemble our three files, we can use the `cat "fileaa fileab fileac" >
    "final file name"`. So, for our example, we''ll assemble the `VictimData` file
    using the files `Breakupaa`, `Breakupab`, and `Breakupac`. We can also use the
    `cat Breakupa[a-c] > VictimData` command, as shown in the following screenshot,
    since the beginning character is the same in the number sequence:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要重新组装我们的三个文件，我们可以使用`cat "fileaa fileab fileac" > "final file name"`。因此，对于我们的示例，我们将使用`Breakupaa`，`Breakupab`和`Breakupac`文件来组装`VictimData`文件。我们还可以使用`cat
    Breakupa[a-c] > VictimData`命令，如下面的截图所示，因为数字序列中的起始字符相同：
- en: '![Split](img/6435OT_05_20.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![Split](img/6435OT_05_20.jpg)'
- en: Summary
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter focused on closing a penetration test or attacking exercise. Topics
    included removing your footprint from the systems that you breached, masking how
    you communicate with systems, and finally removing evidence that the Raspberry
    Pi was used for a penetration test. We closed this chapter by covering reporting
    options to create professional deliverables for your potential customers.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了如何结束渗透测试或攻击性练习。主题包括清除你侵入的系统中的痕迹，掩盖你与系统通信的方式，最后清除使用树莓派进行渗透测试的证据。我们通过介绍报告选项来结束本章，以便为潜在客户创建专业的成果。
- en: The next chapter will look at other ARM images, besides Kali Linux, that are
    available for the Raspberry Pi.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍树莓派可用的除Kali Linux之外的其他ARM镜像。
