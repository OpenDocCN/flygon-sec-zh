- en: Metasploit and PowerShell for Post-Exploitation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit和PowerShell用于后期利用
- en: In previous chapters, you learned the power of **PowerShell** as an attacking
    platform. It was just the beginning. Now it is time to feel the real power of
    it as a perfect tool for performing sophisticated attacks, and also, we will discover
    how to use it side-by-side with the **Metasploit Framework**.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，您学习了**PowerShell**作为攻击平台的强大功能。这只是个开始。现在是时候感受它作为执行复杂攻击的完美工具的真正力量了，而且我们还将发现如何与**Metasploit
    Framework**并行使用它。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中将涵盖以下主题：
- en: Metasploit Framework
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit Framework
- en: PowerShell essentials
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell基础知识
- en: PowerShell payload modules
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell有效载荷模块
- en: Nishang PowerShell for penetration testing and offensive security
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nishang PowerShell用于渗透测试和攻击性安全
- en: Dissecting Metasploit Framework
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解剖Metasploit Framework
- en: 'Metasploit Framework is the most well-known open source exploitation tool.
    It was developed at first in Perl by HD Moore, but later, it was shifted into
    Ruby. This framework is loaded with many useful features for hackers and penetration
    testers. To install Metasploit Framework, visit [https://www.rapid7.com/products/metasploit/download/](https://www.rapid7.com/products/metasploit/download/)
    and perform the following steps:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit Framework是最知名的开源利用工具。它最初是由HD Moore用Perl开发的，但后来转移到了Ruby。这个框架装载了许多对黑客和渗透测试人员有用的功能。要安装Metasploit
    Framework，请访问[https://www.rapid7.com/products/metasploit/download/](https://www.rapid7.com/products/metasploit/download/)并执行以下步骤：
- en: 'Choose your plan, register, and select your operating system. In this demonstration,
    I am using the Windows 64-bit trial version:'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的计划，注册并选择您的操作系统。在这个演示中，我使用的是Windows 64位试用版：
- en: '![](img/00198.jpeg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00198.jpeg)'
- en: 'You will receive an email with the trial activation key:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将收到一封带有试用激活密钥的电子邮件：
- en: '![](img/00199.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00199.jpeg)'
- en: 'Now install it on your machine:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在您的机器上安装它：
- en: '![](img/00200.jpeg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00200.jpeg)'
- en: 'Voila! You can start your exploitation journey:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看啊！您可以开始您的利用之旅：
- en: '![](img/00201.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00201.jpeg)'
- en: Metasploit architecture
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit架构
- en: 'Metasploit architecture is composed of many important components. To fully
    use the power of Metasploit, many components are needed:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit架构由许多重要组件组成。要充分利用Metasploit的功能，需要许多组件：
- en: '**Tools**: This is a set of useful utilities'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**：这是一组有用的实用程序'
- en: '**Plugins**: These are loadable extensions at runtime'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**插件**：这些是运行时可加载的扩展'
- en: '**Libraries**: These are useful Ruby libraries'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**库**：这些是有用的Ruby库'
- en: '**Interfaces**: These give users the ability to access Metasploit in different
    ways (CLI and web for instance)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接口**：这些使用户能够以不同的方式访问Metasploit（例如CLI和web）'
- en: '**Modules**: These are components that perform specific tasks'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块**：这些是执行特定任务的组件'
- en: 'This diagram illustrates the architecture of Metasploit framework:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图解释了Metasploit框架的架构：
- en: '![](img/00202.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00202.jpeg)'
- en: Modules
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模块
- en: 'There are many modules used by the Metasploit Framework. If you are using the
    Metasploit Framework in the Kali Linux Distribution, you can list these modules.
    Navigate to `/usr/share/metasploit-framework/modules` and use the `ls` command
    to explore them, as shown in the following screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit Framework使用许多模块。如果您在Kali Linux发行版中使用Metasploit Framework，您可以列出这些模块。转到`/usr/share/metasploit-framework/modules`并使用`ls`命令来探索它们，如下面的屏幕截图所示：
- en: '![](img/00203.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00203.jpeg)'
- en: Exploits
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用
- en: 'As we discussed during our journey, exploitation is a major step in hacking.
    In fact, Metasploit gives hackers and security professionals  a great exploitation
    power in their hands, thanks to the loaded exploits. This phase will not only
    minimize the false-positive rates of vulnerability tools and scanners by finding
    real proofs of exploiting vulnerabilities, but it will also lead to post-exploitation.
    There are three types of exploits in the wild:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在旅程中讨论的，利用是黑客攻击中的一个重要步骤。事实上，Metasploit通过加载的利用给黑客和安全专业人员提供了巨大的利用能力。这个阶段不仅会通过找到利用漏洞的真实证据来最小化漏洞工具和扫描器的误报率，而且还会导致后期利用。在野外有三种类型的利用：
- en: '**Server-side exploits**'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器端漏洞**'
- en: '**Client-side exploits**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端漏洞**'
- en: '**Local-privilege escalation**'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地权限提升**'
- en: Payloads
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有效载荷
- en: 'Payloads are exploit modules. There are two payload categories: `staged`. Inline
    payloads (or single payloads) are all inclusive and self-contained. Staged payloads
    contain multiple pieces of the payload, referred to as **stagers**. In other words,
    the full payload is composed by stagers:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 有效载荷是利用模块。有两种有效载荷类别：`分段`。内联有效载荷（或单个有效载荷）是全包容和独立的。分段有效载荷包含多个有效载荷的部分，称为**分段器**。换句话说，完整的有效载荷由分段器组成：
- en: '![](img/00204.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00204.jpeg)'
- en: 'Metasploit is loaded with various types of payloads:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit装载了各种类型的有效载荷：
- en: '**Bind shells**: These just listen for hackers to connect to or send instructions.
    They are a good choice if the victim is directly connected with the machine:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绑定shell**：这些只是等待黑客连接或发送指令。如果受害者直接连接到机器，它们是一个不错的选择：'
- en: '**Reverse shells**'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**反向shell**'
- en: '**Listeners**'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监听器**'
- en: '**Stages**'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阶段**'
- en: '**Meterpreters**: They are a specialized command environment. They work entirely
    within the memory used by an exploited process. You can use many meterpreter commands
    for post-exploitation, such as:'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Meterpreter**：它们是专门的命令环境。它们完全在被利用进程使用的内存中工作。您可以使用许多Meterpreter命令进行后期利用，例如：'
- en: '`sysinfo`'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sysinfo`'
- en: '`getsystem`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getsystem`'
- en: '`getuid`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getuid`'
- en: '`reg`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`reg`'
- en: '`background`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`background`'
- en: '`ps`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ps`'
- en: '`kill`'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kill`'
- en: 'As a penetration tester, meterpreters will give you a lot of other handy commands,
    such as:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 作为渗透测试人员，Meterpreter将为您提供许多其他方便的命令，例如：
- en: '`ifconfig`'
  id: totrans-51
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ifconfig`'
- en: '`route`'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`route`'
- en: '`portfwd`'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`portfwd`'
- en: '`webcam_list`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webcam_list`'
- en: '`webcam_snap`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webcam_snap`'
- en: '`record_mic`'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`record_mic`'
- en: '`screenshot`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`screenshot`'
- en: '`idletime`'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`idletime`'
- en: '`uictl`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`uictl`'
- en: '**Paranoid Meterpreter payloads**: These use signed  SSL/TLS certificates.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**偏执Meterpreter有效载荷**：这些使用签名的SSL/TLS证书。'
- en: '**Stageless Meterpreter payloads**:These contain all that is required to get
    a session running.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无分段Meterpreter有效载荷**：这些包含启动会话所需的所有内容。'
- en: Auxiliaries
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 辅助
- en: 'Auxiliaries perform various tasks, including scanning, DNS interrogation, and
    more:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 辅助执行各种任务，包括扫描、DNS查询等：
- en: '`auxillary/scanner/portscan/tcp`: Connect scan'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auxillary/scanner/portscan/tcp`：连接扫描'
- en: '`auxiliary/scanner/portscan/syn`: Half-open SYN stealth scan'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auxiliary/scanner/portscan/syn`：半开放式SYN隐秘扫描'
- en: '`auxiliary/scanner/discovery/udp_sweep`: UDP sweep'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auxiliary/scanner/discovery/udp_sweep`：UDP扫描'
- en: Encoders
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编码器
- en: 'Encoders are used to evade detection, because generating a payload with Metasploit
    and using it directly is not a wise decision, as it will be detectable by most
    anti-malware programs. Thus, encoders can be used to encode a payload thanks to
    many available encoders:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 编码器用于规避检测，因为直接使用Metasploit生成有效载荷并不明智，因为大多数反恶意软件程序都会检测到它。因此，可以使用编码器来对有效载荷进行编码，因为有许多可用的编码器：
- en: '![](img/00205.jpeg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00205.jpeg)'
- en: NOPs
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NOPs
- en: '**NOP** is the abbreviation of **No Operation** in assembly code. It assures
    that any unused space is still valid for the processor executions with no effects.
    In Metasploit, they are used to keep the payload sizes consistent.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**NOP** 是汇编代码中 **No Operation** 的缩写。它确保任何未使用的空间对处理器执行仍然有效，没有任何影响。在Metasploit中，它们用于保持有效载荷大小的一致性。'
- en: Posts
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Posts
- en: 'Posts are used in post-exploitation (after successfully exploiting the system).
    You can find the post-exploitation modules in `/usr/share/metasploit-framework/modules/post`,
    or  you can just type  `show post` in the Metasploit console:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Posts用于利用后（成功利用系统后）。您可以在`/usr/share/metasploit-framework/modules/post`中找到利用后模块，或者只需在Metasploit控制台中输入`show
    post`：
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/00206.jpeg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00206.jpeg)'
- en: 'To know more about a post, use the `info` command. For example, if you want
    to learn more about the `golden_ticket`  post module, just type `info post/windows/escalate/golden_ticket`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关某个post的更多信息，请使用`info`命令。例如，如果您想了解有关`golden_ticket` post模块的更多信息，只需输入`info
    post/windows/escalate/golden_ticket`：
- en: '![](img/00207.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00207.jpeg)'
- en: 'This amazing tool also  gives you the freedom to load your own modules using
    the `loadpath` command:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个神奇的工具还可以使用 `loadpath` 命令加载自己的模块：
- en: '![](img/00208.jpeg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00208.jpeg)'
- en: Starting Metasploit
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动Metasploit
- en: To start Metasploit, you need to open the shell and type `msfconsole`. The following
    screenshot represents the console mode (`msfconsole`) of Metasploit. As discussed,
    Metasploit has other interfaces, such as `msfcli` (it's like `msfconsole`, but
    not interactive), `msfgui` (the graphic version), and `armitage` (a powerful GUI
    interface).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Metasploit，您需要打开shell并输入`msfconsole`。以下截图代表Metasploit的控制台模式（`msfconsole`）。正如讨论的那样，Metasploit还有其他接口，如`msfcli`（类似于`msfconsole`，但不是交互式的），`msfgui`（图形版本）和`armitage`（强大的GUI界面）。
- en: 'The following screenshot is of `msfcli`:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是`msfcli`的：
- en: '![](img/00209.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00209.jpeg)'
- en: 'Metasploit commands are:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit命令包括：
- en: '`help`: Gives information about how to use a feature'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`help`：提供有关如何使用功能的信息'
- en: '`show payloads`: Lists available payloads'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show payloads`：列出可用的有效载荷'
- en: '`show exploits`: Lists available exploits'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show exploits`：列出可用的利用'
- en: '`show options`: Lists the required options'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`show options`：列出所需的选项'
- en: '`msfupdate`: Updates Metasploit'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msfupdate`：更新Metasploit'
- en: '`use`: Uses a module'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`use`：使用模块'
- en: '`search`: A search function'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`search`：搜索功能'
- en: '`exploit`: Launches the exploit'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`exploit`：启动利用'
- en: '![](img/00210.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00210.jpeg)'
- en: 'Before diving into Metasploit''s powerful commands, let''s check the Metasploit
    Framework components:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入了解Metasploit强大的命令之前，让我们先检查Metasploit框架的组件：
- en: '`msfpayload`: The script that you want to run on the target machine after the
    exploitation.'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msfpayload`：在利用后要在目标机器上运行的脚本。'
- en: '`msfencode`: An amazing utility for avoiding the detection of the payload.'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msfencode`：用于避免检测有效载荷的神奇实用程序。'
- en: '`msfvenom`: This is like a combination of the two previous utilities. It''s
    a new feature in Metasploit:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msfvenom`：这类似于前两个实用程序的组合。这是Metasploit中的一个新功能：'
- en: '![](img/00211.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00211.jpeg)'
- en: 'You can check the available payload formats by typing:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过输入以下内容来检查可用的有效载荷格式：
- en: '[PRE1]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/00212.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00212.jpeg)'
- en: 'For  example, if you want to generate a Windows payload, enter the following:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果要生成Windows有效载荷，请输入以下内容：
- en: '[PRE2]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](img/00213.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00213.jpeg)'
- en: Bypassing antivirus with the Veil-Framework
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Veil-Framework绕过防病毒软件
- en: 'As a penetration tester, always remember that you are simulating real-world
    attacks, and in the real world, hackers are trying to bypass antivirus protection
    using many techniques. The **Veil-Framework** is a fantastic tool for avoiding
    payload detection. To install Veil 3.0, you need to download it from its official
    GitHub source at [https://github.com/Veil-Framework/Veil](https://github.com/Veil-Framework/Veil):'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 作为渗透测试人员，永远记住您正在模拟真实世界的攻击，在现实世界中，黑客正在尝试使用许多技术绕过防病毒保护。**Veil-Framework** 是一个避免有效载荷检测的绝妙工具。要安装Veil
    3.0，您需要从其官方GitHub来源[https://github.com/Veil-Framework/Veil](https://github.com/Veil-Framework/Veil)下载它：
- en: '[PRE4]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/00214.jpeg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00214.jpeg)'
- en: 'Now you just need to select a task from an assisted main menu:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您只需要从辅助主菜单中选择一个任务：
- en: '![](img/00215.gif)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00215.gif)'
- en: 'To generate a payload, select `list`, and type `use 1`:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要生成有效载荷，请选择`list`，然后输入`use 1`：
- en: '![](img/00216.gif)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00216.gif)'
- en: 'To list all the available payloads, use `list` as usual:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 要列出所有可用的有效载荷，请像往常一样使用`list`：
- en: '![](img/00217.gif)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00217.gif)'
- en: 'Select your payload using the `use` command:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`use`命令选择您的有效载荷：
- en: '![](img/00218.gif)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00218.gif)'
- en: 'Enter `generate` to create the payload:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`generate`来创建有效载荷：
- en: '![](img/00219.gif)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00219.gif)'
- en: 'Complete the options, and you will generate an undetectable payload, as simple
    as that:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 完成选项后，您将生成一个无法检测的有效载荷，就是这么简单：
- en: '![](img/00220.gif)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00220.gif)'
- en: 'You can also do an Nmap scan using Metasploit, exporting the results and importing
    them later from the database (Metasploit uses the PostgreSQL database):'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Metasploit进行Nmap扫描，将结果导出并稍后从数据库导入（Metasploit使用PostgreSQL数据库）：
- en: '[PRE5]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](img/00221.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00221.jpeg)'
- en: 'Metasploit is an incredible tool. Thus, it gives pentesters a huge number of
    capabilities; one of them is the ability to export results to databases like PostgreSQL.
    If you''ve already installed PostgreSQL, you can verify the connection between
    Metasploit and the database using Metasploit''s `db_connect` utility:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit是一个令人难以置信的工具。因此，它为渗透测试人员提供了大量的功能；其中之一是能够将结果导出到诸如PostgreSQL之类的数据库。如果您已经安装了PostgreSQL，可以使用Metasploit的`db_connect`实用程序验证Metasploit与数据库之间的连接：
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Metasploit eases searching for a huge number of exploits by adding the `searchsploit`
    utility. You can add up to three search terms.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit通过添加`searchsploit`实用程序来简化搜索大量利用。您可以添加最多三个搜索词。
- en: 'For example, `# searchsploit local`:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`# searchsploit local`：
- en: '![](img/00222.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00222.jpeg)'
- en: Writing your own Metasploit module
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写自己的Metasploit模块
- en: As mentioned earlier, a white hat hacker should know how to write their own
    tools and scripts. So, let's see how to create a simple Metasploit module. In
    this demonstration, we'll use Ruby as a programming language, and we'll build
    a TCP scanner.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，白帽黑客应该知道如何编写自己的工具和脚本。因此，让我们看看如何创建一个简单的Metasploit模块。在这个演示中，我们将使用Ruby作为编程语言，并构建一个TCP扫描器。
- en: 'First, create a Ruby file:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个Ruby文件：
- en: '[PRE7]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To test the response, create a text file named `server.txt`, and set up a netcat
    listener. Now, save it at `usr/share/metasploit-framework/modules/auxiliary/scanner`:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试响应，请创建一个名为`server.txt`的文本文件，并设置netcat监听器。现在，将其保存在`usr/share/metasploit-framework/modules/auxiliary/scanner`：
- en: '[PRE8]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](img/00223.jpeg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00223.jpeg)'
- en: 'Open Metasploit, and type `use scanner/TCPScanner`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Metasploit，键入`use scanner/TCPScanner`：
- en: '![](img/00224.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00224.jpeg)'
- en: You can report the results by including `include Msf::Auxiliary::Report`.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过包括`include Msf::Auxiliary::Report`来报告结果。
- en: 'As an example, you can use this method:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以使用这种方法：
- en: '[PRE9]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Metasploit Persistence scripts
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit持久性脚本
- en: 'Persistence is a major need in every successful hacking attack. Metasploit
    Framework comes with two major Persistence scripts:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 持久性是每次成功的黑客攻击中的主要需求。Metasploit Framework带有两个主要的持久性脚本：
- en: '**S4U Persistence (Scheduled Persistence)**: to use it type `use exploit/windows/local/s4u_persistence`'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S4U持久性（计划持久性）**：要使用它，请键入`use exploit/windows/local/s4u_persistence`'
- en: '![](img/00225.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00225.jpeg)'
- en: '**Volume Shadow Copy Service Persistence (VSS Persistence)**: to use it, type
    `use exploit/windows/local/vss_persistence `'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**卷影副本服务持久性（VSS持久性）**：要使用它，键入`use exploit/windows/local/vss_persistence`'
- en: '![](img/00226.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00226.jpeg)'
- en: 'Here are some additional options for Persistence:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些持久性的额外选项：
- en: The **Metasploit Service**, (or** Metsvc**)
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Metasploit服务**（或**Metsvc**）'
- en: '**VNCInject**'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VNC注入**'
- en: 'You can use Windows binaries. To locate these binaries, go to `/usr/share/windows-binaries
    path`:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用Windows二进制文件。要定位这些二进制文件，转到`/usr/share/windows-binaries path`：
- en: '![](img/00227.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00227.jpeg)'
- en: Weaponized PowerShell with Metasploit
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 武器化的PowerShell与Metasploit
- en: In previous chapters, we witnessed the power of PowerShell and its potential.
    It was just the beginning; now, we are ready to leverage its power to the next
    level. Combining the flexibility of Metasploit and PowerShell is a great opportunity
    to perform more customized attacks and security tests.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们见证了PowerShell及其潜力的力量。这只是开始；现在，我们准备将其力量发挥到下一个级别。结合Metasploit和PowerShell的灵活性是执行更多定制攻击和安全测试的绝佳机会。
- en: Interactive PowerShell
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交互式PowerShell
- en: 'PowerShell attacks are already integrated into Metasploit. You can check by
    using the `search` command:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: PowerShell攻击已经集成到Metasploit中。您可以使用`search`命令进行检查：
- en: '[PRE10]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](img/00228.jpeg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00228.jpeg)'
- en: 'In [Chapter 4](part0202.html#60KHK0-ccc418ef6725406983cf4586f3600cdf), *Active
    Directory Exploitation*, you learned how to perform some tasks using PowerShell.
    Now it is time to learn how to use Metasploit with PowerShell. For a demonstration
    of one of the many uses, you can convert a PowerShell script into an executable
    file using the `msfvenom` utility:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第4章](part0202.html#60KHK0-ccc418ef6725406983cf4586f3600cdf)，*活动目录利用*中，您学习了如何使用PowerShell执行一些任务。现在是时候学习如何使用PowerShell与Metasploit。例如，您可以使用`msfvenom`实用程序将PowerShell脚本转换为可执行文件进行演示：
- en: '[PRE11]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: PowerSploit
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PowerSploit
- en: 'PowerSploit is an amazing set of PowerShell scripts used by information security
    professionals, and especially penetration testers. To download PowerSploit, you
    need to grab it from its official GitHub repository, [https://github.com/PowerShellMafia/PowerSploit](https://github.com/PowerShellMafia/PowerSploit):'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: PowerSploit是信息安全专业人员，特别是渗透测试人员使用的一组令人惊叹的PowerShell脚本。要下载PowerSploit，您需要从其官方GitHub存储库[https://github.com/PowerShellMafia/PowerSploit](https://github.com/PowerShellMafia/PowerSploit)获取：
- en: '[PRE12]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After cloning the project, use the `ls` command to list the files:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 克隆项目后，使用`ls`命令列出文件：
- en: 'From the following screenshot, you can note that PowerSploit contains a lot
    of amazing scripts for performing a number of tasks, such as:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 从以下截图中，您可以注意到PowerSploit包含许多惊人的脚本，用于执行许多任务，例如：
- en: '`AntivirusBypass`'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`绕过杀毒软件`'
- en: '`Exfiltration`'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`外泄`'
- en: '``Persistence``'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '``持久性``'
- en: '`PowerSploit`'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PowerSploit`'
- en: '`PowerUp`'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PowerUp`'
- en: '`PowerView`'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PowerView`'
- en: '![](img/00229.jpeg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00229.jpeg)'
- en: Nishang – PowerShell for penetration testing
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nishang - 用于渗透测试的PowerShell
- en: 'Nishang is a great collection of tools used to perform many tasks during all
    the penetration testing phases. You can get it from [https://github.com/samratashok/nishang](https://github.com/samratashok/nishang):'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: Nishang是一个用于执行许多渗透测试阶段任务的工具集。您可以从[https://github.com/samratashok/nishang](https://github.com/samratashok/nishang)获取它：
- en: '[PRE13]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'As you can see from listing the downloaded project, Nishang is loaded with
    many various scripts and utilities for performing a lot of required tasks during
    penetration testing missions, such as:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 从下载的项目列表中可以看出，Nishang加载了许多不同的脚本和实用程序，用于在渗透测试任务期间执行许多所需的任务，例如：
- en: '**Privilege escalation**'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**权限提升**'
- en: '**Scanning**'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扫描**'
- en: '**Pivoting  **'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**枢纽**'
- en: 'You can explore all the available scripts by listing the content of Nishang
    project using the `ls` command:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`ls`命令列出Nishang项目的所有可用脚本：
- en: '![](img/00230.gif)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00230.gif)'
- en: 'Let''s explore some of Nishang''s script power on a Windows machine:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在Windows机器上探索一些Nishang脚本的强大功能：
- en: '![](img/00231.jpeg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00231.jpeg)'
- en: 'You can import all the modules using the `Import-Module` PowerShell cmdlet:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`Import-Module` PowerShell命令导入所有模块：
- en: '![](img/00232.jpeg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00232.jpeg)'
- en: 'Oops, something went wrong! Don''t worry, in order to use the `Import-Module`,
    you need to open PowerShell as an administrator, and type ` Set-ExecutionPolicy
    -ExecutionPolicy RemoteSigned`:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 哎呀，出了点问题！别担心，为了使用`Import-Module`，您需要以管理员身份打开PowerShell，并输入`Set-ExecutionPolicy
    -ExecutionPolicy RemoteSigned`：
- en: '![](img/00233.jpeg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00233.jpeg)'
- en: 'Then you can import the modules:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以导入模块：
- en: '![](img/00234.jpeg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00234.jpeg)'
- en: 'Now, if you want, for example, to use the `Get-Information` module, you just
    need to type `Get-Information`:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您想要使用`Get-Information`模块，只需输入`Get-Information`：
- en: '![](img/00235.jpeg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00235.jpeg)'
- en: 'If you want  to unveil WLAN keys, type `Get-WLAN-Keys`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要揭示WLAN密钥，请输入`Get-WLAN-Keys`：
- en: '![](img/00236.jpeg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00236.jpeg)'
- en: 'You can go further and dump password hashes from a target machine in a post-exploitation
    mission. Thanks to the `Get-PassHashes` module, you are able to dump password
    hashes. This is the output of it from my local machine:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以在后渗透任务中从目标机器中转储密码哈希。借助`Get-PassHashes`模块，您可以转储密码哈希。这是我本地机器的输出：
- en: '![](img/00237.jpeg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00237.jpeg)'
- en: 'However, if you want to pop the command after getting a shell, use:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果你想在获得shell后弹出命令，请使用：
- en: '[PRE14]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can even perform a phishing attack using `Invoke-CredentialPhish`, like
    in the previous demonstration. You can run this attack on the victim''s machine:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以使用`Invoke-CredentialPhish`进行钓鱼攻击，就像之前的演示一样。您可以在受害者的机器上运行这次攻击：
- en: '![](img/00238.jpeg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00238.jpeg)'
- en: Defending against PowerShell attacks
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 防范PowerShell攻击
- en: 'In the previous sections, we went through various techniques for attacking
    machines using Metasploit and PowerShell. Now it is time to learn how to defend
    against and mitigate PowerShell attacks. In order to protect against PowerShell
    attacks, you need to:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几节中，我们介绍了使用Metasploit和PowerShell攻击机器的各种技术。现在是时候学习如何防御和减轻PowerShell攻击了。为了防范PowerShell攻击，您需要：
- en: 'Implement the latest PowerShell version (version 5, when this book was written).
    To check, type `Get-Host`:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实施最新的PowerShell版本（在撰写本书时为版本5）。要检查，请输入`Get-Host`：
- en: '![](img/00239.jpeg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00239.jpeg)'
- en: Monitor PowerShell logs.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监视PowerShell日志。
- en: 'Ensure a least-privilege policy and group policies settings. You can edit them
    with the Local Group Policy Editor. If you are using the Windows 10 Enterprise
    edition, you can also use `AppLocker`:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保最低特权策略和组策略设置。您可以使用本地组策略编辑器进行编辑。如果您使用的是Windows 10企业版，您还可以使用`AppLocker`：
- en: '![](img/00240.jpeg)'
  id: totrans-206
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00240.jpeg)'
- en: 'Use the Constrained Language mode:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用受限语言模式：
- en: '[PRE15]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To check the Constrained Language mode, type:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查受限语言模式，请输入：
- en: '[PRE16]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'That way, malicious scripts won''t work:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这样，恶意脚本就无法运行：
- en: '![](img/00241.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00241.jpeg)'
- en: Summary
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to use Metasploit and PowerShell side by side
    to penetrate the infrastructure and leverage your attacks to the next level, starting
    from reconnaissance, to maintaining access and persistence. We studied the two
    weapons of architecture and operations. The next chapter will be a new experience,
    when you will learn how to exploit enterprise VLANS, and go from theory to real-world
    experience.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学会了如何同时使用Metasploit和PowerShell来渗透基础架构，并将攻击提升到下一个级别，从侦察开始，到保持访问和持久性。我们研究了架构和操作的两种武器。下一章将是一个新的体验，您将学习如何利用企业VLANS，并从理论转向实际经验。
