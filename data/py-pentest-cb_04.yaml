- en: Data Parsing with Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python进行数据解析
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下示例：
- en: Parsing HTML tables
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解析HTML表格
- en: Extracting data from HTML documents
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从HTML文档中提取数据
- en: Parsing XML data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解析XML数据
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: As we have downloaded the web page in the previous recipes, now we can discuss
    how to handle those files and parse them to get the required information.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经在之前的示例中下载了网页，现在我们可以讨论如何处理这些文件并解析它们以获取所需的信息。
- en: Parsing HTML tables
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解析HTML表格
- en: After downloading the HTML pages from the server, we have to extract the required
    data from them. There are many modules in Python to help with this. Here we can
    make use of the Python package `BeautifulSoup`.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 从服务器下载HTML页面后，我们必须从中提取所需的数据。Python中有许多模块可以帮助我们做到这一点。在这里，我们可以使用Python包`BeautifulSoup`。
- en: Getting ready
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'As usual, make sure that you install all the required packages. For this script,
    we require `BeautifulSoup` and `pandas`. You can install them with `pip`:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，确保你安装了所有必需的包。对于这个脚本，我们需要`BeautifulSoup`和`pandas`。你可以使用`pip`安装它们：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`pandas` is an open source data analysis library in Python.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`是Python中的一个开源数据分析库。'
- en: How to do it...
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'We can parse HTML tables from the downloaded pages as following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从下载的页面中解析HTML表格，如下所示：
- en: 'As usual, we have to import the required modules for the script. Here, we import
    `BeautifulSoup` for parsing HTML and `pandas` for handling the data that is parsed.
    Also, we have to import the `urllib` module for getting the web page from the
    server:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 和往常一样，我们必须导入脚本所需的模块。在这里，我们导入`BeautifulSoup`来解析HTML和`pandas`来处理解析的数据。此外，我们还必须导入`urllib`模块以从服务器获取网页：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now we can get the HTML page from the server; for this, we can use the `urllib`
    module:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以从服务器获取HTML页面；为此，我们可以使用`urllib`模块：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, we can use `BeautifulSoup` to parse the HTML and get the `table` from
    it:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们可以使用`BeautifulSoup`来解析HTML并从中获取`table`：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Here, it will get the first table on the web page.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，它将获取网页上的第一个表格。
- en: 'Now we can use the `pandas` library to create a `DataFrame` for the table:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以使用`pandas`库为表格创建一个`DataFrame`：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will create a `DataFrame` with three columns and six rows. The columns
    will display the company name, contact details, and country.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个具有三列和六行的`DataFrame`。列将显示公司名称、联系方式和国家。
- en: Now we have to parse the data and add it to the `DataFrame:`
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们必须解析数据并将其添加到`DataFrame`中：
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This will print the `DataFrame`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打印`DataFrame`。
- en: '`DataFrame` is a two-dimensional, labeled data structure with columns of potentially
    different types. It is more like a `dict` of series objects.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`DataFrame`是一个二维的、带标签的数据结构，具有可能不同类型的列。它更像是`dict`的系列对象。'
- en: 'This script can be run with Python 3 with some changes, shown as follows:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个脚本可以在Python 3中运行，需要做一些更改，如下所示：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The main changes are made to the `urllib` module and the `print` statements.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的更改是对`urllib`模块和`print`语句的修改。
- en: You can learn more about the `pandas` data analysis toolkit at [https://pandas.pydata.org/pandas-docs/stable/](https://pandas.pydata.org/pandas-docs/stable/).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://pandas.pydata.org/pandas-docs/stable/](https://pandas.pydata.org/pandas-docs/stable/)了解更多关于`pandas`数据分析工具包的信息。
- en: Extracting data from HTML documents
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从HTML文档中提取数据
- en: We can extract the parsed data to .csv or Excel format with the help of the
    `pandas` library.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`pandas`库将解析的数据提取到.csv或Excel格式。
- en: Getting ready
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'To use the functions in the `pandas` module that export the parsed data to
    Excel, we require another dependent module `openpyxl`, so please make sure you
    install the `openpyxl` with `pip`:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用`pandas`模块中导出解析数据到Excel的函数，我们需要另一个依赖模块`openpyxl`，所以请确保你使用`pip`安装了`openpyxl`：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: How to do it...
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'We can extract the data from HTML to .csv or Excel documents as following:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将数据从HTML提取到.csv或Excel文档中，如下所示：
- en: 'To create a .csv file, we can use the `to_csv()` method in `pandas`. We can
    rewrite the previous recipe as follows:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个.csv文件，我们可以使用`pandas`中的`to_csv()`方法。我们可以将上一个示例重写如下：
- en: '[PRE8]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will create a .csv file with the name `table.csv`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个名为`table.csv`的.csv文件。
- en: In the same way, we can export to Excel with the `to_excel()` method.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样地，我们可以使用`to_excel()`方法将数据导出到Excel。
- en: 'Change the last line in the previous script to the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 将上一个脚本的最后一行改为以下内容：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Parsing XML data
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解析XML数据
- en: Sometimes, we will get an XML response from the server, and we have to parse
    the XML to extract the data. We can use the `xml.etree.ElementTree` module to
    parse the XML files.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们会从服务器得到一个XML响应，我们需要解析XML以提取数据。我们可以使用`xml.etree.ElementTree`模块来解析XML文件。
- en: Getting ready
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'We have to install the required module, `xml`:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须安装所需的模块，`xml`：
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: How to do it...
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Here is how we can parse XML data with XML module:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们如何使用XML模块解析XML数据：
- en: 'First import the required modules. As this script is in Python 3, make sure
    that you import the correct modules:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先导入所需的模块。由于这个脚本是在Python 3中，确保你导入了正确的模块：
- en: '[PRE11]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now get the XML file with the `urlopen` method in the `urllib` module:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用`urllib`模块中的`urlopen`方法获取XML文件：
- en: '[PRE12]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now parse the XML file with the `parse` method in the `xml.etree.ElementTree`
    module:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在使用`xml.etree.ElementTree`模块中的`parse`方法解析XML文件：
- en: '[PRE13]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now iterate and print the details in XML:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在迭代并打印XML中的细节：
- en: '[PRE14]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This script can be rewritten to run in Python 2 as follows:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个脚本可以重写为Python 2中运行，如下所示：
- en: '[PRE15]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This can also be exported to Excel or .csv, as we did in the previous recipe.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以导出到Excel或.csv，就像我们在之前的示例中所做的那样。
