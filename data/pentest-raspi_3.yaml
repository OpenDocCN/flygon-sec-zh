- en: Chapter 3. Penetration Testing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。渗透测试
- en: Until this point, we have covered how to build a Raspberry Pi, install Kali
    Linux, and prepare your Raspberry Pi for a penetration test through various forms
    of remote access techniques. Now you are ready to learn how to use the Raspberry
    Pi to capture data on a target network. This chapter will provide you with various
    LAN- and wireless-based attack scenarios, using tools found in Kali Linux that
    are optimized for a Raspberry Pi or tools that you can download using the `apt-get`
    command. There are other tools that are available in Kali Linux as well as online;
    however, we will focus on applications that we have found to function properly
    on a Raspberry Pi.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经介绍了如何构建树莓派，安装Kali Linux，并通过各种形式的远程访问技术准备好了树莓派进行渗透测试。现在，您已经准备好学习如何使用树莓派在目标网络上捕获数据。本章将为您提供各种基于LAN和无线的攻击场景，使用Kali
    Linux中的工具，这些工具经过了针对树莓派的优化，或者您可以使用`apt-get`命令下载的工具。Kali Linux中还有其他工具，以及在线工具；然而，我们将专注于我们发现在树莓派上正常运行的应用程序。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Network scanning
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络扫描
- en: Nmap
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nmap
- en: Wireless security
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无线安全
- en: Cracking WPA/WPA2
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 破解WPA/WPA2
- en: Creating wordlists
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建单词列表
- en: Capturing traffic on the network
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在网络上捕获流量
- en: Getting data to the Pi
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据传输到Pi
- en: Tuning your network capture
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整您的网络捕获
- en: Scripting tcpdump for future access
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为未来访问编写tcpdump脚本
- en: Wireshark and TShark
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wireshark和TShark
- en: Beating HTTPS with SSLstrip
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用SSLstrip击败HTTPS
- en: Tip
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The Raspberry Pi has limited performance capabilities due to its size and processing
    power. It is highly recommended that you test the following techniques in a lab
    prior to using a Raspberry Pi for a live penetration test.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其大小和处理能力有限，树莓派的性能能力有限。强烈建议在使用树莓派进行实时渗透测试之前，在实验室中测试以下技术。
- en: Network scanning
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络扫描
- en: Network reconnaissance is typically time-consuming, yet it is the most important
    step when performing a penetration test. The more you know about your target,
    the more likely it is that you will find the fastest and easiest path to success.
    The best practice is starting with reconnaissance methods that do not require
    you to interact with your target; however, you will need to make contact eventually.
    Upon making contact, you will need to identify any open ports on a target system
    as well as map out the environment to which it's connected. Once you breach a
    system, typically there are other networks that you can scan to gain deeper access
    to your target's network. We will cover breaching systems in [Chapter 4](ch04.html
    "Chapter 4. Raspberry Pi Attacks"), *Raspberry Pi Attacks*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 网络侦察通常是耗时的，但在执行渗透测试时是最重要的一步。您对目标了解得越多，就越有可能找到最快和最简单的成功路径。最佳实践是从不需要与目标互动的侦察方法开始；然而，最终您将需要进行联系。在进行联系时，您需要识别目标系统上的任何开放端口，并绘制出其连接的环境。一旦您侵入了一个系统，通常还有其他网络可以扫描，以更深入地访问您的目标网络。我们将在[第4章](ch04.html
    "第4章。树莓派攻击") *树莓派攻击*中介绍侵入系统。
- en: One huge advantage of the Raspberry Pi is its size and mobility. Typically,
    Kali Linux is used from an attack system outside a target's network; however,
    tools such as PWNIE Express and small systems that run Kali Linux, such as a Raspberry
    Pi, can be placed inside a network and be remotely accessed as explained in [Chapter
    2](ch02.html "Chapter 2. Preparing the Raspberry Pi"), *Preparing the Raspberry
    Pi*, of this book. This gives an attacker a system inside the network, bypassing
    typical perimeter defenses while performing internal reconnaissance. This approach
    brings the obvious risks of having to physically place the system on the network
    as well as create a method to communicate with it remotely without being detected;
    however, if successful, this can be very effective.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派的一个巨大优势是其大小和移动性。通常，Kali Linux是从目标网络外部的攻击系统中使用的；然而，像PWNIE Express和运行Kali Linux的小型系统，比如树莓派，可以被放置在网络内部，并且可以远程访问，正如本书的[第2章](ch02.html
    "第2章。准备树莓派") *准备树莓派*中所解释的那样。这使得攻击者可以在网络内部拥有一个系统，绕过典型的外围防御，同时进行内部侦察。这种方法带来了明显的风险，需要在网络上物理放置系统，并创建一种远程通信的方法，而不被检测到；然而，如果成功，这可能非常有效。
- en: Let's look at a few popular methods to scan a target network. We'll continue
    forward assuming that you have established a foothold on a network and now want
    to understand the current environment that you have connected to.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下扫描目标网络的几种流行方法。我们将继续前进，假设您已经在网络上建立了一个立足点，现在想要了解您已连接到的当前环境。
- en: Nmap
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Nmap
- en: The most popular open source tool used to scan hosts and services on a network
    is **Nmap** (short for **Network Mapper**). Nmap's advanced features can detect
    different applications running on systems as well as offer services such as the
    OS fingerprinting features. Nmap can be very effective; however, it can also be
    easily detected unless used properly. We recommend using Nmap in very specific
    situations to avoid triggering a target's defense systems.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 用于扫描网络上主机和服务的最流行的开源工具是**Nmap**（**网络映射器**的缩写）。Nmap的高级功能可以检测系统上运行的不同应用程序，并提供诸如OS指纹识别功能之类的服务。Nmap可能非常有效；然而，除非使用正确，否则也很容易被检测到。我们建议在非常特定的情况下使用Nmap，以避免触发目标的防御系统。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on how to use Nmap, visit [http://nmap.org/](http://nmap.org/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何使用Nmap的更多信息，请访问[http://nmap.org/](http://nmap.org/)。
- en: To use Nmap to scan a local network, open a terminal window and type `nmap (target)`,
    for example, `nmap www.somewebsite.com` or `nmap 192.168.1.2`. There are many
    other commands that can be used to tune your scan. For example, you can tune how
    stealthy you want to be or specify to store the results in a particular location.
    The following screenshot shows the results after running Nmap against [www.thesecurityblogger.com](http://www.thesecurityblogger.com).
    Note that this is an example and is considered a noisy scan. If you simply type
    in either of the preceding two commands, it is most likely that your target will
    easily recognize that you are performing an Nmap scan.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Nmap扫描本地网络，请打开终端窗口并键入`nmap（目标）`，例如`nmap www.somewebsite.com`或`nmap 192.168.1.2`。还有许多其他命令可用于调整扫描。例如，您可以调整您希望多隐秘，或指定将结果存储在特定位置。下面的屏幕截图显示了针对[www.thesecurityblogger.com](http://www.thesecurityblogger.com)运行Nmap后的结果。请注意，这只是一个示例，被认为是一个嘈杂的扫描。如果您只输入前面两个命令中的任何一个，您的目标很可能会轻松地认识到您正在执行Nmap扫描。
- en: '![Nmap](img/Insert6435OT_03_01.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![Nmap](img/Insert6435OT_03_01.jpg)'
- en: 'There are plenty of online resources available to learn how to master the various
    features for Nmap. We will show other examples of using Nmap later in this chapter.
    Here is a reference list of popular `nmap` commands:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多在线资源可供学习如何掌握Nmap的各种功能。我们将在本章后面展示使用Nmap的其他示例。以下是流行的`nmap`命令的参考列表：
- en: '`nmap 192.168.1.0/24`: This scans the entire class C range'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap 192.168.1.0/24`：这将扫描整个C类范围'
- en: '`nmap -p <port ranges>`: This scans specific ports'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap -p <端口范围>`：这将扫描特定端口'
- en: '`nmap -sP 192.168.1.0/24`: This scans the network/find servers and devices
    that are running'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap -sP 192.168.1.0/24`：这将扫描网络/查找正在运行的服务器和设备'
- en: '`nmap –iflist`: This shows host interfaces and routes'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap –iflist`：这显示主机接口和路由'
- en: '`nmap –sV 192.168.1.1`: This detects remote services'' version numbers'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap –sV 192.168.1.1`：这检测远程服务的版本号'
- en: '`nmap –sS 192.168.1.1`: This performs a stealthy TCP SYN scan'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap –sS 192.168.1.1`：这执行隐秘的TCP SYN扫描'
- en: '`nmap –sO 192.168.1.1`: This scans for the IP protocol'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap –sO 192.168.1.1`：这将扫描IP协议'
- en: '`nmap -192.168.1.1 > output.txt`: This saves the output from the scan to the
    text file'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap -192.168.1.1 > output.txt`：这将扫描结果保存到文本文件中'
- en: '`nmap –sA 192.168.1.254`: This checks whether the host is protected by a firewall'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap –sA 192.168.1.254`：这检查主机是否受防火墙保护'
- en: '`nmap –PN 192.168.1.1`: This scans the host when it is protected by a firewall'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap –PN 192.168.1.1`：这在主机受防火墙保护时进行扫描'
- en: '`nmap --reason 192.168.1.1`: This displays the reason a port is in a particular
    state'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap --reason 192.168.1.1`：这显示端口处于特定状态的原因'
- en: '`nmap --open 192.168.1.1`: This only shows open or possibly open ports'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nmap --open 192.168.1.1`：这只显示打开或可能打开的端口'
- en: Note
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The Nmap GUI software Zenmap is not included in the Kali Linux ARM image. It
    is also not recommended over using the command line when running Kali Linux on
    a Raspberry Pi.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux ARM映像中不包括Nmap GUI软件Zenmap。在树莓派上运行Kali Linux时，不建议使用命令行之外的方式。
- en: Wireless security
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 无线安全
- en: Another attack vector that can be leveraged on a Raspberry Pi with a Wi-Fi adapter
    is targeting wireless devices such as mobile tablets and laptops. Scanning wireless
    networks, once they are connected, is similar to how scanning is done on a LAN;
    however, typically a layer of password decryption is required before you can connect
    to a wireless network. Also, wireless network identifier known as **Service Set
    Identifier** (**SSID**) might not be broadcasted but will still be visible when
    you use the right tools. This section will cover how to bypass wireless onboarding
    defenses so that you can access a target's Wi-Fi network and perform the penetration
    testing steps described in this book.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在Raspberry Pi上使用Wi-Fi适配器的另一个攻击向量是针对移动平板电脑和笔记本电脑等无线设备。一旦连接，扫描无线网络就类似于在局域网上进行扫描；但是，通常需要解密密码才能连接到无线网络。此外，无线网络标识符称为**服务集标识符**（**SSID**）可能不会被广播，但在使用正确的工具时仍然可见。本节将介绍如何绕过无线入网防御，以便访问目标的Wi-Fi网络并执行本书中描述的渗透测试步骤。
- en: Looking at a Raspberry Pi with Kali Linux, one of the use cases is hiding the
    system inside or near a target's network and launching wireless attacks remotely.
    The goal will be to enable the Raspberry Pi to access the network wirelessly and
    provide a remote connection back to the attacker. The attacker can be nearby using
    wireless to control the Raspberry Pi until it gains wireless access. Once on the
    network, a backdoor can be established so that the attacker can communicate with
    the Raspberry Pi from anywhere in the world and launch attacks, as explained in
    [Chapter 2](ch02.html "Chapter 2. Preparing the Raspberry Pi"), *Preparing the
    Raspberry Pi*. We will cover the building of this attack example using a rogue
    access point in the *Rogue access honeypots* section of [Chapter 4](ch04.html
    "Chapter 4. Raspberry Pi Attacks"), *Raspberry Pi Attacks*.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Kali Linux的Raspberry Pi上，一个用例是将系统隐藏在或靠近目标网络内，并远程发动无线攻击。目标是使Raspberry Pi能够无线访问网络，并提供远程连接回攻击者。攻击者可以在附近使用无线来控制Raspberry
    Pi，直到它获得无线访问。一旦进入网络，就可以建立后门，以便攻击者可以从世界任何地方与Raspberry Pi通信并发动攻击，如[第2章](ch02.html
    "第2章 准备Raspberry Pi")中所述，“准备Raspberry Pi”。我们将在[Raspberry Pi攻击](ch04.html "第4章
    Raspberry Pi攻击")的*Rogue access honeypots*部分中介绍使用恶意访问点构建此攻击示例。
- en: Cracking WPA/WPA2
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 破解WPA/WPA2
- en: A commonly found security protocol for protecting wireless networks is **Wi-Fi
    Protected Access** (**WPA**). WPA was later replaced by WPA2 and it will be probably
    what you will be up against when you perform a wireless penetration test.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 保护无线网络的常见安全协议是**Wi-Fi Protected Access**（**WPA**）。WPA后来被WPA2取代，当您进行无线渗透测试时，可能会遇到WPA2。
- en: WPA and WPA2 can be cracked with **Aircrack**. Kali Linux includes the Aircrack
    suite, which is one of the most popular applications to break wireless security.
    Aircrack works by gathering packets seen on a wireless connection to either mathematically
    analyze the data to crack weaker protocols such as **Wired Equivalent Privacy**
    (**WEP**), or use brute force on the captured data with a wordlist.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: WPA和WPA2可以通过**Aircrack**破解。Kali Linux包括Aircrack套件，这是最流行的破解无线安全的应用之一。Aircrack通过收集在无线连接上看到的数据包来进行数学分析，以破解较弱的协议，比如**Wired
    Equivalent Privacy**（**WEP**），或者使用一个单词列表对捕获的数据进行暴力破解。
- en: Cracking WPA/WPA2 can be done due to a weakness in the four-way handshake between
    the client and the access point. In summary, a client will authenticate to an
    access point and go through a four-step process. This is the time when the attacker
    is able to grab the password and use a brute force approach to identify it. The
    time-consuming part in this is based on how unique the network password is, how
    extensive your wordlist that will be used to brute force against the password
    is, and the processing power of the system. Unfortunately, the Raspberry Pi lacks
    the processing power and the hard drive space to accommodate large wordlist files.
    So, you might have to crack the password off-box with a tool such as **John the
    Ripper**. We recommend this route for most WPA2 hacking attempts.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 破解WPA/WPA2是因为客户端和接入点之间的四次握手存在漏洞。简而言之，客户端将对接入点进行身份验证，并经过一个四步过程。这是攻击者能够抓取密码并使用暴力破解方法来识别它的时间。这个过程中耗时的部分取决于网络密码的独特性，用于暴力破解密码的单词列表的广泛程度，以及系统的处理能力。不幸的是，树莓派缺乏处理能力和硬盘空间来容纳大型的单词列表文件。所以，你可能需要使用**John
    the Ripper**等工具在离线系统上破解密码。我们建议大多数WPA2破解尝试采用这种方法。
- en: Here is the process to crack a WPA running on a Linksys WRVS4400N wireless router
    using a Raspberry Pi on-box options. We are using a WPA example so that the time-consuming
    part can be accomplished quickly with a Raspberry Pi. Most WPA2 cracking examples
    would take a very long time to run from a Raspberry Pi; however, the steps to
    be followed are the same to run on a faster off-box system.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用树莓派的内置选项来破解Linksys WRVS4400N无线路由器上运行的WPA的过程。我们使用WPA的例子，以便可以快速完成树莓派上耗时的部分。大多数WPA2破解示例在树莓派上运行会花费很长时间；然而，要遵循的步骤是相同的，可以在更快的离线系统上运行。
- en: 'The steps are as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: Start Aircrack by opening a terminal and typing `airmon-ng`;![Cracking WPA/WPA2](img/Insert6435OT_03_02.jpg)
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过打开终端并输入`airmon-ng`来启动Aircrack；![破解WPA/WPA2](img/Insert6435OT_03_02.jpg)
- en: In Aircrack, we need to select the desired interface to use for the attack.
    In the previous screenshot, `wlan0` is my Wi-Fi adapter. This is a USB wireless
    adapter that has been plugged into my Raspberry Pi.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Aircrack中，我们需要选择用于攻击的所需接口。在上一张截图中，`wlan0`是我的Wi-Fi适配器。这是一个插入我的树莓派的USB无线适配器。
- en: It is recommended that you hide your Mac address while cracking a foreign wireless
    network. Kali Linux ARM does not come with the program **macchanger**. So, you
    should download it by using the `sudo apt-get install macchanger` command in a
    terminal window. There are other ways to change your Mac address, but macchanger
    can provide a spoofed Mac so that your device looks like a common network device
    such as a printer. This can be an effective way to avoid detection.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建议在破解外部无线网络时隐藏你的Mac地址。Kali Linux ARM不包含**macchanger**程序。所以，你应该在终端窗口中使用`sudo
    apt-get install macchanger`命令来下载它。还有其他改变Mac地址的方法，但macchanger可以提供一个伪装的Mac地址，使你的设备看起来像一个常见的网络设备，比如打印机。这可以是一个有效的避免被发现的方法。
- en: 'Next, we need to stop the interface used for the attack so that we can change
    our Mac address. So, for this example, we will be stopping `wlan0` using the following
    commands:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要停止用于攻击的接口，这样我们就可以改变我们的Mac地址。所以，对于这个例子，我们将使用以下命令停止`wlan0`：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, let''s change the Mac address of this interface to hide our true identity.
    Use macchanger to change your Mac to a random value and specify your interface.
    There are options to switch to another type of device; however, for this example,
    we will just leave it as a random Mac address using the following command:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们改变这个接口的Mac地址，以隐藏我们的真实身份。使用macchanger将你的Mac地址更改为一个随机值，并指定你的接口。有选项可以切换到另一种设备类型；然而，对于这个例子，我们将只将其保留为一个随机的Mac地址，使用以下命令：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Our random value is `b0:43:3a:1f:3a:05` in the following screenshot. Macchanger
    shows our new Mac as `unknown`.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的随机值在下面的截图中是`b0:43:3a:1f:3a:05`。Macchanger显示我们的新Mac地址为`unknown`。
- en: '![Cracking WPA/WPA2](img/Insert6435OT_03_03.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![破解WPA/WPA2](img/Insert6435OT_03_03.jpg)'
- en: 'Now that our Mac is spoofed, let''s restart `airmon-ng` with the following
    command:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们的Mac地址已经伪装好了，让我们用以下命令重新启动`airmon-ng`：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We need to locate available wireless networks so that we can pick our target
    to attack. Use the following command to do this:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要找到可用的无线网络，这样我们就可以选择我们要攻击的目标。使用以下命令来做到这一点：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You should now see networks within range of your Raspberry Pi that can be targeted
    for this attack. To stop the search once you identify a target, press *Ctrl* +
    *C*. You should write down the Mac address, also known as `BSSID`, and the channel,
    also known as `CH`, used by your target network. The following screenshot shows
    that our target with `ESSID` **HackMePlease** is running `WPA` on `CH` `6`:![Cracking
    WPA/WPA2](img/Insert6435OT_03_04.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你应该看到树莓派范围内可以成为攻击目标的网络。一旦你确定了一个目标，按下*Ctrl* + *C*停止搜索。你应该记下Mac地址，也称为`BSSID`，以及频道，也称为`CH`，被你的目标网络使用。下面的截图显示了我们的目标`ESSID`
    **HackMePlease** 在`CH` `6`上运行`WPA`：![破解WPA/WPA2](img/Insert6435OT_03_04.jpg)
- en: 'The next step is running `airodump` against the Mac address that you just copied.
    You will need the following things to make this work:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是对刚刚复制的Mac地址运行`airodump`。你需要以下东西来使这个工作：
- en: The channel being used by the target
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标正在使用的信道
- en: The Mac address (`BSSID`) that you copied
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你复制的Mac地址（`BSSID`）
- en: A name for the file to save your data
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保存你的数据的文件名
- en: 'Let''s run the `airodump` command in the following manner:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以以下方式运行`airodump`命令：
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will open a new terminal window after you execute it. Keep that window
    open.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此命令后，将打开一个新的终端窗口。保持该窗口打开。
- en: 'Open another terminal window that will be used to connect to the target''s
    wireless network. We will run `aireplay` using the following command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 打开另一个终端窗口，用于连接到目标的无线网络。我们将使用以下命令运行`aireplay`：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For our example, the command will look like the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的示例，命令将如下所示：
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following screenshot shows the launch of the preceding command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的启动：
- en: '![Cracking WPA/WPA2](img/Insert6435OT_03_05.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![破解WPA/WPA2](img/Insert6435OT_03_05.jpg)'
- en: Note
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may not get the full handshake when you run this command. If that happens,
    you will have to wait for a live user to authenticate you to the access point
    prior to launching the attack. The output on using Aircrack may show you something
    like **Opening [file].cap** a few times followed by **No valid WPA handshakes
    found**, if you didn't create a full handshake and somebody hasn't authenticated
    you by that time. Do not proceed to the next step until you capture a full handshake.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 当您运行此命令时，您可能无法获得完整的握手。如果发生这种情况，您将不得不等待一个活跃的用户在发动攻击之前对您进行身份验证。使用Aircrack时的输出可能会显示类似于**打开[file].cap**几次，然后是**未找到有效的WPA握手**，如果您在那时没有创建完整的握手并且有人还没有对您进行身份验证。在捕获完整的握手之前，请不要进行下一步操作。
- en: 'The last step is to run Aircrack against the captured data to crack the WPA
    key. Use the `–w` option to specify the location of a wordlist that will be used
    to scan against the captured data. You will use the `.cap` file that was created
    earlier during step 9, so we will use the name `capturefile.cap` in our example.
    We''ll do this using the following command:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是对捕获的数据运行Aircrack以破解WPA密钥。使用`-w`选项指定要针对捕获的数据进行扫描的单词列表的位置。您将使用在第9步中创建的`.cap`文件，因此我们的示例中将使用名称`capturefile.cap`。我们将使用以下命令进行此操作：
- en: '[PRE7]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Tip
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The Kali Linux ARM image does not include a `wordlist.lst` file for cracking
    passwords. Usually, default wordlists are not good anyway. So, it is recommended
    that you use Google to find an extensive wordlist (see the next section on wordlists
    for more information). Make sure to be mindful of the hard drive space that you
    have on the Raspberry Pi, as many wordlists might be too large to be used directly
    from the Raspberry Pi. The best practice for running process-intensive steps such
    as brute forcing passwords is to do them off-box on a more powerful system.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux ARM映像不包括用于破解密码的`wordlist.lst`文件。通常，默认的单词列表也不好。因此，建议您使用Google查找详尽的单词列表（有关更多信息，请参见下一节有关单词列表的内容）。请注意您在树莓派上的硬盘空间，因为许多单词列表可能太大，无法直接从树莓派使用。运行诸如暴力破解密码之类的进程密集型步骤的最佳做法是在性能更强大的系统上进行。
- en: You will see Aircrack start and begin trying each password in the wordlist file
    against the captured data. This process could take a while depending on the password
    you are trying to break, the number of words in your list, and the processing
    speed of the Raspberry Pi. We found that it ranges from a few hours to days, as
    it's a very tedious process and is possibly better-suited for an external system
    with more horsepower than a Raspberry Pi. You may also find that your wordlist
    doesn't work after waiting a few days to sort through the entire wordlist file.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到Aircrack开始并开始尝试单词列表文件中的每个密码与捕获的数据进行匹配。这个过程可能需要一段时间，具体取决于您要尝试破解的密码、列表中的单词数量以及树莓派的处理速度。我们发现这个过程可能需要几个小时到几天，因为这是一个非常繁琐的过程，可能更适合于比树莓派更强大的外部系统。您可能还会发现，在等待几天来整理整个单词列表文件后，您的单词列表不起作用。
- en: Note
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If Aircrack doesn't open and start trying keys against the password, you either
    didn't specify the location of the `.cap` file or the location of the `wordlist.lst`
    file, or you don't have the captured handshake data. By default, the previous
    steps store files in the root directory. You can move your wordlist file in the
    root directory to mimic how we ran the commands in the previous steps since all
    our files are located in the root directory folder. You can verify this by typing
    `ls` to list the current directory files. Make sure that you list the correct
    directories of each file that are called by each command.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Aircrack没有打开并开始尝试针对密码的密钥，那么您要么没有指定`.cap`文件的位置或`wordlist.lst`文件的位置，要么您没有捕获到握手数据。默认情况下，先前的步骤会将文件存储在根目录中。您可以将您的wordlist文件移动到根目录中，以模仿我们在先前步骤中运行命令的方式，因为我们所有的文件都位于根目录文件夹中。您可以通过输入`ls`来列出当前目录中的文件，以验证这一点。确保列出每个命令调用的每个文件的正确目录。
- en: 'If your attack is successful, you should see something like the following screenshot
    that shows the identified password as **sunshine**:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的攻击成功，您应该会看到类似于以下截图，显示已识别的密码为**sunshine**：
- en: '![Cracking WPA/WPA2](img/Insert6435OT_03_06.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![破解WPA/WPA2](img/Insert6435OT_03_06.jpg)'
- en: It is a good idea to perform this last step on a remote machine. You can set
    up a FTP server and push your `.cap` files to that FTP server or use steps similar
    to those covered under the *Scripting tcpdump for future access* section found
    later in this chapter.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在远程机器上执行此最后一步是个好主意。您可以设置FTP服务器并将您的`.cap`文件推送到该FTP服务器，或者使用本章后面找到的*为将来访问编写tcpdump脚本*部分中介绍的类似步骤。
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can learn more about setting up an FTP server at [http://www.raspberrypi.org/forums/viewtopic.php?f=36&t=35661](http://www.raspberrypi.org/forums/viewtopic.php?f=36&t=35661).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://www.raspberrypi.org/forums/viewtopic.php?f=36&t=35661](http://www.raspberrypi.org/forums/viewtopic.php?f=36&t=35661)了解有关设置FTP服务器的更多信息。
- en: Creating wordlists
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建单词列表
- en: There are many sources and tools that can be used to develop a wordlist for
    your attack. One popular tool called **Custom Wordlist Generator** (**CeWL**),
    allows you to create your own custom dictionary file. This can be extremely useful
    if you are targeting individuals and want to scrape their blogs, LinkedIn, or
    other websites for commonly used words. CeWL doesn't come preinstalled on the
    Kali Linux ARM image, so you will have to download it using `apt-get install cewl`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多来源和工具可用于开发攻击的字典。一个名为**自定义字典生成器**（**CeWL**）的流行工具允许您创建自己的自定义字典文件。如果您的目标是个人，并且想要从他们的博客、LinkedIn或其他网站中获取常用词，这将非常有用。CeWL不是预装在Kali
    Linux ARM映像上的，因此您需要使用`apt-get install cewl`进行下载。
- en: 'To use CeWL, open a terminal window and put in your target website. CeWL will
    examine the URL and create a wordlist based on all the unique words it finds.
    In the following example, we are creating a wordlist of commonly used words found
    on the security blog [www.drchaos.com](http://www.drchaos.com) using the following
    command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用CeWL，打开终端窗口并输入您的目标网站。CeWL将检查URL并根据找到的所有唯一单词创建一个字典。在以下示例中，我们使用以下命令创建了一个在安全博客[www.drchaos.com](http://www.drchaos.com)上找到的常用词的字典：
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following screenshot shows the launch of the preceding command:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上述命令的启动：
- en: '![Creating wordlists](img/Insert6435OT_03_07.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Creating wordlists](img/Insert6435OT_03_07.jpg)'
- en: 'You can also find many examples of popular wordlists used as dictionary files
    on the Internet. Here are a few wordlist examples sources that you can use; however,
    be sure to research Google for other options as well:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在互联网上找到许多流行的字典文件示例。以下是一些您可以使用的字典示例来源；但是，还要确保在Google上研究其他选项：
- en: '[https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.html](https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.html)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.html](https://crackstation.net/buy-crackstation-wordlist-password-cracking-dictionary.html)'
- en: '[https://wiki.skullsecurity.org/Passwords](https://wiki.skullsecurity.org/Passwords)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://wiki.skullsecurity.org/Passwords](https://wiki.skullsecurity.org/Passwords)'
- en: 'Here is a dictionary that one of the coauthors of this book put together:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本书的合著者之一整理的一个字典：
- en: '[http://www.drchaos.com/public_files/chaos-dictionary.lst.txt](http://www.drchaos.com/public_files/chaos-dictionary.lst.txt)'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.drchaos.com/public_files/chaos-dictionary.lst.txt](http://www.drchaos.com/public_files/chaos-dictionary.lst.txt)'
- en: Capturing traffic on the network
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在网络上捕获流量
- en: It is great to get access to a target network. However, typically the next step,
    once a foothold is established, is to start looking at the data. To do this, you
    will need a method to capture and view network packets. This means turning your
    Raspberry Pi into a remotely accessible network tap.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 获得对目标网络的访问是很好的。但是，通常一旦建立了立足点，下一步就是开始查看数据。为此，您需要一种捕获和查看网络数据包的方法。这意味着将您的树莓派变成一个远程可访问的网络监听器。
- en: Tip
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Many of these tools could overload and crash your Raspberry Pi. Look out for
    our recommendations regarding when to use a tuning method to avoid this from happening.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 许多这些工具可能会使您的树莓派超载并崩溃。请注意我们关于何时使用调整方法以避免发生这种情况的建议。
- en: Tcpdump
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Tcpdump
- en: Tcpdump is a command-line-based packet analyzer. You can use `tcpdump` to intercept
    and display TCP/IP and other packets that are transmitted and seen attached by
    the system This means the Raspberry Pi must have access to the network traffic
    that you intend to view or using tcpdump won't provide you with any useful data.
    Tcpdump is not installed with the default Kali Linux ARM image, so you will have
    to install it using the `sudo apt-get install tcpdump` command.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Tcpdump是基于命令行的数据包分析器。您可以使用`tcpdump`来拦截和显示传输和系统附加的TCP/IP和其他数据包。这意味着树莓派必须能够访问您打算查看的网络流量，否则使用tcpdump将不会为您提供任何有用的数据。Tcpdump未与默认的Kali
    Linux ARM映像一起安装，因此您需要使用`sudo apt-get install tcpdump`命令进行安装。
- en: 'Once installed, you can run `tcpdump` by simply opening a terminal window and
    typing `sudo tcpdump`. The following screenshot shows the traffic flow visible
    to us after the launch of the preceding command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，您可以通过简单地打开终端窗口并输入`sudo tcpdump`来运行`tcpdump`。以下屏幕截图显示了上述命令启动后我们可见的流量流：
- en: '![Tcpdump](img/Insert6435OT_03_08.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![Tcpdump](img/Insert6435OT_03_08.jpg)'
- en: As the previous screenshot shows, there really isn't much to see if you don't
    have the proper traffic flowing through the Raspberry Pi. Basically, we're seeing
    our own traffic while being plugged into an 802.1X-enabled switch, which isn't
    interesting. Let's look at how to get other system's data through your Raspberry
    Pi.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的屏幕截图所示，如果没有正确的流量通过树莓派，实际上没有什么可见的。基本上，我们在插入到802.1X启用的交换机中时看到了自己的流量，这并不有趣。让我们看看如何通过树莓派获取其他系统的数据。
- en: Tip
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Running `tcpdump` consumes a lot of the Raspberry Pi's processing power. We
    found that this could crash the Raspberry Pi by itself or while using it with
    other applications. We recommend that you tune your data capture to avoid this
    from happening. Tuning a data capture will be covered later in this chapter.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`tcpdump`会消耗大量树莓派的处理能力。我们发现这可能会导致树莓派自己崩溃，或者在使用其他应用程序时崩溃。我们建议您调整数据捕获，以避免发生这种情况。数据捕获的调整将在本章后面介绍。
- en: Man-in-the-middle attacks
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 中间人攻击
- en: One common method to capture sensitive information is by performing a man-in-the-middle
    attack. By definition, a man-in-the-middle attack is when an attacker makes independent
    connections with victims while actively eavesdropping on the communication. This
    is typically done between a host and the systems. For example, a popular method
    to capture passwords is to act as a middleman between login credentials passed
    by a user to a web server. We will cover this as well as a few other common man-in-the-middle
    attacks performed with tools found in Kali Linux.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获敏感信息的一种常见方法是执行中间人攻击。根据定义，中间人攻击是指攻击者在积极窃听通信的同时与受害者进行独立连接。这通常是在主机和系统之间完成的。例如，捕获密码的一种常见方法是在用户传递给Web服务器的登录凭据之间充当中间人。我们将介绍这个以及在Kali
    Linux中找到的几种其他常见的中间人攻击方法。
- en: Let's look at a few versions of man-in-the-middle attacks used to get data into
    your Raspberry Pi.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下用于将数据传输到您的树莓派的中间人攻击的几个版本。
- en: Getting data to the Pi
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据传输到Pi
- en: There are a few methods to get data to your Raspberry Pi. One method is placing
    the Raspberry Pi in line between two systems using two Ethernet ports. This requires
    a USB to Ethernet adapter and the ability to physically connect the Raspberry
    Pi in this fashion. In the following example, we are connecting a windows laptop
    to one end of our Raspberry Pi and the network switch to the other. One of the
    Ethernet ports is a USB adapter.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以将数据传输到您的树莓派。一种方法是使用两个以太网端口将树莓派放置在两个系统之间。这需要一个USB到以太网适配器，并且需要能够以这种方式物理连接树莓派。在下面的示例中，我们将Windows笔记本电脑连接到我们的树莓派的一端，将网络交换机连接到另一端。其中一个以太网端口是一个USB适配器。
- en: For live penetration testing, you can customize the Raspberry Pi's protective
    case, as shown in the following image, to mimic anything from a power plug to
    a network hub to hide your attack system. We found that the average person won't
    mess with a small box attached to a network device if it looks like it belongs
    there. Once, we also placed a Raspberry Pi in office stationery, such as a hollow
    alarm clock, to conceal it during an authorized penetration test.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 对于实时渗透测试，您可以自定义树莓派的保护外壳，如下图所示，以模仿从电源插头到网络中心的任何东西，以隐藏您的攻击系统。我们发现，如果看起来像属于那里的东西，普通人不会去碰网络设备上连接的小盒子。曾经，我们还将树莓派放在办公文具中，比如一个空的闹钟，以在授权的渗透测试期间将其隐藏起来。
- en: '![Getting data to the Pi](img/Insert6435OT_03_09.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![将数据传输到Pi](img/Insert6435OT_03_09.jpg)'
- en: The Raspberry Pi needs to be configured to bridge the target system's Ethernet
    port to the network-facing port and vice versa in order to see traffic. Without
    doing this, traffic will die once it hits the Pi. Before doing this, you will
    need to install the `bridge` utility that will be used to bridge the two ports
    together. To install this, use the `apt-get install bridge-utils` command. Once
    installed, here is the procedure to turn your Raspberry Pi into a network bridge
    for network taping purposes.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派需要配置为将目标系统的以太网端口桥接到面向网络的端口，反之亦然，以便查看流量。如果不这样做，流量将在到达树莓派后中断。在执行此操作之前，您需要安装将用于将两个端口桥接在一起的`bridge`实用程序。要安装此程序，请使用`apt-get
    install bridge-utils`命令。安装完成后，以下是将树莓派用于网络监听目的的桥接程序。
- en: Tip
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Setting up a Raspberry Pi in this manner is also ideal to use it as an intrusion
    detection/prevention asset. We will cover this in [Chapter 6](ch06.html "Chapter 6. Other
    Raspberry Pi Projects"), *Other Raspberry Pi Projects*.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式设置树莓派也是将其用作入侵检测/预防资产的理想选择。我们将在[第6章](ch06.html "第6章。其他树莓派项目")中介绍这一点，*其他树莓派项目*。
- en: 'You will need to configure both Ethernet ports as open IP addresses, which
    is also known as setting them to `0.0.0.0`. To do this. use the `ifconfig eth[interface
    number] 0.0.0.0` command for both interfaces in the following manner:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要将两个以太网端口都配置为开放IP地址，也就是将它们设置为`0.0.0.0`。要做到这一点，请使用以下命令为两个接口设置`ifconfig eth[interface
    number] 0.0.0.0`命令：
- en: '[PRE9]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure that you download the `bridge-utils` utility before doing this, or
    you will have to reset the Internet-facing interface back to a working state to
    download the utility prior to proceeding. Another work around is installing a
    USB to Wi-Fi adapter or another USB to Ethernet adapter temporarily to get back
    online and download the missing application.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行此操作之前，请确保下载`bridge-utils`实用程序，否则您将需要将面向互联网的接口恢复到工作状态，以便在继续之前下载该实用程序。另一个解决方法是临时安装USB到Wi-Fi适配器或另一个USB到以太网适配器，以恢复在线状态并下载缺少的应用程序。
- en: 'Next, we will bridge the interfaces to a `bridge0` interface using the `brctl`
    command and add both the Ethernet interfaces:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将使用`brctl`命令将接口桥接到`bridge0`接口，并添加两个以太网接口：
- en: '[PRE10]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This command won't work if you haven't installed the `bridge-utils` utility.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尚未安装`bridge-utils`实用程序，则此命令将无法工作。
- en: 'The last step is turning on the new bridge containing both the Ethernet interfaces
    using the following command:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是使用以下命令打开包含两个以太网接口的新桥：
- en: '[PRE11]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The following screenshot shows what all the commands look like:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了所有命令的外观：
- en: '![Getting data to the Pi](img/Insert6435OT_03_10.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![将数据传输到Pi](img/Insert6435OT_03_10.jpg)'
- en: 'The following screenshot shows the output of tcpdump viewing traffic as the
    target laptop surfs the Internet:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了tcpdump查看流量的输出，当目标笔记本电脑浏览互联网时：
- en: '![Getting data to the Pi](img/Insert6435OT_03_11.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![将数据传输到Pi](img/Insert6435OT_03_11.jpg)'
- en: Tip
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You may find that some traffic such as the web-based SSL traffic is encrypted.
    We will cover how to beat this using SSLstrip later in this chapter.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现一些流量，比如基于Web的SSL流量是加密的。我们将在本章后面介绍如何使用SSLstrip来击败这一点。
- en: Another approach to get data through the Raspberry Pi is to redirect traffic
    from a system on the same network subnet using a man-in-the-middle approach so
    that you don't have to mess with the physical connection of that target. Let's
    look at how this works.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 通过树莓派获取数据的另一种方法是使用中间人方法从同一网络子网上的系统重定向流量，这样您就不必处理目标的物理连接。让我们看看这是如何工作的。
- en: Note
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many network switches made by vendors such as Cisco and Juniper offer techniques
    to avoid **Address Resolution Protocol** (**ARP**) poisoning. For this reason,
    we recommend the network tap approach for real penetration testing environments.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 许多由Cisco和Juniper等厂商制造的网络交换机提供了避免**地址解析协议**（**ARP**）中毒的技术。因此，我们建议在真实的渗透测试环境中使用网络监听器方法。
- en: ARP spoofing
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ARP欺骗
- en: 'The second method to capture data with your Raspberry Pi is identifying a target
    system on the same network and ARP spoofing its traffic through your Raspberry
    Pi. To do this, you will need to download the `dsniff` package since it doesn''t
    come preinstalled on the Kali Linux ARM image. Use the `sudo apt-get install dsniff`
    command to install the package prior to launching the ARP spoofing exercise. Once
    you install `dsniff`, you are ready to start your ARP spoofing attack using the
    following steps:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 使用树莓派捕获数据的第二种方法是在同一网络上识别目标系统，并通过树莓派ARP欺骗其流量。为此，您需要下载`dsniff`软件包，因为它不是预装在Kali
    Linux ARM镜像上的。在启动ARP欺骗练习之前，使用`sudo apt-get install dsniff`命令安装软件包。安装`dsniff`后，您就可以使用以下步骤开始ARP欺骗攻击：
- en: Note
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This approach will not work if a target's switch has ARP poisoning mitigation
    enabled. For example, on Cisco switches, enabling **DHCP snooping** and **Dynamic
    ARP Inspection** will prevent this. These commands on a Cisco switch will look
    like `ip dhcp snooping` and `ip arm inspection vlan [vlan number]`.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标交换机启用了ARP中毒防范措施，这种方法将无效。例如，在Cisco交换机上，启用**DHCP监听**和**动态ARP检查**将阻止这种攻击。在Cisco交换机上，这些命令看起来像`ip
    dhcp snooping`和`ip arm inspection vlan [vlan number]`。
- en: 'Enable IP forwarding to enable ARP spoofing to pass packets to and fro between
    the target to the Raspberry Pi using the following command:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用IP转发以启用ARP欺骗，以便将数据包在目标和树莓派之间传递，使用以下命令：
- en: '[PRE12]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Tip
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'You can verify whether IP forwarding is enabled by using the `cat` command
    to display **1** on the screen, representing that it is operating. The command
    is as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`cat`命令验证IP转发是否已启用，以在屏幕上显示**1**，表示它正在运行。命令如下：
- en: '[PRE13]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, you need to find the default gateway and subnet mask of the network to
    which your Raspberry Pi is connected. You can find this using the following command:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您需要找到树莓派连接的网络的默认网关和子网掩码。您可以使用以下命令找到这些信息：
- en: '[PRE14]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following screenshot shows our default gateway as `10.0.2.1` on a class
    C network, also known as network mask `255.255.255.0`:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了我们的默认网关是`10.0.2.1`，位于C类网络上，也称为网络掩码`255.255.255.0`：
- en: '![ARP spoofing](img/Insert6435OT_03_12.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![ARP欺骗](img/Insert6435OT_03_12.jpg)'
- en: 'Next, let''s identify a target to attack. As mentioned earlier in this chapter,
    `nmap` is a great tool for identifying what systems are on the network. In this
    case, we want to do a reverse lookup using `–R` and include `sn` to avoid port
    scanning since we are just looking for a target. The previous screenshot showed
    that the default gateway network is a class C, so we can scan the entire subnet
    for a target with `nmap` using the following command:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们确定一个要攻击的目标。正如本章前面提到的，`nmap`是一个很好的工具，可以用来识别网络上有哪些系统。在这种情况下，我们想要使用`-R`进行反向查找，并包括`sn`以避免端口扫描，因为我们只是在寻找一个目标。之前的截图显示默认网关网络是C类，所以我们可以使用以下命令使用`nmap`扫描整个子网以寻找目标：
- en: '[PRE15]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![ARP spoofing](img/Insert6435OT_03_13.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![ARP欺骗](img/Insert6435OT_03_13.jpg)'
- en: Our scan shows a `Dell` laptop with the IP address `10.0.2.63` that is available
    for our attack. The other devices look like `Cisco` and `Meraki` network devices.
    Let's target the host laptop.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的扫描显示了一个IP地址为`10.0.2.63`的`Dell`笔记本电脑可以被我们攻击。其他设备看起来像是`Cisco`和`Meraki`网络设备。让我们瞄准主机笔记本电脑。
- en: 'Now its time to start ARP cache poisoning the traffic between our target and
    the default gateway so that we can tap into that traffic. Our interface is `eth0`
    that is represented by the `–i` option, the target is `10.0.2.63` that is represented
    by the `–t` option, and the default route that is also known as a gateway is `10.0.2.1`.
    This is represented by the `-r` option. The command is as follows:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是时候开始ARP缓存中毒，欺骗我们的目标和默认网关之间的流量，以便我们可以窃取该流量。我们的接口是`eth0`，由`-i`选项表示，目标是`10.0.2.63`，由`-t`选项表示，而默认路由，也称为网关，是`10.0.2.1`。这由`-r`选项表示。命令如下：
- en: '[PRE16]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In this use case, we are using the physical Ethernet adapter on the Raspberry
    Pi for this attack. If you use a USB wireless adapter, you would most likely use
    `wlan0` as your interface.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们使用树莓派上的物理以太网适配器进行攻击。如果您使用USB无线适配器，您很可能会使用`wlan0`作为您的接口。
- en: You should start to see traffic from the ARP cache poisoning running in the
    window as shown in the following screenshot. Leave this open and run a tool such
    as Wireshark to view the traffic for a data capture. We will cover this later
    in this chapter.![ARP spoofing](img/Insert6435OT_03_14.jpg)
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该开始在窗口中看到ARP缓存中毒的流量，如下面的截图所示。保持此窗口打开，并运行诸如Wireshark之类的工具来查看数据捕获的流量。我们将在本章后面介绍这一点。![ARP欺骗](img/Insert6435OT_03_14.jpg)
- en: Ettercap
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ettercap
- en: There are utilities available that simplify the ARP spoofing or the port bridging
    process. Ettercap is a very popular man-in-the-middle attack suite that includes
    handling the ARP spoofing steps previously described. Its other key features include
    sniffing live connections, filtering content on the fly, and various other attacks
    on victims. Go to [ettercap.github.io/ettercap/](http://ettercap.github.io/ettercap/)
    for more information on this tool.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些工具可以简化ARP欺骗或端口桥接过程。Ettercap是一个非常受欢迎的中间人攻击套件，包括先前描述的处理ARP欺骗步骤。它的其他关键功能包括嗅探实时连接，动态过滤内容以及对受害者进行各种其他攻击。有关此工具的更多信息，请访问[ettercap.github.io/ettercap/](http://ettercap.github.io/ettercap/)。
- en: The Kali Linux ARM image does not include Ettercap. There are two options to
    install Ettercap, as shown in the following screenshot, after you run the `apt-get
    install ettercap` command. We will start by using the Ettercap GUI option and
    use the `apt-get ettercap-graphical` command to install it.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux ARM镜像不包括Ettercap。在运行`apt-get install ettercap`命令后，有两种安装Ettercap的选项，如下面的屏幕截图所示。我们将首先使用Ettercap
    GUI选项，并使用`apt-get ettercap-graphical`命令进行安装。
- en: '![Ettercap](img/Insert6435OT_03_15.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_15.jpg)'
- en: 'To run Ettercap once it is installed, type `sudo ettercap -G`. This will bring
    up the Ettercap GUI as shown in the following screenshot:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，要运行Ettercap，请键入`sudo ettercap -G`。这将显示Ettercap GUI，如下面的屏幕截图所示：
- en: '![Ettercap](img/Insert6435OT_03_16.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_16.jpg)'
- en: Ettercap has two sniffing options. Option one is Unified sniffing, which means
    sniffing all packets that pass on the cable via one interface. This method has
    options such as using promiscuous mode, which means packets that are not directed
    to the host are automatically forwarded to it using layer three routing. Ettercap
    will disable the `kernel ip-forwarding` to avoid sending the packets twice via
    the kernel and Ettercap.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Ettercap有两种嗅探选项。选项一是统一嗅探，这意味着通过一个接口嗅探通过电缆传输的所有数据包。此方法有选项，例如使用混杂模式，这意味着不是直接发送到主机的数据包会通过三层路由自动转发到主机。Ettercap将禁用`内核ip转发`，以避免通过内核和Ettercap两次发送数据包。
- en: Note
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This approach will not work if a target's switch has ARP poisoning mitigation
    enabled. For example, on Cisco switches, enabling **DHCP snooping** and **Dynamic
    ARP Inspection** will prevent this. These commands on a Cisco switch will look
    like `ip dhcp snooping` and `ip arm inspection vlan [vlan number]`.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标交换机启用了ARP欺骗缓解功能，则此方法将无效。例如，在思科交换机上，启用**DHCP监听**和**动态ARP检查**将阻止此攻击。在思科交换机上，这些命令看起来像`ip
    dhcp snooping`和`ip arm inspection vlan [vlan number]`。
- en: Option two is Bridged sniffing, which means using two network interfaces and
    forwarding traffic between them. This is similar to how we used the `brctl` command
    to bridge two ports earlier in this chapter. Using this sniffing method is recommended
    over ARP poisoning since it is stealthier and more likely to be successful. This
    is due to the fact that advanced switches have methods to battle ARP poisoning
    attacks. The downside of this approach is to physically connect a Raspberry Pi
    in this fashion.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 选项二是桥接嗅探，这意味着使用两个网络接口并在它们之间转发流量。这类似于我们在本章早些时候使用`brctl`命令桥接两个端口的方式。建议使用此嗅探方法而不是ARP欺骗，因为它更隐蔽，更有可能成功。这是因为先进的交换机具有对抗ARP欺骗攻击的方法。这种方法的缺点是以这种方式物理连接树莓派。
- en: Tip
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Setting up a Raspberry Pi in this manner is also ideal to use your Raspberry
    Pi as an intrusion detection/prevention asset. We will cover this in [Chapter
    5](ch05.html "Chapter 5. Ending the Penetration Test"), *Ending the Penetration
    Test*.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式设置树莓派也是将其用作入侵检测/预防资产的理想选择。我们将在[第5章](ch05.html "第5章。结束渗透测试")中介绍这一点，*结束渗透测试*。
- en: 'For our example, we will use Unified sniffing since our Raspberry Pi is using
    one `eth0` port for the attack. Click on the **Sniff** menu and select **Unified
    sniffing...** as shown in the following screenshot:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的示例，我们将使用统一嗅探，因为我们的树莓派正在使用一个`eth0`端口进行攻击。单击**嗅探**菜单，然后选择**统一嗅探...**，如下面的屏幕截图所示：
- en: '![Ettercap](img/Insert6435OT_03_17.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_17.jpg)'
- en: 'Ettercap will ask you to select an interface from your Raspberry Pi. We are
    only using the standard `eth0` port for this attack so we have selected that,
    as shown in the following screenshot:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: Ettercap将要求您从树莓派中选择一个接口。对于此次攻击，我们只使用标准的`eth0`端口，因此我们已经选择了它，如下面的屏幕截图所示：
- en: '![Ettercap](img/Insert6435OT_03_18.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_18.jpg)'
- en: Ettercap will display some details about the plugs and ports that it has in
    the bottom window. You will also notice in the following screenshot that some
    new options will appear in the top menu. Now, we need to scan for hosts on the
    network to attack. You can do this by clicking on **Hosts** from the menu and
    selecting **Scan for hosts**. You will see a progress bar while Ettercap scans
    the network for targets.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Ettercap将在底部窗口显示有关插头和端口的一些详细信息。您还会注意到在顶部菜单中会出现一些新选项，如下面的屏幕截图所示。现在，我们需要扫描网络上的主机以进行攻击。您可以通过单击菜单中的**主机**，然后选择**扫描主机**来执行此操作。在Ettercap扫描网络目标时，您将看到一个进度条。
- en: '![Ettercap](img/Insert6435OT_03_19.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_19.jpg)'
- en: 'You will see that the results appear at the bottom of the text box. In our
    example, we found four hosts. You can view the hosts by clicking on **Hosts**
    and choosing **Host list**. The following screenshot shows the **Host List** with
    four hosts:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到结果显示在文本框的底部。在我们的示例中，我们找到了四个主机。您可以单击**主机**，然后选择**主机列表**来查看主机。下面的屏幕截图显示了具有四个主机的**主机列表**：
- en: '![Ettercap](img/Insert6435OT_03_20.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_20.jpg)'
- en: You will need to select which hosts you want to place in your **Target 1** and
    **Target 2** areas in order for things to work. For our example, we will select
    `10.0.2.1`, which is the default gateway, as **Target 2**. We will use the victim
    system `10.0.2.64` as **Target 1**. This will place our Raspberry Pi between both
    these targets.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要选择要放置在**目标1**和**目标2**区域的主机。在我们的示例中，我们将选择`10.0.2.1`，这是默认网关，作为**目标2**。我们将使用受害系统`10.0.2.64`作为**目标1**。这将使我们的树莓派位于这两个目标之间。
- en: 'To add an IP address to a target, click on it in the **IP Address** section
    in the **Host List** and click on **Add to Target** X, where X is the target that
    you are adding. You will see Ettercap display in the bottom window that the IP
    address you selected was added to the target you selected. You can also verify
    this by selecting **Targets** from the menu and choosing **Current Targets**.
    The following screenshot shows the addition of host `10.0.2.64` as **Target 1**:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 要向目标添加IP地址，请在**主机列表**的**IP地址**部分中单击该IP地址，然后单击**添加到目标** X，其中X是您要添加的目标。您将看到Ettercap在底部窗口中显示您选择的IP地址已添加到您选择的目标。您还可以通过从菜单中选择**目标**，然后选择**当前目标**来验证这一点。下面的屏幕截图显示了将主机`10.0.2.64`添加为**目标1**：
- en: '![Ettercap](img/Insert6435OT_03_21.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_21.jpg)'
- en: To ARP spoof our selected targets, we can select **Mitm** and choose **Arp Poisoning...**.
    This will bring up a window asking you to select between two additional options
    of **Sniff remote connections** or **Only poison one-way** as shown in the following
    screenshot. Select **Sniff remote connections** and click on the **OK** button.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 要ARP欺骗我们选择的目标，可以选择**Mitm**，然后选择**Arp Poisoning...**。这将弹出一个窗口，要求您在**嗅探远程连接**或**仅毒害单向**之间进行选择，如下面的屏幕截图所示。选择**嗅探远程连接**，然后单击**确定**按钮。
- en: '![Ettercap](img/Insert6435OT_03_22.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_22.jpg)'
- en: 'Once you click on the **OK** button, Ettercap should display in the bottom
    window that it''s ARP poisoning all victims in Group 1 and Group 2 lists that
    we selected as **Target 1** and **Target 2** from the host scan. The final step
    is to select **Start sniffing** from the **Start** menu, as shown in the following
    screenshot:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 单击**确定**按钮后，Ettercap应在底部窗口中显示，它正在ARP欺骗我们选择的**目标1**和**目标2**，这些目标是我们从主机扫描中选择的**组1**和**组2**中的所有受害者。最后一步是从**开始**菜单中选择**开始嗅探**，如下面的屏幕截图所示：
- en: '![Ettercap](img/Insert6435OT_03_23.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap](img/Insert6435OT_03_23.jpg)'
- en: The Raspberry Pi should now be placed in the middle between the target system
    and the default gateway, and let you to view the traffic with a sniffing software
    such as Wireshark. Ettercap has a sniffing option but it is not as good as other
    tools such as Wireshark, which we will cover later in this chapter. To monitor
    the ARP spoofing attack in Ettercap while it's running, click on **View** and
    select **Connections**.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 树莓派现在应该放在目标系统和默认网关之间的中间位置，并且可以使用诸如Wireshark之类的嗅探软件查看流量。Ettercap有一个嗅探选项，但不如Wireshark等其他工具好，我们将在本章后面介绍。要在Ettercap运行时监视ARP欺骗攻击，请单击**查看**，然后选择**连接**。
- en: Ettercap command line
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ettercap命令行
- en: Ettercap also offers a command-line flavor of the software that consumes less
    resources than the GUI. You can download this version of Ettercap by using the
    `apt-get install ettercap-text-only` command.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: Ettercap还提供了一个命令行版本的软件，它消耗的资源比GUI少。您可以使用`apt-get install ettercap-text-only`命令下载这个版本的Ettercap。
- en: 'Let''s say you want to perform all the steps covered in the GUI example and
    attack all devices on the same network as the Raspberry Pi. The following command
    string will quickly accomplish this:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您想执行GUI示例中涵盖的所有步骤，并攻击与树莓派相同网络上的所有设备。以下命令字符串将快速完成此操作：
- en: '[PRE17]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following screenshot shows an output similar to the GUI approach:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的屏幕截图显示了与GUI方法类似的输出：
- en: '![Ettercap command line](img/Insert6435OT_03_24.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap命令行](img/Insert6435OT_03_24.jpg)'
- en: However, for this example, we are attacking all the hosts in **Group 1** and
    **Group 2**, which means everybody on the network. You can see that we're listening
    on `eth0` as specified in the command, and Ettercap has found four hosts and added
    them to both groups. You will also notice that we couldn't decrypt SSL traffic;
    however, this will be covered later in this chapter.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在本示例中，我们正在攻击**组1**和**组2**中的所有主机，这意味着网络上的所有人。您可以看到我们正在监听`eth0`，如命令中指定的那样，并且Ettercap已找到四个主机并将它们添加到两个组中。您还会注意到我们无法解密SSL流量；但是，这将在本章后面介绍。
- en: 'You can verify whether this Ettercap is working with any network monitoring
    software such as the `urlsnarf` part of the `dsniff` package. To do this, use
    the `urlsnarf –i [the network interface]` command, as shown in the following screenshot:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用`urlsnarf –i [网络接口]`命令验证Ettercap是否与`dsniff`软件包的`urlsnarf`部分等任何网络监视软件一起工作，如下面的屏幕截图所示：
- en: '![Ettercap command line](img/Insert6435OT_03_25.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap命令行](img/Insert6435OT_03_25.jpg)'
- en: 'You will start seeing network traffic in a terminal window representing what
    is being captured while your attack is in progress, as shown in the following
    screenshot:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在攻击进行时，您将在终端窗口中开始看到网络流量，表示正在捕获的内容，如下面的屏幕截图所示：
- en: '![Ettercap command line](img/Insert6435OT_03_26.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![Ettercap命令行](img/Insert6435OT_03_26.jpg)'
- en: Driftnet
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Driftnet
- en: One utility that is used to see images captured during a man-in-the-middle attack
    is a program called Driftnet. There are better ways to find more interesting data;
    however, driftnet can be useful if you are focusing on viewing images. Driftnet
    does not come preinstalled on Kali Linux ARM. You can download it by using the
    `apt-get install driftnet` command.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 用于查看中间人攻击期间捕获的图像的实用程序是一个名为Driftnet的程序。有更好的方法来查找更有趣的数据；但是，如果您专注于查看图像，Driftnet可能会有用。Driftnet未预装在Kali
    Linux ARM上。您可以使用`apt-get install driftnet`命令下载它。
- en: 'Once installed, use the driftnet `–i eth0` command to run it. This will open
    up a new terminal window that will be blank. Any images seen by a victim during
    the man-in-the-middle attack will start populating in this window. The following
    screenshot shows a host accessing [www.cisco.com](http://www.cisco.com) while
    driftnet is capturing images:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后，使用driftnet`–i eth0`命令来运行它。这将打开一个新的终端窗口，该窗口将是空白的。任何受害者在中间人攻击期间看到的图像将开始在此窗口中显示。下面的屏幕截图显示了一个主机在Driftnet捕获图像时访问[www.cisco.com](http://www.cisco.com)：
- en: '![Driftnet](img/Insert6435OT_03_27.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![Driftnet](img/Insert6435OT_03_27.jpg)'
- en: Tuning your network capture
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整您的网络捕获
- en: During real penetration testing exercises, we found that running raw `tcpdump`
    captures or using tools such as Wireshark consume a lot of processing power and
    sometimes crash the Raspberry Pi or render it useless. For this reason, the best
    practice is to avoid using such tools in real environments unless you tune what
    is captured to reduce the overhead on the Raspberry Pi. Here are some steps to
    capture network traffic using `tcpdump` in a controlled manner.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在真实的渗透测试练习中，我们发现运行原始的`tcpdump`捕获或使用Wireshark等工具会消耗大量的处理能力，有时会导致树莓派崩溃或变得无用。因此，在真实环境中最好避免使用这些工具，除非您调整捕获内容以减少对树莓派的负担。以下是以受控方式使用`tcpdump`捕获网络流量的一些步骤。
- en: Tcpdump is a very useful tool and knowing what you are doing with the utility
    will help you to get the most out of the tool on the Raspberry Pi. The following
    section will provide a few tuning pointers but it is not intended to be a tcpdump
    tutorial.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Tcpdump是一个非常有用的工具，了解如何使用该实用程序将有助于您充分利用树莓派上的该工具。以下部分将提供一些调优指针，但不打算成为tcpdump教程。
- en: 'The first thing to consider is how to narrow down what tcpdump is looking for.
    You can do this in a few ways. The first way is to specify the `host` keyword.
    The `host` keyword will look for traffic specified by a hostname or IP address.
    It can be done in the following manner:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要考虑的是如何缩小tcpdump的搜索范围。您可以通过几种方式来做到这一点。第一种方法是指定`host`关键字。`host`关键字将查找由主机名或IP地址指定的流量。可以通过以下方式完成：
- en: '[PRE18]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Or, we can do it using the IP address in the following manner:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我们可以按以下方式使用IP地址：
- en: '[PRE19]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You can also specify the source IP address, destination IP address, or both
    the source and the destination. In the following example, we have defined both
    the source and the destination:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以指定源IP地址、目标IP地址，或者同时指定源和目标。在以下示例中，我们已经定义了源和目标：
- en: '[PRE20]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: If needed, you don't have to be this specific and can limit the search to only
    the source or the destination.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，您不必这么具体，可以将搜索限制在源或目标上。
- en: You may have a need to look at all the traffic belonging to a particular network's
    subnet. To do this, use the `net` command in `tcpdump`. You should, however, keep
    in mind a few things before doing this. On a busy network, your Raspberry Pi will
    most likely not be able to keep up with this traffic capture. It is not only limited
    by the processing power, but also by the 100 MB network interface. If you exceed
    the capabilities of the Raspberry Pi, the best-case scenario is that it will drop
    traffic and not capture what you expected. The worst-case scenario could mean
    crashing the system.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能需要查看属于特定网络子网的所有流量。为此，请在`tcpdump`中使用`net`命令。然而，在执行此操作之前，您应该记住一些事情。在繁忙的网络中，您的树莓派很可能无法跟上这些流量的捕获。它不仅受到处理能力的限制，还受到100
    MB网络接口的限制。如果超出了树莓派的能力，最好的情况是它会丢弃流量，而不是捕获您期望的内容。最坏的情况可能意味着系统崩溃。
- en: 'The following commands are used to look at all the traffic belonging to a particular
    network''s subnet:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于查看属于特定网络子网的所有流量：
- en: '[PRE21]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can search for specific protocols as shown in the following example:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下示例搜索特定的协议：
- en: '[PRE22]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Although it is called tcpdump, you can specify **Transmission Control Protocol**
    (**TCP**), **User Datagram Protocol** (**UDP**), and **Internet Control Message
    Protocol** (**ICMP**) protocols.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管它被称为tcpdump，但您可以指定**传输控制协议**（**TCP**）、**用户数据报协议**（**UDP**）和**互联网控制消息协议**（**ICMP**）协议。
- en: 'You can specify specific port numbers to monitor. You can also specify whether
    this is going to be a source port or a destination port. You can see from the
    following example that we combined several options:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以指定要监视的特定端口号。您还可以指定这将是源端口还是目标端口。您可以从以下示例中看到，我们结合了几个选项：
- en: '[PRE23]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You should write your findings to a file that can be analyzed later. To write
    your findings to a file, use the `–w` option followed by the name of the file
    in which you are going to save them. It is good practice to use `.cap` as a file
    extension:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该将发现写入一个文件，以便以后进行分析。要将您的发现写入文件，请使用`-w`选项，后面跟上您要保存它们的文件名。最好使用`.cap`作为文件扩展名：
- en: '[PRE24]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'You can read the file directly from tcpdump using the `–r` option as shown
    in the following command:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接从tcpdump中使用`-r`选项读取文件，如以下命令所示：
- en: '[PRE25]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: However, we recommend that you remotely transfer the file to an FTP, SCP, HTTPS
    or any other type of server.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们建议您远程传输文件到FTP、SCP、HTTPS或任何其他类型的服务器。
- en: Scripting tcpdump for future access
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为将来访问编写tcpdump脚本
- en: You may want to export network captures to avoid running out of space on the
    local Raspberry Pi. Here are some steps to export the captured data to an external
    source for more resource-intensive tasks such as password cracking or for reporting
    purposes. These are also ideal for other sections of this book that require exporting
    data.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能希望导出网络捕获以避免在本地树莓派上空间不足。以下是将捕获的数据导出到外部源以进行更多资源密集型任务（如破解密码或报告目的）的一些步骤。这些步骤也适用于本书的其他部分，需要导出数据的部分。
- en: In [Chapter 2](ch02.html "Chapter 2. Preparing the Raspberry Pi"), *Preparing
    the Raspberry Pi*, we recommended setting up a remote server that is also known
    as a C&C server. We also mentioned transferring captured files to an FTP server
    in one of the previous steps in this chapter. Regarding the use of FTP, it is
    important to remember that FTP is inherently insecure. People have used FTP for
    a variety of different reasons. However, for real world penetration testing exercises,
    it is critical to protect FTP through another form of encryption such as an **Internet
    Protocol Secutiry** (**IPsec**) tunnel or **SSH/Secure File Transfer Protocol**
    (**SFTP**). IPsec ensures all data transfers never occur over the Internet that
    is, in the open for others to capture and view. Protecting your FTP also gives
    you full control of the both sides of the networks meaning the client and server,
    as well the transport medium.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章。准备树莓派")中，*准备树莓派*，我们建议设置一个远程服务器，也称为C&C服务器。我们还在本章的先前步骤中提到将捕获的文件传输到FTP服务器。关于使用FTP，重要的是要记住FTP本身是不安全的。人们出于各种不同的原因使用FTP。但是，对于真实的渗透测试练习，至关重要的是通过其他形式的加密来保护FTP，例如**Internet
    Protocol Secutiry**（**IPsec**）隧道或**SSH/Secure File Transfer Protocol**（**SFTP**）。IPsec确保所有数据传输都不会在互联网上发生，也就是说，不会公开给其他人捕获和查看。保护您的FTP还可以让您完全控制网络的两端，即客户端和服务器，以及传输介质。
- en: Note
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You may ask "Why go to these lengths and not just use FTP?" If you plan to capture
    sensitive information, it would make sense to protect that data. This begs the
    question, why consider FTP in the first place? We used FTP in previous sections
    because of industry familiarity and the availability of automatic scripting for
    file transfers. However, you can achieve the same results by searching for more
    secure protocols.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会问“为什么要这样做，而不只使用FTP？”如果您计划捕获敏感信息，保护这些数据是有意义的。这引出了一个问题，为什么首先考虑FTP？我们在先前的部分中使用FTP是因为行业熟悉度和文件传输的自动脚本的可用性。但是，您可以通过寻找更安全的协议来实现相同的结果。
- en: Let's look at how to develop a simple FTP script to extract data from a remote
    Raspberry Pi in the following manner. First, open up a text editor and save the
    file with a `.py` extension. We saved our file as `ftp.py`.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何开发一个简单的FTP脚本，以以下方式从远程树莓派提取数据。首先，打开文本编辑器并将文件保存为`.py`扩展名。我们将文件保存为`ftp.py`。
- en: '[PRE26]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Next, you will need to change the permissions on the file. You can do this by
    issuing the `chmod 777 ftp.py` command to make it an executable file.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要更改文件的权限。您可以通过发出`chmod 777 ftp.py`命令来将其设置为可执行文件。
- en: This is a very basic script. You will need to specify the file you would like
    to transfer, the username, password, and the IP address of your server.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常基本的脚本。您需要指定要传输的文件，用户名，密码和服务器的IP地址。
- en: If you find that you use this script method often, you probably will want to
    add options such as automatically monitoring a directory for captures and then
    using FTP to automate an upload. You may even want to change the upload directory.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现经常使用此脚本方法，您可能会希望添加选项，例如自动监视目录以进行捕获，然后使用FTP自动上传。您甚至可能想要更改上传目录。
- en: Tcpdump and files exported from a Raspberry Pi containing tons of captured packet
    data might be difficult to view as well as organize. A more popular approach of
    working with such data is using the industry standard GUI-based network analyzer
    Wireshark for this purpose. Let's look at how that application works.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Tcpdump和从树莓派导出的包含大量捕获数据的文件可能难以查看和组织。处理这些数据的更流行的方法是使用行业标准的基于GUI的网络分析器Wireshark。让我们看看该应用程序的工作原理。
- en: Note
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We found that Wireshark requires more processing power than many lightweight
    command-line tools and sometimes might cause the Raspberry Pi to become unstable
    or flat out crash. For this reason, we recommend that you use tcpdump and tune
    the capture , which we just covered as the primary method to capture data. Wireshark
    is better suited to use on your C&C server to view captured data rather than directly
    from your Raspberry Pi.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现Wireshark需要比许多轻量级命令行工具更多的处理能力，有时可能会导致树莓派变得不稳定或崩溃。因此，我们建议您使用tcpdump并调整捕获，这是我们刚刚介绍的主要捕获数据的方法。Wireshark更适合在C&C服务器上使用，以查看捕获的数据，而不是直接从树莓派上使用。
- en: Wireshark
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Wireshark
- en: Wireshark is one of the most popular open source packet analyzer programs available
    today. It can be used to troubleshoot network problems, analyzing communication
    between systems, and in the case of a penetration test, to capture data once you
    breach a network. Think of Wireshark as tcpdump with a pretty graphical interface
    and nifty data sorting features. Wireshark comes preinstalled on the Kali Linux
    ARM image and can be found under the top ten tools category in the Kali Linux
    application drop-down menu.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark是当今最受欢迎的开源数据包分析程序之一。它可以用于解决网络问题，分析系统之间的通信，并在渗透测试的情况下，一旦突破网络，就可以捕获数据。将Wireshark视为具有漂亮图形界面和巧妙数据排序功能的tcpdump。Wireshark预装在Kali
    Linux ARM映像上，并可以在Kali Linux应用程序下拉菜单的前十工具类别中找到。
- en: Tip
  id: totrans-244
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Test out your Wireshark use case in a lab prior to using it in a live environment.
    We found that Wireshark sometimes crashed our Raspberry Pi during real exercises.
    For this reason, we recommend that you use a tuned tcpdump approach directly on
    a Raspberry Pi and Wireshark on a remote C&C server. If you must use Wireshark,
    use TShark on the Raspberry Pi and the full-blown Wireshark on your C&C server.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际环境中使用Wireshark之前，请在实验室中测试您的Wireshark用例。我们发现Wireshark有时会在真实练习中导致树莓派崩溃。因此，我们建议您在树莓派上直接使用调整后的tcpdump方法，并在远程C&C服务器上使用Wireshark。如果必须使用Wireshark，请在树莓派上使用TShark，在C&C服务器上使用完整的Wireshark。
- en: There are two ways of using Wireshark. Let's start by looking at the full-blown
    GUI.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Wireshark有两种方式。让我们先看看完整的GUI。
- en: When you start Wireshark, you will see an error message and later a warning
    message stating that you are running Wireshark as a super user, also known as
    root. Just click on **OK** to access the main GUI.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 当您启动Wireshark时，您会看到一个错误消息，稍后会看到一个警告消息，指出您正在以超级用户，也就是root的身份运行Wireshark。只需点击**OK**即可访问主GUI。
- en: 'The following screenshot shows a Wireshark GUI:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了Wireshark的GUI：
- en: '![Wireshark](img/Insert6435OT_03_28.jpg)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![Wireshark](img/Insert6435OT_03_28.jpg)'
- en: 'At this point, we assume that you have traffic running through your Raspberry
    Pi using methods previously covered in this chapter and are now looking at live
    data. The first step is viewing what interfaces you want to examine with Wireshark
    by clicking on the **Interface List** button. This will bring up a window showing
    all the interfaces and which interfaces are seeing traffic:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们假设您的树莓派上有流量运行，使用了本章前面介绍的方法，并且现在正在查看实时数据。第一步是通过点击**Interface List**按钮来查看您想要用Wireshark检查的接口。这将带来一个窗口，显示所有的接口以及哪些接口正在看到流量。
- en: '![Wireshark](img/Insert6435OT_03_29.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![Wireshark](img/Insert6435OT_03_29.jpg)'
- en: If you are running the Raspberry Pi as a bridge between two Ethernet interfaces,
    you will need to select the `bridge0` interface as your data source. If you are
    using the ARP poisoning method to read data, meaning you are only using one interface,
    you will need to select a network facing port such as `eth0`, as shown in the
    previous screenshot example. Click on the **Start** button once you click the
    check box next to the interface you are going to monitor.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您将树莓派作为两个以太网接口之间的桥接器运行，您需要选择`bridge0`接口作为数据源。如果您正在使用ARP欺骗方法来读取数据，意味着您只使用一个接口，您需要选择一个面向网络的端口，比如`eth0`，如前面的屏幕截图所示。一旦您选择了一个接口，点击**Start**按钮，然后点击要监视的接口旁边的复选框。
- en: Note
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can also use Wireshark to view the data previously captured, such as in
    a **Packet Capture** (**pcap**) file. This is ideal when placing a Raspberry Pi
    on a network to do a network capture and later view what was found. This method
    will eat up memory, so it is recommended to work with live data rather than archiving
    large amounts of packet capture files on a Raspberry Pi due to its limited storage
    capabilities. A possible workaround is storing and exporting network captures
    to an external C&C server to meet the penetration testing purpose.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Wireshark查看先前捕获的数据，比如**数据包捕获**（**pcap**）文件。当将树莓派放在网络上进行网络捕获并稍后查看所发现的内容时，这是理想的。这种方法会占用内存，因此建议使用实时数据而不是在树莓派上存档大量数据包捕获文件，因为其存储能力有限。一个可能的解决方法是将网络捕获存储并导出到外部C&C服务器，以满足渗透测试的目的。
- en: 'Once you select an interface, it will bring up the Wireshark live capture feed
    page. You will probably see a ton of data including the ARP poisoning packets,
    shown in black, if you are using the ARP spoofing method to get traffic through
    your Raspberry Pi:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了一个接口，它将带来Wireshark实时捕获的页面。您可能会看到大量数据，包括ARP欺骗数据包，如果您正在使用ARP欺骗方法来通过您的树莓派获取流量，它们会显示为黑色：
- en: '![Wireshark](img/Insert6435OT_03_30.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![Wireshark](img/Insert6435OT_03_30.jpg)'
- en: One of Wireshark's popular features is being able to sort through tons of logs
    very quickly. You can enter the information into the filter line such as a particular
    host, type of packet, and so on, and quickly narrow down to a specific packet
    of interest. Let's walk you through an example attack.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: Wireshark的一个受欢迎的功能是能够快速筛选大量日志。您可以在过滤行中输入信息，比如特定主机、数据包类型等，然后快速缩小到感兴趣的特定数据包。让我们通过一个例子攻击来向您展示。
- en: Capturing a WordPress password example
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 捕获WordPress密码的例子
- en: In this example, we're going to log in to a WordPress website as an administrator
    with the target system before stopping the Wireshark live capture. This will capture
    the host's login session so that the attacker can view the captured password.
    To stop the Wireshark capture, click on the red square. It may take a minute or
    so for the Wireshark interface to catch up with the display.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将以管理员身份登录到一个WordPress网站，然后停止Wireshark的实时捕获。这将捕获主机的登录会话，以便攻击者可以查看捕获的密码。要停止Wireshark捕获，请点击红色方块。Wireshark界面可能需要一两分钟才能跟上显示。
- en: At this point, we want to look for the WordPress login information. This can
    be found in a POST packet, meaning data sent from a user to a system such as a
    username and password. We can use the filter to filter out traffic and zero in
    on our target data. So, for this example, we're going to look for the target's
    IP address using the `ip.src ==` command and the http request login information
    using the `http.request.full_url` command, then click on **Apply** to execute
    it. You can see the command in the previous screenshot in the green filter area
    and also what the output looks like once filtered.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们想要查找WordPress登录信息。这可以在POST数据包中找到，意味着用户发送给系统的数据，比如用户名和密码。我们可以使用过滤器来过滤流量并锁定我们的目标数据。因此，在这个例子中，我们将使用`ip.src
    ==`命令来查找目标的IP地址，使用`http.request.full_url`命令来查找http请求登录信息，然后点击**Apply**来执行它。您可以在之前的屏幕截图中看到命令在绿色过滤区域中，以及过滤后的输出样子。
- en: Note
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Notice that the color of the filter section is green after we entered the command
    string. Wireshark verifies text as you enter it and offers possible filter expressions.
    If the output has an error, the filter box color will turn red.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在我们输入命令字符串后，过滤部分的颜色是绿色的。Wireshark在您输入文本时会验证文本并提供可能的过滤表达式。如果输出有错误，过滤框的颜色会变成红色。
- en: 'So, we use the following command to filter out the target IP address:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们使用以下命令来过滤目标IP地址：
- en: '[PRE27]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Tip
  id: totrans-265
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: To avoid the Raspberry Pi crashing, it is recommended that you pause a network
    capture and wait a minute prior to entering filtering expressions.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免树莓派崩溃，建议您暂停网络捕获并在输入过滤表达式之前等待一分钟。
- en: It may take a few minutes for Wireshark to weed out all the unwanted data once
    you apply a filter. You will see a progress window as Wireshark processes the
    filter on the captured data.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦应用过滤器，Wireshark需要一些时间来清除所有不需要的数据。在Wireshark处理捕获数据上的过滤器时，您将看到一个进度窗口。
- en: We can ignore the GET packets since that is the host loading the website prior
    to logging in as well as the TCP packets since they are the ARP spoof data. To
    quickly look through the data, we can click on one of the tabs such as the **Protocol**
    tab to sort the data in **Alphabetical** order based on that tab's function. Doing
    this will take a few seconds and will once again bring up a process tab during
    the compute time.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以忽略GET数据包，因为这是主机在登录之前加载网站，以及TCP数据包，因为它们是ARP欺骗数据。要快速查看数据，我们可以单击其中一个选项卡，例如**协议**选项卡，以根据该选项卡的功能按**字母顺序**对数据进行排序。这样做需要几秒钟，并且在计算时间内再次会出现一个进程选项卡。
- en: 'What we want is the POST line that shows when a user submits information to
    the server. This is shown highlighted in the following screenshot:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要的是显示用户向服务器提交信息时显示的POST行。如下屏幕截图所示：
- en: '![Capturing a WordPress password example](img/Insert6435OT_03_31.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![捕获WordPress密码示例](img/Insert6435OT_03_31.jpg)'
- en: 'To view the raw packets, we need to click on this packet line, right-click
    on it to bring up the options, and then select **Follow TCP String**. This will
    open a process string and bring up the raw login data:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看原始数据包，我们需要单击此数据包行，右键单击以显示选项，然后选择**跟踪TCP字符串**。这将打开一个过程字符串并显示原始登录数据：
- en: '![Capturing a WordPress password example](img/Insert6435OT_03_32.jpg)'
  id: totrans-272
  prefs: []
  type: TYPE_IMG
  zh: '![捕获WordPress密码示例](img/Insert6435OT_03_32.jpg)'
- en: In the raw data capture previously shown, we can see lots of useful data (key
    items are distorted since this is a live server). The line to note is the one
    containing **log=** showing the user name and **pwd=** showing the password in
    clear text.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在先前显示的原始数据捕获中，我们可以看到许多有用的数据（由于这是一个实时服务器，关键项目已经失真）。要注意的行是包含**log=**显示用户名和**pwd=**显示明文密码的行。
- en: TShark
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TShark
- en: TShark is the command-line version of Wireshark. If you have to run Wireshark
    from a Raspberry pi, TShark is the best option. Consider TShark as an alternative
    to using tcpdump for capturing packets.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: TShark是Wireshark的命令行版本。如果您必须从树莓派运行Wireshark，TShark是最佳选择。将TShark视为捕获数据包的tcpdump的替代方案。
- en: 'To run TShark, simply type `tshark` in a command-line terminal and it will
    select an available interface. You can also manually select the interface to capture
    by using `tshark eth0` to select the `eth0` port. The following screenshot shows
    `tshark` doing a basic capture:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行TShark，只需在命令行终端中输入“tshark”，它将选择一个可用的接口。您还可以使用“tshark eth0”手动选择要捕获的接口，以选择“eth0”端口。以下屏幕截图显示了“tshark”进行基本捕获：
- en: '![TShark](img/6435OT_03_A.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![TShark](img/6435OT_03_A.jpg)'
- en: 'You will most probably want to capture data to a file so that you can export
    it to your C&C server. You can specify a file to save the captured data by using
    the `tshark –w [file name].cap` command. The following screenshot shows running
    a capture that saves the data to a file named `capture.cap`. We can show this
    file using the `ls` command once we stop the capture using the *Ctrl* + *C* command:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 您很可能希望将数据捕获到文件中，以便将其导出到您的C＆C服务器。您可以使用“tshark –w [文件名].cap”命令指定要保存捕获数据的文件。以下屏幕截图显示了运行捕获并将数据保存到名为“capture.cap”的文件中。我们可以使用*Ctrl*
    + *C*命令停止捕获后使用“ls”命令显示此文件：
- en: '![TShark](img/6435OT_03_B.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![TShark](img/6435OT_03_B.jpg)'
- en: If you don't stop a TShark capture, at some point you will run out of memory.
    To avoid this, you can specify how many packets you want to capture by adding
    `–c [number]` to the command. In our example, we could have used the command `tshark
    –c 500 –w capture.cap` to capture five hundred packets before stopping. This is
    the ideal situation when performing a targeted penetration test, meaning you specify
    the available storage space for your capture, save that information to a file,
    and export it to your C&C server using the steps covered in this book. We covered
    a similar process by creating a script that did this using tcpdump. You could
    adjust that script to run TShark rather than tcpdump if you want an alternative
    option for the packet capture tool.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不停止TShark捕获，最终会耗尽内存。为了避免这种情况，您可以通过在命令中添加“-c [数字]”来指定要捕获的数据包数量。在我们的示例中，我们可以使用命令“tshark
    –c 500 –w capture.cap”来在停止之前捕获五百个数据包。这是在执行有针对性的渗透测试时的理想情况，这意味着您可以为捕获指定可用存储空间，将该信息保存到文件中，并使用本书介绍的步骤将其导出到您的C＆C服务器。我们通过创建一个脚本来完成了类似的过程，该脚本使用tcpdump执行此操作。如果您希望使用替代选项进行数据包捕获，可以调整该脚本以运行TShark而不是tcpdump。
- en: Beating HTTPS with SSLstrip
  id: totrans-281
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过SSLstrip击败HTTPS
- en: One defense that host systems have against man-in-the-middle attacks on web
    servers is SSL encryption. You typically run into this when you access a sensitive
    service such as online banking or online shopping. Many browsers showcase that
    HTTPS is in place by displaying a little lock giving the end user a sense of security.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 主机系统对Web服务器进行中间人攻击的一种防御是SSL加密。当您访问诸如在线银行或在线购物等敏感服务时，您通常会遇到这种情况。许多浏览器通过显示一个小锁来展示HTTPS已经启用，给最终用户一种安全感。
- en: Thanks to a security researcher Moxie Marlinspike, this layer of defense can
    be bypassed using SSLstrip. SSLstrip works by proxying HTTPS requests from the
    victim and sending them using HTTP. The HTTP traffic is not encrypted, making
    it vulnerable to eavesdropping. Once SSLstrip forces the HTTP connection, an attacker
    can use tcpdump to view the unencrypted login credentials of people accessing
    accounts such as Facebook.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 由于安全研究人员Moxie Marlinspike的工作，可以通过SSLstrip绕过这一层防御。SSLstrip通过代理受害者的HTTPS请求并使用HTTP发送它们来工作。HTTP流量未加密，容易被窃听。一旦SSLstrip强制使用HTTP连接，攻击者就可以使用tcpdump查看访问Facebook等帐户的人的未加密登录凭据。
- en: The **HTTP Strict Transport Security** (**HSTS**) specification was subsequently
    developed to combat these attacks; however, deployment of HSTS has been slow.
    Also, some businesses such as online banking are adopting the policy of not hosting
    an HTTP version of their website, which would show a message saying "page not
    found" on the host if this attack is performed. Unfortunately, many other businesses
    would rather host an HTTP and HTTPS version of their website to avoid looking
    as if their website is down regardless of the risk of a man-in-the-middle attack
    with SSLstrip. For this and other reasons, SSLstrip attacks are still commonly
    seen today.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 随后开发了**HTTP严格传输安全**（**HSTS**）规范来对抗这些攻击；然而，HSTS的部署速度较慢。此外，一些企业，如在线银行，正在采用不托管其网站的HTTP版本的政策，这将在进行此攻击时显示“页面未找到”的消息。不幸的是，许多其他企业宁愿托管其网站的HTTP和HTTPS版本，以避免看起来像他们的网站已关闭，而不考虑使用SSLstrip进行中间人攻击的风险。因此，今天仍然经常看到SSLstrip攻击。
- en: 'Let''s look at an SSLstrip attack between a host and the Internet, which is
    trying to access his/her Facebook account. The following screenshot shows how
    communication should happen between the user and Facebook:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个主机和互联网之间的SSLstrip攻击，他/她试图访问自己的Facebook帐户。以下屏幕截图显示了用户和Facebook之间的通信应该如何进行：
- en: '![Beating HTTPS with SSLstrip](img/Insert6435OT_03_33.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![使用SSLstrip击败HTTPS](img/Insert6435OT_03_33.jpg)'
- en: When a man-in-the-middle SSLstrip attack is involved, the SSL encrypted session
    is prevented and HTTP responses are sent back to the victim. As they send information,
    they do not know that the information is in plain text and is easy to view with
    a network sniffer.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及中间人SSLstrip攻击时，SSL加密会话被阻止，HTTP响应被发送回受害者。当他们发送信息时，他们不知道信息是明文的，并且可以使用网络嗅探器轻松查看。
- en: 'The following image shows the SSL connection intercepted by SSLstrip:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了SSLstrip拦截的SSL连接：
- en: '![Beating HTTPS with SSLstrip](img/Insert6435OT_03_34.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![使用SSLstrip击败HTTPS](img/Insert6435OT_03_34.jpg)'
- en: The use case for a Raspberry Pi with Kali Linux is placing the attack system
    on a network and scanning for systems to attack. Using the steps in this section,
    an attacker can perform a man-in-the-middle SSLstrip attack against internal users
    with the goal of mining user passwords.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Kali Linux的Raspberry Pi的用例是将攻击系统放在网络上并扫描要攻击的系统。使用本节中的步骤，攻击者可以对内部用户执行中间人SSLstrip攻击，以挖掘用户密码。
- en: Launching an SSLstrip attack
  id: totrans-291
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发动SSLstrip攻击
- en: 'An SSLstrip attack is launched using the following steps:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: SSLstrip攻击是通过以下步骤启动的：
- en: The Kali Linux ARM image doesn't come with an installed SSLstrip, so before
    we do anything, we must download it. Issue the `apt-get install sslstrip` command
    to download the utility.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kali Linux ARM镜像不带有安装的SSLstrip，因此在我们做任何事情之前，我们必须下载它。发出`apt-get install sslstrip`命令来下载实用程序。
- en: 'The first thing we need to do once we install SSLstrip is launch an ARP spoof.
    This was covered earlier in this chapter, so we will quickly cover the ARP spoofing
    process. To summarize the steps, do the following:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装SSLstrip后，我们需要做的第一件事是启动ARP欺骗。这在本章的前面已经介绍过，因此我们将快速介绍ARP欺骗过程。总结这些步骤，执行以下操作：
- en: Enable IP forward using `echo 1 > /proc/sys/net/ipv4/ip_forward`
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`echo 1 > /proc/sys/net/ipv4/ip_forward`启用IP转发
- en: Identify the default gateway and subnet mask using `netstat –nr`
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`netstat -nr`识别默认网关和子网掩码
- en: Use `nmap` to identify a target on the network using `nmap –Rsn [network/subnet
    mask]`
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`nmap -Rsn [网络/子网掩码]`使用`nmap`标识网络上的目标
- en: Start ARP cache poisoning using `arpspoof –i eth0 –t [target IP] –r [default
    gateway]`
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`arpspoof -i eth0 -t [目标IP] -r [默认网关]`启动ARP缓存中毒
- en: This will show traffic from the ARP cache poisoning. Leave this window open
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这将显示ARP缓存中毒的流量。保持此窗口打开
- en: 'Once this is running, you should start seeing the ARP spoofing traffic as shown
    in the following screenshot:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦运行，您应该开始看到ARP欺骗流量，如下面的屏幕截图所示：
- en: '![Launching an SSLstrip attack](img/Insert6435OT_03_35.jpg)'
  id: totrans-301
  prefs: []
  type: TYPE_IMG
  zh: '![发动SSLstrip攻击](img/Insert6435OT_03_35.jpg)'
- en: Once the ARP cache poisoning is set up, open a new terminal window to set up
    port redirection using `iptables`. This enables the attacker to capture traffic
    sent to an HTTP server on TCP 80 and redirect that traffic to the SSLstrip listener
    port. The attacker can use any applicable value. For example, we will show this
    using `8080` for both the destination port and the redirection destination using
    the following command.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦设置了ARP缓存中毒，打开一个新的终端窗口，使用`iptables`设置端口重定向。这使得攻击者能够捕获发送到TCP 80上的HTTP服务器的流量，并将该流量重定向到SSLstrip监听端口。攻击者可以使用任何适用的值。例如，我们将使用以下命令使用`8080`来显示这一点。
- en: '[PRE28]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The selected redirection destination must also be used for setting the listener
    port for the SSLstrip.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 所选的重定向目的地也必须用于设置SSLstrip的监听端口。
- en: 'The following screenshot shows the launch of the preceding command:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上述命令的启动：
- en: '![Launching an SSLstrip attack](img/Insert6435OT_03_36.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![发动SSLstrip攻击](img/Insert6435OT_03_36.jpg)'
- en: Note
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To disable the `PREROUTING` rule in this command, replace the `–A` with a `–D`
    to clear all table rules used.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 禁用此命令中的`PREROUTING`规则，将`-A`替换为`-D`以清除所使用的所有表规则。
- en: To flush, use the command `iptables –t nat –F`
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要刷新，请使用命令`iptables -t nat -F`
- en: To verify, use the command `iptables –t nat –L`
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要验证，请使用命令`iptables -t nat -L`
- en: Tip
  id: totrans-311
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: ARP spoof has many configuration options. You can use the `man tables` command
    to see additional options.
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: ARP欺骗有许多配置选项。您可以使用`man tables`命令查看其他选项。
- en: Launch the SSLstrip attack. For this example, we will use TCP `8080` as the
    listening port. So, the command will be `sslstrip -l 8080,` as shown in the following
    screenshot:![Launching an SSLstrip attack](img/Insert6435OT_03_37.jpg)
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发动SSLstrip攻击。在本例中，我们将使用TCP `8080`作为监听端口。因此，命令将是`sslstrip -l 8080`，如下面的屏幕截图所示：![发动SSLstrip攻击](img/Insert6435OT_03_37.jpg)
- en: To see the results of your attack, open another terminal window and type `tail
    –n 50 –f sslstrip.log`.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看攻击结果，请打开另一个终端窗口并键入`tail -n 50 -f sslstrip.log`。
- en: To test this attack, open a web browser on a victim's system and access a system
    requiring access using SSL encryption such as online mail. Go back to your terminal
    window showing the `sslstrip.log` file and you should see the username and password
    in clear text, as highlighted in the following screenshot. This data can be packaged
    in a text file so that an attacker can retrieve it at a later time.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试这种攻击，请在受害者系统上打开一个网页浏览器，并访问需要使用SSL加密的系统，比如在线邮件。然后返回到显示“sslstrip.log”文件的终端窗口，你应该能看到清晰文本中的用户名和密码，如下面的屏幕截图所示。这些数据可以打包成一个文本文件，以便攻击者可以在以后的时间检索它。
- en: '![Launching an SSLstrip attack](img/Insert6435OT_03_38.jpg)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![启动SSLstrip攻击](img/Insert6435OT_03_38.jpg)'
- en: Note
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This attack is limited to the LAN networks.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击仅限于局域网。
- en: Summary
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we started using the Raspberry Pi with Kali Linux for penetration
    testing purposes. We first covered how to use nmap to assess a network for devices,
    ports, and other data points for possible exploitation. Next, we looked at how
    to crack wireless networks so that we could access the network and run nmap or
    other scanning tool sets.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们开始使用树莓派和Kali Linux进行渗透测试。我们首先介绍了如何使用nmap来评估网络设备、端口和其他可能被利用的数据点。接下来，我们看了如何破解无线网络，以便我们可以访问网络并运行nmap或其他扫描工具集。
- en: Once we covered basic network reconnaissance for LAN and wireless, we looked
    at a few attack techniques that could be launched while on the network. The first
    attack that we covered was performing a man-in-the-middle attack with the purpose
    of getting data through the Raspberry Pi. Later, we covered how to break SSL encryption
    while monitoring traffic between a trusted source and a victim. We also included
    how to tune packet captures and export data to avoid crashing the Raspberry Pi.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对局域网和无线网络进行了基本的网络侦察，我们就看了一些可以在网络上启动的攻击技术。我们首先介绍了进行中间人攻击的方法，目的是通过树莓派获取数据。后来，我们介绍了如何在监视受信任源和受害者之间的流量时突破SSL加密。我们还介绍了如何调整数据包捕获并导出数据，以避免树莓派崩溃。
- en: The next chapter will look at how to leverage the Raspberry Pi to compromise
    systems and advanced tactics to capture sensitive data.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将介绍如何利用树莓派来破坏系统和捕获敏感数据的高级战术。
