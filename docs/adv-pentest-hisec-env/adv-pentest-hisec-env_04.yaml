- en: Chapter 4. Remote Exploitation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。远程利用
- en: 'We have gathered our data, reviewed the information and chosen a few possible
    targets for the next stage in our penetration test. Now it is time to go the extra
    mile and prove that the vulnerabilities found have a potential to impact the bottom
    line. After all, this is what your clients need to know and understand about their
    environment. In this chapter, we will quickly review the basics of exploitation
    and then move on to the more interesting techniques and methods that will let
    us understand the true security posture of the network environment we are testing.
    Items of interest discussed in this chapter include the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经收集了数据，审查了信息，并为我们渗透测试的下一阶段选择了一些可能的目标。现在是时候走额外的一英里，证明发现的漏洞可能对底线产生影响。毕竟，这是你的客户需要了解和理解的关于他们的环境的。在本章中，我们将快速回顾利用的基础知识，然后转向更有趣的技术和方法，让我们了解我们正在测试的网络环境的真正安全状况。本章讨论的感兴趣的项目包括以下内容：
- en: Adding a vulnerable machine to our sandboxed virtual network enables you to
    follow along with the examples presented in the book
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向我们的沙盒虚拟网络添加一个易受攻击的机器，使你能够跟着本书中的例子进行操作
- en: Compiling and/or rewriting proof of concept exploit code found on the Internet
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编译和/或重写在互联网上找到的概念证明利用代码
- en: Manually exploiting a remote vulnerability using publically available exploit
    code
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用公开可用的利用代码手动利用远程漏洞
- en: Transferring files to and from the victim machine
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将文件传输到受害者机器和从受害者机器传输文件
- en: Password cracking with John the Ripper
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用John the Ripper进行密码破解
- en: Brute forcing with THC Hydra
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用THC Hydra进行暴力破解
- en: Metasploit — learn it and love it
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit-学习并喜欢它
- en: Exploitation — Why bother?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 利用-为什么要费心？
- en: There is a good possibility that your potential clients will not understand
    the benefits of performing a full penetration test. Simply enumerating the known
    vulnerabilities in a network environment is not sufficient to truly understand
    the effectiveness of the corporation's combined security controls; be prepared.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你的潜在客户很可能不理解进行全面渗透测试的好处。仅仅枚举网络环境中已知的漏洞是不足以真正了解公司综合安全控制的有效性的；做好准备。
- en: 'Here is a quick listing of common benefits that full exploitation provides:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是完全利用提供的常见好处的快速清单：
- en: '**Takes the guess work and doubt out of the equation:** By providing proof
    that critical infrastructure devices were compromised, and thus confidential data
    could have been leaked, altered, or made unavailable, the problem becomes "real"
    and the management team will have the necessary details needed to take steps towards
    remediation.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消除猜测和怀疑：**通过提供关键基础设施设备被攻破的证据，因此机密数据可能已经泄露、被篡改或不可用，问题变得“真实”，管理团队将拥有采取纠正措施所需的必要细节。'
- en: '**Validates mitigating controls actually...mitigate:** Rather than blindly
    accepting that a theoretical mitigating control actually works a full exploitation
    penetration test enables management to prove the security measures are working
    as intended.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证缓解控制实际上...缓解：**与盲目接受理论缓解控制实际上有效不同，全面利用渗透测试使管理层能够证明安全措施正在按预期工作。'
- en: '**Finds easily overlooked holes in the security architecture:** Administrators
    of secured environments may falsely assume that the confidentiality, integrity,
    and availability of their confidential data is being protected by the various
    layers of security they have in place. Unfortunately, all of these security measures
    have the inherent risk of making things more complicated, and thus introducing
    new possibilities for attackers to take advantage of vulnerabilities. Full exploitation
    penetration testing validates that there are no unknown security flaws that have
    been introduced into the network.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发现安全架构中容易被忽视的漏洞：**受保护环境的管理员可能错误地认为，他们所拥有的各种安全层保护了机密数据的保密性、完整性和可用性。不幸的是，所有这些安全措施都存在使事情变得更加复杂的固有风险，从而为攻击者利用漏洞引入了新的可能性。完全利用渗透测试验证了网络中是否存在未知的安全漏洞。'
- en: There are many other reasons of why a quick health check of the network via
    a full penetration test can be useful to a business (besides the fact that a checkbox
    can be checked). When meeting with business owners or managers try to understand
    what is important to their bottom line and try to determine how your skills and
    services fit in.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 进行全面渗透测试对企业可能有许多其他有用之处（除了可以勾选复选框的事实）。在与企业所有者或经理会面时，试着了解对他们的底线来说什么是重要的，并尝试确定你的技能和服务如何适应其中。
- en: Target practice — Adding a Kioptrix virtual machine
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目标实践-添加Kioptrix虚拟机
- en: Penetration testing is a skill that takes practice to be perfect. To encourage
    the absorption of the material within this chapter we will be adding a intentionally
    vulnerable Linux distribution that has been made available by Steven McElrea (aka
    loneferret) and Richard Dinelle (aka haken29a) of the [www.kioptrix.com](http://www.kioptrix.com)
    team. Head over to the [http://www.kioptrix.com](http://www.kioptrix.com) website,
    choose your language of choice, and then click on the **Kioptrix VM Level 1**
    link to the right of the page.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 渗透测试是一项需要练习才能做到完美的技能。为了鼓励本章节中材料的吸收，我们将添加一个有意地易受攻击的Linux发行版，由Steven McElrea（又名loneferret）和Richard
    Dinelle（又名haken29a）的[www.kioptrix.com](http://www.kioptrix.com)团队提供。前往[http://www.kioptrix.com](http://www.kioptrix.com)网站，选择你喜欢的语言，然后点击页面右侧的**Kioptrix
    VM Level 1**链接。
- en: '![Target practice — Adding a Kioptrix virtual machine](img/7744_04_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![目标实践-添加Kioptrix虚拟机](img/7744_04_01.jpg)'
- en: 'Once the download has been completed and the files have been extracted to a
    folder of choice, we will need to create a new virtual machine in our Oracle VirtualBox
    penetration testing lab and direct it to use the virtual machine we have downloaded:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦下载完成并将文件提取到所选文件夹中，我们将需要在我们的Oracle VirtualBox渗透测试实验室中创建一个新的虚拟机，并指示它使用我们已下载的虚拟机：
- en: 'Name: Kioptrix VM Level 1'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：Kioptrix VM Level 1
- en: 'OS Type: Other Linux'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统类型：其他Linux
- en: 'Memory: 256'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存：256
- en: 'Startup Disk: Kioptrix Level 1.vmdk (Normal, 3.00 GB)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动磁盘：Kioptrix Level 1.vmdk（正常，3.00 GB）
- en: 'Be sure to select the **Use existing hard disk** option:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 确保选择**使用现有硬盘**选项：
- en: '![Target practice — Adding a Kioptrix virtual machine](img/7744_04_02.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![目标实践-添加Kioptrix虚拟机](img/7744_04_02.jpg)'
- en: 'Once the process has been successfully completed you should verify that your
    settings match the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进程成功完成，您应该验证您的设置是否与以下匹配：
- en: '![Target practice — Adding a Kioptrix virtual machine](img/7744_04_03.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![目标实践-添加Kioptrix虚拟机](img/7744_04_03.jpg)'
- en: Although we will be addressing some complex methods and techniques it is best
    to use a simple mechanism to truly understand how our exploits are working. By
    removing complexity we can focus on the lesson rather than time consuming troubleshooting.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们将讨论一些复杂的方法和技术，但最好使用简单的机制来真正理解我们的利用是如何工作的。通过消除复杂性，我们可以专注于教训而不是耗时的故障排除。
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'The Kioptrix Level 1 Virtual machine will grab an IP address from your DHCP
    server. If you have not already done so, you can enable the built-in DHCP server
    that comes preinstalled with your Oracle virtual box. You can configure this by
    using the command-line VBoxManage tool located in the Oracle virtual box. Here
    is an example of the `dhcpserver` add command:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Kioptrix Level 1虚拟机将从您的DHCP服务器获取IP地址。如果您尚未这样做，可以启用预先安装在Oracle虚拟盒中的内置DHCP服务器。您可以使用位于Oracle虚拟盒中的命令行VBoxManage工具进行配置。以下是`dhcpserver`
    add命令的示例：
- en: '`VBoxManage dhcpserver add netname Wlan1 ip 192.168.75.100 netmask 255.255.255.0
    lowerip 192.168.75.101 upperip 192.168.75.150 enable`'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`VBoxManage dhcpserver add netname Wlan1 ip 192.168.75.100 netmask 255.255.255.0
    lowerip 192.168.75.101 upperip 192.168.75.150 enable`'
- en: The previous command will cause virtual box to provide DHCP services for network
    adapters attached to the `Wlan1` network. Any system requesting an IP on the internal
    network `Wlan1` will receive an address between `192.168.75.101` and `192.168.75.150`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的命令将导致虚拟盒为连接到`Wlan1`网络的网络适配器提供DHCP服务。任何在内部网络`Wlan1`上请求IP的系统都将在`192.168.75.101`和`192.168.75.150`之间接收一个地址。
- en: '**NOTE:** On OSX the command will require double tack for each option used.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：**在OSX上，该命令将需要为每个使用的选项使用双划线。'
- en: 'For a more thorough description of the VboxManage tool visit: [http://www.virtualbox.org/manual/ch08.html](http://www.virtualbox.org/manual/ch08.html).'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 有关VboxManage工具的更详细描述，请访问：[http://www.virtualbox.org/manual/ch08.html](http://www.virtualbox.org/manual/ch08.html)。
- en: To follow along with many of the examples in this chapter you will need to have
    Kioptrix up and running. Start up VirtualBox, point a network adapter on the Kioptrix
    and Backtrack Tester 1 sessions to Wlan1 and start both up. It is time to review
    some basic exploitation methods.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本章中的许多示例，您需要启动并运行Kioptrix。启动VirtualBox，将Kioptrix和Backtrack Tester 1会话的网络适配器指向Wlan1，并启动两者。现在是时候回顾一些基本的利用方法了。
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Use the `dhclient <interface name>` command to pick up a DHCP address BackTrack
    machine. Example: `dhclient int0`.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dhclient <interface name>`命令来获取BackTrack机器的DHCP地址。例如：`dhclient int0`。
- en: Manual exploitation
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动利用
- en: 'At this point we should have two systems ready to go in our virtual environment:
    Our Kioptrix Level 1 machine which will be our target as well as our BackTrack
    machine which will be taking on the role of attacker. Before we can start with
    exploitation we need to determine our plan of attack.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们应该在我们的虚拟环境中准备好两个系统：我们的Kioptrix Level 1机器将是我们的目标，我们的BackTrack机器将扮演攻击者的角色。在我们开始利用之前，我们需要确定我们的攻击计划。
- en: '![Manual exploitation](img/7744_04_04.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![手动利用](img/7744_04_04.jpg)'
- en: Enumerating services
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 枚举服务
- en: 'We will begin by locating the machine on our network using `nmap`. Open up
    a new terminal session and type:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先使用`nmap`在我们的网络上找到机器。打开一个新的终端会话并键入：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We have instructed `nmap` to scan all TCP ports for IPs on 192.168.75.X using
    **fragmented** packets. Here is an excerpt of the results:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经指示`nmap`使用**分段**数据包扫描192.168.75.X上的所有TCP端口的IP。以下是结果的摘录：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Take a look at the highlighted section. You will notice that our target machine
    has several open TCP ports `22, 80, 111, 139, 443`, and `32768`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下突出显示的部分。您会注意到我们的目标机器有几个开放的TCP端口`22、80、111、139、443`和`32768`。
- en: Now that we know the system is up, and results indicate that several services
    are running, we have many choices. We could use `netcat` or another similar program
    to manually probe these ports to get more information and possibly grab some banners,
    or we could start with performing a more thorough scan on the target machine in
    question.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道系统已经启动，并且结果表明有多个服务正在运行，我们有很多选择。我们可以使用`netcat`或其他类似的程序手动探测这些端口，以获取更多信息并可能获取一些横幅，或者我们可以开始对目标机器进行更彻底的扫描。
- en: Quick scan with Unicornscan
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Unicornscan进行快速扫描
- en: 'Keep in mind that there are many available options to consider when choosing
    tools. Unicorn scan is a very fast scanner that can quickly scan the virtual lab
    for us. If your version of Backtrack does not have unicornscan installed use the
    following command syntax: `apt-get install Unicornscan` before attempting any
    of the following examples.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，在选择工具时有许多可用的选项可供考虑。Unicorn scan是一个非常快速的扫描程序，可以快速为我们扫描虚拟实验室。如果您的Backtrack版本没有安装unicornscan，请在尝试以下示例之前使用以下命令语法：`apt-get
    install Unicornscan`。
- en: Tip
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'In BackTrack 5 R1 you must copy the `GeoIP.dat` file to your `etc` directory
    to avoid an error. You can perform the following command to resolve the error:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在BackTrack 5 R1中，您必须将`GeoIP.dat`文件复制到您的`etc`目录以避免错误。您可以执行以下命令来解决错误：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following command will scan all TCP ports (`-mT` which is the default scan
    type) on the `192.168.75.0/24` segment using `500` packets per second (`-r500`).
    We have instructed the command to provide us information as it is received with
    the (`-I`) option:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将在`192.168.75.0/24`段上扫描所有TCP端口（`-mT`是默认扫描类型），使用每秒`500`个数据包（`-r500`）。我们已经指示命令在接收到信息时提供给我们信息（使用`-I`选项）：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This results in the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致以下结果：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can also scan for open UDP ports to complete the picture:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以扫描开放的UDP端口，以完整地了解情况：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This results in the following output on this particular virtual network (your
    scan results will vary based on your current lab setup):'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在特定虚拟网络上会得到以下输出（您的扫描结果将根据当前实验室设置而变化）：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Review the highlighted results from the previous output carefully. This information
    will be used to determine which attacks are performed against the targeted system.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细审查前面输出的突出显示结果。这些信息将用于确定针对目标系统执行哪些攻击。
- en: Full scan with Nmap
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Nmap进行完整扫描
- en: 'Now that we know which system we will be targeting, let''s find out what a
    targeted `nmap` scan will provide for us:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道将要针对哪个系统进行攻击，让我们看看有针对性的`nmap`扫描会为我们提供什么：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here we decided to go with a UDP and TCP scan of our open ports to determine
    their **STATE**. We use the `-sTUV` switch to notify nmap that we are looking
    for UDP and TCP and provide software versions; we then specify the range using
    the `-p` option followed by ports we would like to scan. `U:` designates that
    the ports are UDP. Here is the output:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们决定对我们的开放端口进行UDP和TCP扫描，以确定它们的**状态**。我们使用`-sTUV`开关通知nmap我们正在寻找UDP和TCP，并提供软件版本；然后使用`-p`选项指定要扫描的端口范围。`U:`表示端口是UDP。以下是输出：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now we have something that we can work with. We know which ports are open, and
    we have a good idea of which services are running.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了可以使用的信息。我们知道哪些端口是开放的，也大致知道哪些服务正在运行。
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Note the OS: Windows result indicates that this is a Windows machine, which
    it clearly is not. It is very important to review all of the data to make these
    determinations and not rely solely on one result.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '注意到OS: Windows的结果表明这是一台Windows机器，但实际上并不是。审查所有数据以做出这些判断非常重要，不要仅仅依赖于一个结果。'
- en: If you review the results you may note that there are many outdated services
    running on this machine. We will take advantage of this fact and use commonly
    known exploits to compromise the unit. We may want to manually validate these
    results. We will try to grab some banners now to see what we are dealing with.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您审查结果，可能会注意到此机器上运行着许多过时的服务。我们将利用这一事实，并使用常见的已知漏洞来破坏该单位。我们可能需要手动验证这些结果。现在我们尝试抓取一些横幅，看看我们正在处理什么。
- en: Banner grabbing with Netcat and Ncat
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Netcat和Ncat进行横幅抓取
- en: Netcat is a very powerful tool that can be used during the enumeration and exploitation
    stages, and can even be used to transfer files or to create backdoors. We also
    compare Netcat to Ncat which is one of the offerings provided by the Nmap team.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Netcat是一个非常强大的工具，可以在枚举和利用阶段使用，甚至可以用于文件传输或创建后门。我们还将Netcat与Ncat进行比较，后者是Nmap团队提供的工具之一。
- en: Banner grabbing with Netcat
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Netcat进行横幅抓取
- en: 'In order to connect to port `80` on `192.168.75.14` we can use the following
    command:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 为了连接到`192.168.75.14`上的端口`80`，我们可以使用以下命令：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This will connect us to the web server on the Kioptrix machine. We need to
    invoke a command to receive informational output. Type:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这将连接我们到Kioptrix机器上的Web服务器。我们需要调用一个命令来接收信息输出。输入：
- en: '[PRE10]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Press *Enter* two times and take a look at the output:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 按*Enter*键两次并查看输出：
- en: '[PRE11]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This should look familiar. We have already discussed the benefits of HTTP headers;
    the information above indicates that the machine is running Apache 1.3.20, RedHat
    Linux, using `mod_ssl` version 2.8.4 and `OpenSSL` version 0.9.6b.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这看起来很熟悉。我们已经讨论过HTTP标头的好处；上面的信息表明该机器正在运行Apache 1.3.20，RedHat Linux，使用`mod_ssl`版本2.8.4和`OpenSSL`版本0.9.6b。
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It is good practice to note down any actions taken during your testing. This
    will assist you in future conversations with clients and also allows you to easily
    replicate your testing at a later date.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试过程中记录任何操作是一个好习惯。这将帮助您在将来与客户的交谈中，并且还可以轻松地在以后复制您的测试。
- en: This process can be continued with the other ports as well.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程也可以继续进行其他端口。
- en: Banner grabbing with Ncat
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用Ncat进行横幅抓取
- en: 'Ncat can also be used to grab the `http` banner. This is how you do it:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Ncat也可以用于抓取`http`横幅。操作方法如下：
- en: '[PRE12]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Ncat uses the same syntax Netcat for this connection. Type the following and
    press *Enter* two times:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Ncat使用与Netcat相同的语法进行连接。输入以下内容并按*Enter*键两次：
- en: '[PRE13]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We are presented with the following output:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '[PRE14]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: A quick search for `mod_ssl/2.8.4` on `google.com` would indicate there are
    vulnerabilities that we could take advantage of.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在`google.com`上快速搜索`mod_ssl/2.8.4`会显示存在我们可以利用的漏洞。
- en: Banner grabbing with smbclient
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用smbclient进行横幅抓取
- en: 'One particularly interesting port that stands out is 139/TCP. With the `smbclient`
    tool we can grab the banner of this server. Let''s give it a try:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 一个特别有趣的端口是139/TCP。使用`smbclient`工具，我们可以抓取此服务器的横幅。让我们试一试：
- en: '[PRE15]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This command invokes `smbclient` and directs it to connect to `192.168.75.14`
    to then display the server information. The `-N` switch indicates that we do not
    have a root password for this connection. This results in the following output:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令调用`smbclient`并指示它连接到`192.168.75.14`，然后显示服务器信息。`-N`开关表示我们没有此连接的根密码。结果如下：
- en: '[PRE16]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note that the `Samba` version is at `2.2.1a`. We will use this information to
    search for any known exploits for this service.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 注意`Samba`版本是`2.2.1a`。我们将使用这些信息搜索此服务的任何已知漏洞。
- en: Searching Exploit-DB
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索Exploit-DB
- en: At `Exploit-DB.com` you will be able to find a wealth of information about known
    vulnerabilities and the proof of concept code that validates their effectiveness.
    Using the proof of concept code that is made available allows you to determine
    if your particular software is susceptible to these attacks. Proof of concept
    code also provides a mechanism to understand the underlying principles of individual
    vulnerabilities, thereby enabling you to ensure that your mitigating controls
    are functioning properly. The team at `Exploit-DB.com` spend many hours of their
    personal time ensuring that the submitted proof of concept code actually works
    as described.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Exploit-DB.com`上，您将能够找到关于已知漏洞和验证其有效性的概念代码的丰富信息。使用提供的概念代码可以帮助您确定您的特定软件是否容易受到这些攻击。概念代码还提供了一种理解个别漏洞的基本原理的机制，从而使您能够确保您的缓解控制是否正常运行。`Exploit-DB.com`团队花费了很多个人时间来确保提交的概念代码实际上按照描述的方式工作。
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are attempting to access this website from within your sandboxed virtual
    lab you will need to make sure you have a network adapter set up on your BackTrack
    box that allows for this. It is recommended that you do **not** connect your lab
    to the Internet in any fashion however. There are several secure methods of transferring
    files to you guest machine — try them out!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在尝试从受限的虚拟实验室内访问此网站，您需要确保您的BackTrack盒子上设置了允许这样做的网络适配器。然而，建议您**不要**以任何方式将您的实验室连接到互联网。有几种安全的方法可以将文件传输到您的虚拟机——试试看！
- en: Let's perform a search for vulnerabilities associated with Samba version 2.2.1a.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们搜索与Samba版本2.2.1a相关的漏洞。
- en: Go to [http://www.exploit-db.com](http://www.exploit-db.com).
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://www.exploit-db.com](http://www.exploit-db.com)。
- en: Click on `Search` in the top navigation bar.![Searching Exploit-DB](img/7744_04_05.jpg)
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部导航栏中的“搜索”。![搜索Exploit-DB](img/7744_04_05.jpg)
- en: Once on the search page type **Samba** in the **Description:** field.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入搜索页面，在**描述：**字段中键入**Samba**。
- en: Type **139** in the **Port:** field.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**端口：**字段中键入**139**。
- en: Click on the **SEARCH** button.![Searching Exploit-DB](img/7744_04_06.jpg)
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**搜索**按钮。![搜索Exploit-DB](img/7744_04_06.jpg)
- en: If there are any results, you will be presented with a list of vulnerabilities
    that matched your search. We need to look at these results and see if any look
    like they will suite our needs.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何结果，您将看到与您的搜索匹配的漏洞列表。我们需要查看这些结果，看看是否有任何看起来适合我们需求的。
- en: Exploit-DB at hand
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 手头的Exploit-DB
- en: One really awesome aspect of using BackTrack is that the team automatically
    includes a local copy of the `exploit-db.com` database as part of the distribution.
    You can search this list by going to `/pentest/exploits/exploitdb` and using the
    `./searchsploit` command followed by the search term.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 使用BackTrack的一个非常棒的方面是，团队自动包括`exploit-db.com`数据库的本地副本作为分发的一部分。您可以通过转到`/pentest/exploits/exploitdb`并使用`./searchsploit`命令后跟搜索词来搜索此列表。
- en: '[PRE17]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Which results in the following output:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生以下输出：
- en: '[PRE18]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: We will give `Samba 2.2.8 Remote Root Exploit - sambal.c` located at `/linux/remote/10.c`
    a try. This particular exploit has been coded using the C language and as such
    must be compiled prior to use.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试使用C语言编写的`Samba 2.2.8远程根漏洞利用 - sambal.c`，位于`/linux/remote/10.c`。这种特定的利用是使用C语言编写的，因此在使用之前必须进行编译。
- en: '[PRE19]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This command will copy the file to our directory of choice, `/root` in this
    case, making it easier to work with. There may be times that the file will immediately
    compile; in which case, you can simply run the following command and move on to
    the next stage.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将文件复制到我们选择的目录，本例中是`/root`，这样更容易处理。有时文件可能会立即编译；在这种情况下，您可以简单地运行以下命令并继续进行下一阶段。
- en: Note
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Be cautious!**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**要小心！**'
- en: It is critical that you understand the code you are compiling. At this point
    we are testing against a confined lab environment, but when it comes time to start
    performing these tasks in a setting that is connected to the outside world it
    is crucial that the code is both clean and from a trusted source. You should understand
    every stage of the exploit code before you try it against someone else's network.
    Many agree that the best thing is to create your own shellcode for manual exploitation
    so that you know exactly what will happen when you run it. Before throwing this
    type of code at a live production, unit test it out in your own contained virtual
    environment to fully understand the impact of the code you are running especially
    if your exploit of choice includes shellcode.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须理解正在编译的代码。在这一点上，我们正在针对受限的实验室环境进行测试，但是当到达在连接到外部世界的环境中执行这些任务的时候，代码既干净又来自可信任的来源是至关重要的。在尝试针对他人网络运行之前，您应该了解利用代码的每个阶段。许多人认为最好的方法是为手动利用创建自己的shellcode，这样您就会准确知道运行时会发生什么。在将这种类型的代码投入实时生产之前，在自己的受控虚拟环境中对其进行单元测试，以充分了解您正在运行的代码的影响，特别是如果您选择的利用包括shellcode的话。
- en: Compiling the code
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编译代码
- en: Here we will try to compile 10.c without any modification after reviewing the
    code. The steps performed here are similar for each type of exploit code that
    has been written using the C language.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将尝试在审查代码后不做任何修改地编译10.c。这里执行的步骤对使用C语言编写的每种类型的利用代码都是相似的。
- en: '[PRE20]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Review this code. Scroll through it and see if you can understand what will
    happen when this code is run.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 审查此代码。滚动查看它，看看您是否能理解当运行此代码时会发生什么。
- en: Tip
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are not familiar with VIM there are several sites that offer a great
    review of this complex yet powerful tool. Packt Publishing also has *Hacking VIM
    7.2* available for purchase if you want to learn much more about it in a concise,
    practical manner. For now, when you are in VIM you can use `:q` to exit back to
    the shell prompt.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不熟悉VIM，有几个网站提供了对这个复杂而强大工具的很好的评论。Packt Publishing还提供了购买《Hacking VIM 7.2》，如果您想以简洁、实用的方式更多地了解它。现在，当您在VIM中时，您可以使用`:q`退出返回到shell提示符。
- en: '![Compiling the code](img/7744_04_07.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![编译代码](img/7744_04_07.jpg)'
- en: Compiling the proof of concept code
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编译概念代码
- en: 'Once the code has been reviewed, try to compile it. Exit out of VIM using the
    `:q` command sequence and type the following at the command prompt:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 代码审查完毕后，尝试编译它。使用`:q`命令序列退出VIM，并在命令提示符下输入以下内容：
- en: '[PRE21]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: We are invoking the GCC compiler and feeding our 10.c source code file to be
    processed and outputed to the file `SambaVuln`. If everything works as planned
    you will not receive any feedback and the command prompt will be shown.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在调用GCC编译器，并将我们的10.c源代码文件输入并输出到文件`SambaVuln`。如果一切按计划进行，你将不会收到任何反馈，命令提示符将显示出来。
- en: Note
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Some believe that the difficulty of compiling a proof of concept exploit will
    reduce the number of script kiddies that are out there as they lack the skills
    to troubleshoot the code.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 有人认为编译概念验证利用的难度会减少脚本小子的数量，因为他们缺乏排除代码错误的技能。
- en: Some security researchers may even add intentional errors such as typos to discourage
    script kiddies from putting the Proof of Concept code to malicious use.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 一些安全研究人员甚至会故意添加错误，比如拼写错误，以阻止脚本小子将概念验证代码用于恶意用途。
- en: If you do have any problems with the compiling you will need to take a closer
    look at the code and work out the issues before it will compile properly.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在编译过程中遇到任何问题，你需要仔细检查代码并解决问题，直到它能够正确编译。
- en: Troubleshooting the code
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码故障排除
- en: The types of errors that you may come across include code that has improper
    commenting, extra characters, invalid formatting, or even invalid code intentionally
    entered into the code to make it more difficult for someone new to compile.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会遇到的错误类型包括代码的注释不当、额外字符、无效格式或者甚至是故意输入的无效代码，以使新手编译更加困难。
- en: Let's take a look at a common problem that seems to occur when using code directly
    from a repository.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下在使用代码库中的代码时似乎经常出现的一个常见问题。
- en: What are all of these ^M characters and why will they not go away?
  id: totrans-138
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 所有这些^M字符是什么，为什么它们不会消失？
- en: You may look at your code and realize that you have a few (or many!) unwanted
    characters such as ^M and regardless of your efforts they will just not go away.
    You can use VIM to solve this problem for you by opening your offending file in
    VIM and typing `:%s/`, pressing *Ctrl + V* then *Ctrl + M* followed by `//g` which
    results in the following.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会查看你的代码，意识到你有一些（或者很多！）不需要的字符，比如^M，不管你怎么努力，它们就是不会消失。你可以使用VIM来解决这个问题，方法是在VIM中打开你的有问题的文件，然后输入`:%s/`，按下*Ctrl
    + V*，然后*Ctrl + M*，接着输入`//g`，结果如下。
- en: '[PRE22]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then press *Enter*. This instructs VIM to remove all occurrences of **^M**
    in the entire file (%s). Here is an example of what we will be removing using
    this command:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 然后按*Enter*。这指示VIM删除整个文件中所有**^M**的出现（%s）。以下是我们将使用此命令删除的示例：
- en: '![What are all of these ^M characters and why will they not go away?](img/7744_04_08.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![所有这些^M字符是什么，为什么它们不会消失？](img/7744_04_08.jpg)'
- en: Broken strings — The reunion
  id: totrans-143
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 破碎的字符串-重聚
- en: At times the code will be formatted incorrectly. It is important to note that
    this will make it very difficult for GCC to process. Go through the code and ensure
    that everything is as it should be.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 有时代码的格式可能不正确。重要的是要注意，这将使GCC处理变得非常困难。仔细检查代码，确保一切都是应该的。
- en: '![Broken strings — The reunion](img/7744_04_09.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![破碎的字符串-重聚](img/7744_04_09.jpg)'
- en: Once the code has been reviewed and errors have been corrected try to compile
    it again until there are no further errors.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 代码审查并纠正错误后，尝试再次编译，直到没有更多错误为止。
- en: Running the exploit
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行利用
- en: 'Hopefully the previous step was rather painless; cleaning up code that others
    have made available can be a cumbersome process. If the exploit code compiled
    properly we can simply execute it to see what other inputs are expected:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 希望前面的步骤相当轻松；清理别人提供的代码可能是一个繁琐的过程。如果利用代码编译正常，我们可以简单地执行它，看看还需要什么其他输入：
- en: '[PRE23]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The output of this command is as follows:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令的输出如下：
- en: '[PRE24]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We know several key items about our target machine already, including that
    it is most likely running Linux, and that the IP address is 192.168.75.14\. Let''s
    use the scanning mode of the exploit to see if there is anything interesting we
    missed:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经对我们的目标机器有了几个关键信息，包括它很可能在运行Linux，并且IP地址是192.168.75.14。让我们使用利用的扫描模式，看看我们是否遗漏了什么有趣的东西：
- en: '[PRE25]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: We can see that our target machine is found by the proof of concept remote root
    exploit by `eSDee` at [www.netric.org](http://www.netric.org). Now we will move
    forward and finally exploit the machine.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到我们的目标机器是通过`eSDee`在[www.netric.org](http://www.netric.org)上的概念验证远程根漏洞利用发现的。现在我们将继续，最终利用这台机器。
- en: '[PRE27]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'We invoke the `SambaVuln10` file; let it know that the target system is Linux,
    and provide instruction to display verbose results. The output is as follows:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们调用`SambaVuln10`文件；让它知道目标系统是Linux，并提供指令来显示详细结果。输出如下：
- en: '[PRE28]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'If you are new to pentesting, this output may be a bit confusing. You have
    just managed to gain root access on the target machine and can at this point begin
    many of the post-exploitation steps that are usually required to get a good foothold
    in the network. You will notice that some commands do not work and some do. Try
    the following:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是新手渗透测试，这个输出可能有点令人困惑。你刚刚成功获得了目标机器的root权限，此时你可以开始许多通常需要的后期利用步骤，以在网络中获得一个良好的立足点。你会注意到一些命令不起作用，而一些命令起作用。尝试以下操作：
- en: '[PRE29]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Hmm… nothing happens. Maybe you did not actually get root? Let's try something
    different.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯...什么都没发生。也许你实际上没有获得root权限？让我们尝试一些不同的东西。
- en: '[PRE30]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: That's more like it! Now you should see a full directory listing of `/`.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这更像样了！现在你应该看到`/`的完整目录列表。
- en: '[PRE31]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'There are many other commands that you can use at this time, and there are
    tricks of the trade in post-exploitation that we will dedicate an entire chapter
    to. Before we move on we will perform one more check to see if there was anything
    interesting on this machine:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 此时有许多其他命令可以使用，还有一些后期利用的技巧，我们将专门为此撰写一整章。在我们继续之前，我们将进行一次检查，看看这台机器上是否有什么有趣的东西：
- en: Who are you on this machine anyhow?
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 您在这台机器上是谁？
- en: '[PRE32]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: What system am I connected to?
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我连接到哪个系统？
- en: '[PRE34]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Who has logged on to this system and when?
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 谁登录到这个系统以及何时？
- en: '[PRE37]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: As you probably already know, the fact that an attacker could get root on this
    machine by running this simple proof of concept code is a major problem. You should
    recommend that your client update all installed software to the latest version
    possible to avoid such simple compromises.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经知道，攻击者可以通过运行这个简单的概念验证代码在这台机器上获取root权限的事实是一个重大问题。您应该建议您的客户将所有已安装的软件更新到可能的最新版本，以避免这样简单的妥协。
- en: Getting files to and from victim machines
  id: totrans-176
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从受害机器获取文件
- en: Getting root on a remote machine can be interesting and is definitely a major
    step in the right direction (and depending on your scope and the purpose of the
    test, could be the only step necessary). If your task is not complete, then you
    will need to find methods of transferring data to and from your victim machines.
    There are several tools that will assist in this task; here are a few that may
    make your life easier in the long run.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在远程机器上获取root权限可能会很有趣，绝对是朝着正确方向迈出的重要一步（取决于您的范围和测试目的，这可能是唯一必要的步骤）。如果您的任务尚未完成，那么您需要找到传输数据到受害机器和从受害机器传输数据的方法。有几种工具可以帮助完成这项任务；以下是一些可能会让您的生活更轻松的工具。
- en: Installing and starting a TFTP server on BackTrack 5
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在BackTrack 5上安装和启动TFTP服务器
- en: TFTP can be very handy at times. Many systems will already have a TFTP client
    installed and using this protocol is quick and easy.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: TFTP有时可能非常方便。许多系统已经安装了TFTP客户端，并且使用这种协议快速而简单。
- en: '[PRE38]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Note
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Be sure that your BackTrack machine is Internet-enabled during the installation.
    To familiarize yourself with the **atftpd** server type `atftpd` at the command
    prompt without any additional input.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在安装过程中您的BackTrack机器已连接到互联网。要熟悉**atftpd**服务器，请在命令提示符中键入`atftpd`，而不需要任何其他输入。
- en: 'Starting TFTP as a standalone daemon pointing to `/tmp` on the standard port
    and bound to IP address `192.168.75.12` can be accomplished by typing:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通过键入以下内容，可以将TFTP作为独立守护程序启动，指向标准端口上的`/tmp`，并绑定到IP地址`192.168.75.12`：
- en: '[PRE39]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: You can check to see if the daemon started correctly by invoking netstat and
    grepping for 69.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过调用netstat并使用69进行grep来检查守护程序是否正确启动。
- en: '[PRE40]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'If everything started correctly you should see something similar to:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切都正确启动，您应该看到类似于以下内容：
- en: '[PRE41]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Installing and configuring pure-ftpd
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和配置pure-ftpd
- en: If your version of BackTrack does not have pure-ftpd installed it may be added
    by using the `apt-get install pure-ftpd` command. For full functionality of pure-ftpd
    you will need to add users and perform other minor configuration changes prior
    to use.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的BackTrack版本没有安装pure-ftpd，则可以使用`apt-get install pure-ftpd`命令进行安装。为了完全使用pure-ftpd的功能，您需要在使用之前添加用户并进行其他较小的配置更改。
- en: '[PRE42]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Adds `/etc/pure-ftpd/pureftpd.pdb` to the **PureDB** configuration file:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 将`/etc/pure-ftpd/pureftpd.pdb`添加到**PureDB**配置文件中：
- en: '[PRE43]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Creates a symbolic link to the `50pure` file:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个符号链接到`50pure`文件：
- en: '[PRE44]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Adds a group to the BackTrack guest machine:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 向BackTrack客户机添加一个组：
- en: '[PRE45]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Create folders that will be used:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 创建将要使用的文件夹：
- en: '[PRE46]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Modify the ownership:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 修改所有权：
- en: '[PRE47]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Adds the account to the system:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 将帐户添加到系统：
- en: '[PRE48]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Sets up a virtual account that can be used with FTP connections:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 设置一个可以与FTP连接一起使用的虚拟帐户：
- en: '[PRE50]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Reloads the database:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 重新加载数据库：
- en: '[PRE51]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Performs a quick lookup in the Pure-FTP database to let us know the user statistics.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在Pure-FTP数据库中进行快速查找，以了解用户统计信息。
- en: '[PRE52]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Starting pure-ftpd
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动pure-ftpd
- en: The following command will start `pure-ftpd:`
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令将启动`pure-ftpd：`
- en: '[PRE53]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'You will be presented with the following output:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到以下输出：
- en: '[PRE54]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'This server can be tested by connecting to localhost:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过连接到localhost来测试该服务器：
- en: '[PRE55]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The output should be similar to the following:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应该类似于以下内容：
- en: '[PRE56]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Note
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Production versus a controlled test lab environment:** Consider setting up
    a dedicated user account and appropriate security measures on your production
    BackTrack instance. Make certain to provide FTP accounts with the necessary permissions
    to write files otherwise; expect to receive errors when making these attempts
    from victim machines.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**生产环境与受控测试实验室环境之间的区别：**考虑在您的生产BackTrack实例上设置一个专用用户帐户和适当的安全措施。确保为FTP帐户提供必要的写入文件权限，否则，当从受害机器进行这些尝试时，预计会收到错误。'
- en: 'Passwords: Something you know…'
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 密码：您知道的东西…
- en: 'In this day and age one would assume that all systems use multifactor authentication.
    Unfortunately that is not the case. Even so-called "secured networks" still use
    protocols that are sending out clear text passwords, systems are using insecure
    encryption protocols, and more. One basic skill (basic as in chess: easy to learn,
    difficult to master) that every pentester should attempt to master is the art
    of password cracking. We will start off with a few simple examples to solidify
    the concept and then move on to some of the strategies used by the very best in
    the field.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今这个时代，人们可能会认为所有系统都使用多因素身份验证。不幸的是，情况并非如此。即使所谓的“安全网络”仍在使用发送明文密码的协议，系统仍在使用不安全的加密协议等。每个渗透测试人员都应该尝试掌握的一项基本技能（就像下棋一样：学起来容易，精通起来难）是密码破解的艺术。我们将从一些简单的例子开始，以巩固这个概念，然后转向该领域最优秀人员使用的一些策略。
- en: Cracking the hash
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 破解哈希
- en: Passwords are often reused by busy users and even administrators. Regardless
    of how important a system is on the network, once you gain access to the password
    hashes they should immediately be cracked and added to any dictionary file you
    have in place. This could potentially save a lot of time.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 繁忙的用户甚至管理员经常重复使用密码。无论网络上的系统有多重要，一旦您获得了密码哈希值，它们应立即被破解并添加到您已经放置的任何字典文件中。这可能会节省大量时间。
- en: First we need to pull some files from the victim machine. Start up your BackTrack
    Tester 1 and Kioptrix Level 1 guest machines, run the exploit you previously compiled
    and pull the `passwd` file down so that we can run Jack against it.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要从受害者机器中提取一些文件。启动您的BackTrack Tester 1和Kioptrix Level 1虚拟机，运行您之前编译的漏洞利用程序，并将`passwd`文件下载下来，以便我们可以对其运行Jack。
- en: Start all necessary virtual devices in your lab (BackTrack Tester 1, Kioptrix).
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实验室中启动所有必要的虚拟设备（BackTrack Tester 1，Kioptrix）。
- en: Run `./SambaVuln_10 -b 0 192.168.75.14`.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`./SambaVuln_10 -b 0 192.168.75.14`。
- en: You are now connected as root on `kioptrix.level1`.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在已连接为`kioptrix.level1`上的root用户。
- en: Open a new terminal session and start `pure-ftpd` on your BackTrack guest machine.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的BackTrack虚拟机上打开一个新的终端会话，并启动`pure-ftpd`。
- en: 'In the shell that is connected to the Kioptrix machine, use FTP to connect
    to your FTP server on the BackTrack machine:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在连接到Kioptrix机器的shell中，使用FTP连接到BackTrack机器上的FTP服务器：
- en: '[PRE57]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: Move to the /etc directory. Remember that you will not receive much feedback
    from the victim machine.
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 转到/ etc目录。请记住，您将无法从受害者机器上获得太多反馈。
- en: '[PRE58]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: You should see a directory listing of the Kioptrix /etc directory.
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该看到Kioptrix /etc目录的目录列表。
- en: '[PRE59]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Type in the user name we created to the FTP server on the BackTrack machine
    (ftplogin).
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在BackTrack机器上的FTP服务器上输入我们创建的用户名（ftplogin）。
- en: '[PRE60]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Enter the password for the FTP server account. Wait a moment or two and type:'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入FTP服务器帐户的密码。等待片刻，然后输入：
- en: '[PRE61]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Wait a few more moments and type:'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等待片刻，然后输入：
- en: '[PRE62]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: You should see a directory listing of the target FTP site.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该看到目标FTP站点的目录列表。
- en: '*CTRL + Q* will get you out of the Kioptrix machine.'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*CTRL + Q*将使您退出Kioptrix机器。'
- en: Note
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You could have also simply performed a `cat shadow` and copied the screen output
    with your mouse. Knowing how to pull files from your target machines is very important
    however, especially if the files are very large.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 您也可以简单地执行`cat shadow`并使用鼠标复制屏幕输出。然而，了解如何从目标机器中提取文件非常重要，特别是如果文件非常大的话。
- en: Now that we have the shadow file on our BackTrack machine let's see what we
    can do with it.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在BackTrack机器上有了shadow文件，让我们看看我们能做些什么。
- en: '[PRE63]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Once we browse to the proper directory we can launch john against our Kioptrix
    shadow file:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们浏览到正确的目录，我们就可以针对我们的Kioptrix shadow文件启动john：
- en: '[PRE64]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: John will start to attempt the brute force attempts of the MD5 passwords.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: John将开始尝试对MD5密码进行暴力破解。
- en: '[PRE65]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Note
  id: totrans-253
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you are lucky or extremely patient you will be rewarded with the unencrypted
    passwords for the target machine. Depending on the password complexity used combined
    with the speed of your system this step could take anywhere from minutes to weeks
    to complete. There are third-party services available that can be used to crack
    passwords but using these would have to be specifically permitted within your
    rules of engagement as you lose control of any data sent to a third party.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您幸运或极其耐心，您将获得目标机器的未加密密码。根据密码复杂性和系统速度的组合，此步骤可能需要从几分钟到几周不等的时间。有第三方服务可用于破解密码，但在使用这些服务时必须在您的规则中明确允许，因为您将失去对发送到第三方的任何数据的控制。
- en: Brute forcing passwords
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 暴力破解密码
- en: Brute forcing is still a very viable method of gaining access to a machine.
    The problem with passwords is that people have to be able to recall them at will.
    Trying to remember 233!sdsfF_DaswsaWlsc!!&$#_ would be difficult for most and
    thus we end up with a short list of commonly used passwords such as ILoveKellie1!.
    The problem with this is that there are several methods of narrowing down the
    list of possible passwords, and that computers currently have as many as 8 processor
    cores for a home desktop.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解仍然是一种非常可行的获得对机器访问权限的方法。密码的问题在于人们必须能够随时记住它们。试图记住233！sdsfF_DaswsaWlsc!!&$#_对大多数人来说可能会很困难，因此我们最终会得到一个常用密码的短列表，如ILoveKellie1！。这个问题在于有几种方法可以缩小可能密码列表的范围，并且当前的计算机在家用台式机上拥有多达8个处理器核心。
- en: Tip
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Password cracking can be accomplished by using multiple video cards and their
    GPUs. This is the preferred method if the resources are available.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 密码破解可以通过使用多个视频卡和它们的GPU来完成。如果资源可用，这是首选方法。
- en: Although the password ILoveKellie1! would meet numerous enforced password policies,
    you could easily make a list of passwords that appends certain commonly used characters
    such as !, 1, 2, and so on and by reading the beginning of this book you will
    be able to determine that my spouse's name is Kellie. If you are clever about
    how you are creating your word lists, placing commonly used terms such as ILove,
    Iam, and so on would make the rest trivial. Modern password brute forcing techniques
    would tear this password up in mere moments. This makes cracking passwords faster
    and easier than ever. Here we will take a look at a few methods of brute forcing
    these passwords.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管密码ILoveKellie1！符合许多强制密码策略，但您可以轻松地制作一个密码列表，附加某些常用字符，如！，1，2等等，通过阅读本书的开头，您将能够确定我的配偶的名字是Kellie。如果您在创建您的单词列表时聪明地使用常用术语，如ILove，Iam等，那么其他部分将变得微不足道。现代密码暴力破解技术将在短短片刻内破解此密码。这使得破解密码变得比以往更快更容易。在这里，我们将看一些暴力破解这些密码的方法。
- en: Note
  id: totrans-260
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please be aware that many of the examples used in this book are simplified to
    make the concepts easier to learn. Once you understand the concepts, you will
    be able to use the very same techniques when performing on real life networks
    as well.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，本书中使用的许多示例都经过简化，以使概念更容易学习。一旦您理解了这些概念，您将能够在实际网络上执行相同的技术。
- en: THC Hydra
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: THC Hydra
- en: THC Hydra makes the task of checking for weak passwords fun. It is released
    under the GPLv3 and is continually updated by the THC team. Updated information
    about this product can be found by browsing [http://www.thc.org/thc-hydra/](http://www.thc.org/thc-hydra/).
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: THC Hydra使检查弱密码的任务变得有趣。它是根据GPLv3发布的，并由THC团队不断更新。有关该产品的更新信息可以通过浏览[http://www.thc.org/thc-hydra/](http://www.thc.org/thc-hydra/)找到。
- en: Note
  id: totrans-264
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: THC Hydra currently supports more than 40 services including FTP, MySQL, POP3,
    SSH2, VNC, and many more.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: THC Hydra目前支持40多种服务，包括FTP、MySQL、POP3、SSH2、VNC等等。
- en: 'We will start our virtual lab and get started with using THC Hydra which is
    included in BackTrack 5\. Let''s connect to the Kioptrix machine and create an
    account so that we can see how Hydra does at finding the password. On the BackTrack
    machine load up our previously used Samba exploit:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将启动我们的虚拟实验室，并开始使用包含在BackTrack 5中的THC Hydra。让我们连接到Kioptrix机器并创建一个帐户，以便我们可以看到Hydra在查找密码时的表现。在BackTrack机器上加载我们之前使用的Samba漏洞利用程序：
- en: '[PRE66]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Once connected type the following to change the password for the `harold` account:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 连接后，输入以下内容以更改`harold`帐户的密码：
- en: '[PRE67]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'As with many tools, the quickest method of determining the syntax is to invoke
    the program without any additional input:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多工具一样，确定语法的最快方法是在没有任何额外输入的情况下调用程序。
- en: '[PRE68]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'The command syntax will be displayed in the output:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 命令语法将显示在输出中：
- en: '[PRE69]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Hydra can be used from the command prompt, but it also has a nice GUI that
    can be invoked using:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra可以从命令提示符中使用，但它也有一个可以通过以下方式调用的漂亮的GUI：
- en: '[PRE70]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: 'This command will launch the GUI and we are presented with the following:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将启动GUI，并呈现给我们以下内容：
- en: '![THC Hydra](img/7744_04_10.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![THC Hydra](img/7744_04_10.jpg)'
- en: Note
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We will be using the password files included with BackTrack, but ideally you
    will be downloading or creating your own password files, especially if you are
    able to pull company-specific information about your clients website or metadata.
    I highly recommend you to check out cewl (written by DigiNinja and preinstalled
    on Backtrack) at [http://www.digininja.org/projects/cewl.php](http://www.digininja.org/projects/cewl.php).
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用BackTrack中包含的密码文件，但理想情况下，你将下载或创建自己的密码文件，特别是如果你能够获取关于客户网站或元数据的公司特定信息。我强烈建议你查看cewl（由DigiNinja编写，并预装在Backtrack上）[http://www.digininja.org/projects/cewl.php](http://www.digininja.org/projects/cewl.php)。
- en: 'In order to perform a simple brute forcing attack against our Kioptrix machine
    we must choose the following settings:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 为了对我们的Kioptrix机器执行简单的暴力破解攻击，我们必须选择以下设置：
- en: Target Tab
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标选项卡
- en: 'Single Target: 192.168.75.14 (the Kioptrix virtual machine)'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个目标：192.168.75.14（Kioptrix虚拟机）
- en: 'Port: 22'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口：22
- en: 'Protocol: SSH'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议：SSH
- en: 'Check the following options: Be Verbose, Show Attempts'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查以下选项：详细说明，显示尝试
- en: Passwords Tab
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码选项卡
- en: 'Username: Harold'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：Harold
- en: 'Password: lotsOfPasswords'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码：lotsOfPasswords
- en: 'Check: Try login as password, Try empty password'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查：尝试使用密码登录，尝试空密码
- en: Everything else as default
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他一切默认
- en: 'Go to the **Start** tab and on the bottom of the screen click on the **Start**
    button. You will be presented with the following:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 转到**开始**选项卡，然后在屏幕底部点击**开始**按钮。你将看到以下内容：
- en: '![THC Hydra](img/7744_04_11.jpg)'
  id: totrans-292
  prefs: []
  type: TYPE_IMG
  zh: '![THC Hydra](img/7744_04_11.jpg)'
- en: Well, we managed to guess the password for an account that we already know the
    password for… Not very exciting, but it does let you know there are easy methods
    of validating if an account login is accurate or not without having to log into
    whichever client is necessary (checking SNMP for instance, or TFTP).
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我们成功猜到了一个我们已经知道密码的帐户的密码...并不是很令人兴奋，但它确实让你知道，有简单的方法可以验证帐户登录是否准确，而无需登录到必要的客户端（例如检查SNMP或TFTP）。
- en: 'Let''s add our password to a dictionary that is included with BackTrack 5\.
    Open up a terminal session and type:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把我们的密码添加到BackTrack 5中包含的字典中。打开一个终端会话，然后输入：
- en: '[PRE71]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: This takes you to the wordlists directory.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带你到单词列表目录。
- en: Tip
  id: totrans-297
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There is a file named `darkc0de.lst` in the wordlists directory that will get
    you started. Take a look at this file to get an idea of what a typical wordlist
    will consist of.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 在单词列表目录中有一个名为`darkc0de.lst`的文件，可以帮助你入门。看看这个文件，了解一个典型的单词列表会包含什么。
- en: 'This is a very convenient place to store all of your personal wordlists. Many
    testers will have several favorites, and also create wordlists on the fly as needed.
    Let''s add our password to this listing. Edit `darkc0de.lst` to look something
    like this:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常方便的地方，可以存储所有个人的单词列表。许多测试人员会有几个喜欢的单词列表，并根据需要即时创建单词列表。让我们把我们的密码添加到这个列表中。编辑`darkc0de.lst`，使其看起来像这样：
- en: '[PRE72]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: We have added the test to the header of this password file so that it will be
    found faster.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经将测试添加到了这个密码文件的头部，以便更快地找到它。
- en: 'Open up Xhydra again and select the following options:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 再次打开Xhydra，并选择以下选项：
- en: Target Tab
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标选项卡
- en: 'Single Target: 192.168.75.14 (the Kioptrix virtual machine)'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个目标：192.168.75.14（Kioptrix虚拟机）
- en: 'Port: 22'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口：22
- en: 'Protocol: SSH'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议：SSH
- en: 'Check the following options: Be Verbose, Show Attempts'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查以下选项：详细说明，显示尝试
- en: Passwords Tab
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码选项卡
- en: 'Username: Harold'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：Harold
- en: 'Password List: Selected, Click the entry field to select `/pentest/passwords/wordlists/darkc0de.lst`'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码列表：已选择，点击条目字段选择`/pentest/passwords/wordlists/darkc0de.lst`
- en: 'Check: Try login as password, Try empty password'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查：尝试使用密码登录，尝试空密码
- en: Tuning
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调整
- en: 'Number of Tasks: 1'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务数量：1
- en: 'Exit after first found pair: Checked'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在找到第一对后退出：已选中
- en: Everything else as default
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他一切默认
- en: 'Go to the start tab again and click start in the bottom-right of the window:'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 再次转到开始选项卡，然后在窗口右下角点击开始：
- en: '![THC Hydra](img/7744_04_12.jpg)'
  id: totrans-317
  prefs: []
  type: TYPE_IMG
  zh: '![THC Hydra](img/7744_04_12.jpg)'
- en: Hydra THC is a definite benefit to anyone's toolkit and its use should be practiced
    and perfected to be truly successful in penetrating complex networks where passwords
    may be the weakest link in the entire security architecture.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: Hydra THC对任何人的工具箱都是一个明显的好处，它的使用应该得到练习和完善，才能真正成功地渗透复杂的网络，其中密码可能是整个安全架构中最薄弱的环节。
- en: Metasploit — learn it and love it
  id: totrans-319
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit-学习并喜欢它
- en: The Metasploit™ framework is incredible. It offers penetration testers a wide
    variety of tools in a friendly, easy to use manner. It was originally created
    by HD Moore and has recently been purchased by Rapid7, the creators of the Nexpose
    vulnerability scanner toolkit. Everything that we have done manually can be done
    with Metasploit. If you are new to penetration testing, I highly recommend that
    you go through the free training provided at [http://www.offensive-security.com/metasploit-unleashed/Metasploit_Unleashed_Information_Security_Training](http://www.offensive-security.com/metasploit-unleashed/Metasploit_Unleashed_Information_Security_Training)
    to get a really good grasp of how powerful this framework really is. This site
    is constantly updated and should be visited frequently to find information about
    the latest additions to the MSF framework. In this book we restrict our scope
    to some of the more interesting features of the MSF framework to highlight the
    efficiency it adds to the work a penetration tester must do.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit™框架是令人难以置信的。它以友好、易于使用的方式为渗透测试人员提供了各种工具。它最初是由HD Moore创建的，最近被Rapid7收购，Rapid7是Nexpose漏洞扫描工具包的创建者。我们手动完成的所有工作都可以用Metasploit完成。如果您是渗透测试的新手，我强烈建议您通过[http://www.offensive-security.com/metasploit-unleashed/Metasploit_Unleashed_Information_Security_Training](http://www.offensive-security.com/metasploit-unleashed/Metasploit_Unleashed_Information_Security_Training)提供的免费培训，真正了解这个框架的强大之处。该网站不断更新，应该经常访问，以获取有关MSF框架最新添加的信息。在本书中，我们将范围限制在MSF框架的一些更有趣的功能上，以突出它为渗透测试人员必须完成的工作增加的效率。
- en: Updating the Metasploit framework
  id: totrans-321
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新Metasploit框架
- en: As always, it is very important that applications are updated frequently. Metasploit
    is no different in this regard. You should update your installation of the Metasploit
    framework at least once per week. The command is very easy to remember. You can
    run the command from a BackTrack shell regardless of your current working directory.
    Be sure that your BackTrack lab machine is connected to the Internet before you
    update.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，经常更新应用程序非常重要。在这方面，Metasploit也不例外。您应该至少每周更新一次Metasploit框架的安装。这个命令非常容易记住。您可以在BackTrack
    shell中运行该命令，而不管当前的工作目录是什么。在更新之前，请确保您的BackTrack实验室机器已连接到互联网。
- en: '[PRE73]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'Once the update has completed you should be presented with an update notice
    and then the command prompt:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 更新完成后，您应该会收到更新通知，然后是命令提示符：
- en: '[PRE74]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: 'You will also see an informative section on the Metasploit title screen that
    reminds you of your last update:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将在Metasploit标题屏幕上看到一个信息丰富的部分，提醒您上次更新的内容：
- en: '[PRE75]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: 'This command will yield output similar to the following:'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令将产生类似以下的输出：
- en: '[PRE76]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: Note that the date of the last update and the `svn` number is presented as part
    of the output.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，上次更新的日期和`svn`号码会作为输出的一部分呈现。
- en: Note
  id: totrans-331
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This may be a good time to update your BackTrack guest machine as well. You
    should update BackTrack before updating the Metasploit framework.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可能是更新您的BackTrack虚拟机的好时机。在更新Metasploit框架之前，您应该先更新BackTrack。
- en: Databases and Metasploit
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据库和Metasploit
- en: One of my favorite Metasploit features would be the ability to have all of your
    results dumped into a database. Metasploit uses PostgreSQL by default.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的Metasploit功能之一是能够将所有结果转储到数据库中。Metasploit默认使用PostgreSQL。
- en: Note
  id: totrans-335
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Installing PostgreSQL may not be required. Attempt to connect to the database
    within the MSF context, and if you experience errors follow the complete installation
    procedure and try again.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 安装PostgreSQL可能并不是必需的。尝试在MSF上下文中连接到数据库，如果遇到错误，请按照完整的安装过程再次尝试。
- en: Installing PostgreSQL on BackTrack 5
  id: totrans-337
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在BackTrack 5上安装PostgreSQL
- en: 'We will need to reconnect our BackTrack 5 guest machine back to the Internet
    again in order to download and install PostgreSQL. Once you have verified your
    connectivity type the following:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要重新连接我们的BackTrack 5虚拟机，以便再次下载和安装PostgreSQL。一旦您已经验证了您的连接性，请键入以下内容：
- en: '[PRE77]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'Read the instructions and press *Y* to continue. The installation should finish
    with a statement similar to the following:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读说明并按*Y*继续。安装应该以类似以下的声明结束：
- en: '[PRE78]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: 'Now we need to make some modifications to the installation:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要对安装进行一些修改：
- en: '[PRE79]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: 'With postgres installed we are presented with the following prompt to let us
    know we are working within the database console:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了postgres后，我们会看到以下提示，让我们知道我们正在数据库控制台中工作：
- en: '[PRE81]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: 'We will now change the password for the default database user:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将更改默认数据库用户的密码：
- en: '[PRE82]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: Here we changed the password for the postgre role. We will use `\q` to exit
    the postgres console.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们更改了postgre角色的密码。我们将使用`\q`退出postgres控制台。
- en: '[PRE84]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: Verifying database connectivity
  id: totrans-352
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 验证数据库连接
- en: 'Load up the Metasploit console:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 加载Metasploit控制台：
- en: '[PRE85]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: 'At the `msf >` prompt type:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 在`msf >`提示符下键入：
- en: '[PRE86]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: 'Now we know that we are connected to PostgreSQL database named pentester. We
    can verify connectivity by typing:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道我们连接到名为pentester的PostgreSQL数据库。我们可以通过输入以下内容来验证连接：
- en: '[PRE88]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: The previous command will provide us with a listing of hosts. As you can see
    there is nothing interesting just yet.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个命令将为我们提供主机列表。正如你所看到的，目前还没有什么有趣的东西。
- en: Performing an Nmap scan from within Metasploit
  id: totrans-362
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Metasploit中执行Nmap扫描
- en: We need something exciting to display when running the hosts command so let's
    run a quick nmap scan to collect some data. With `msfconsole` open and the database
    connected, we can now run our nmap scans directly from within Metasploit.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行主机命令时，我们需要一些令人兴奋的内容，所以让我们运行一个快速的nmap扫描来收集一些数据。打开`msfconsole`并连接到数据库后，我们现在可以直接从Metasploit运行我们的nmap扫描。
- en: '[PRE90]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: 'The results look very familiar with the added bonus of having been added to
    the database for future reference:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 结果看起来非常熟悉，而且还有一个额外的好处，就是已经被添加到数据库以供将来参考：
- en: '[PRE91]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: 'If we run a quick `hosts` command we will see that the system has been added
    to our PostgreSQL pentester database:'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行快速的`hosts`命令，我们会看到系统已经添加到我们的PostgreSQL渗透测试数据库中：
- en: '[PRE92]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: 'Now that the data is in the database there are all sorts of handy time saving
    tricks we can perform. For instance, if we would like to see which systems have
    port 443 open we can enter:'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 现在数据已经在数据库中，我们可以执行各种方便的节省时间的技巧。例如，如果我们想要查看哪些系统打开了443端口，我们可以输入：
- en: '[PRE94]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: 'This provides us with a nicely formatted output listing all systems with 443:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们提供了一个格式良好的输出列表，列出了所有打开443端口的系统：
- en: '[PRE95]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: Using auxiliary modules
  id: totrans-374
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用辅助模块
- en: '[PRE96]'
  id: totrans-375
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: The use command instructs Metasploit to use the specified module.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 使用命令指示Metasploit使用指定的模块。
- en: '[PRE97]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: 'Every module has a specific set of options that can be displayed via the `show
    options` command. This particular module has the following options that can be
    changed:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 每个模块都有一组特定的选项，可以通过`show options`命令显示。这个特定的模块有以下可以更改的选项：
- en: '[PRE98]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: 'We need to change a few of these to suite our needs:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要更改其中一些以适应我们的需求：
- en: '[PRE99]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '`RHOSTS` is our target range. We set it to `192.168.75.14:`'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '`RHOSTS`是我们的目标范围。我们将其设置为`192.168.75.14:`'
- en: '[PRE100]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: To save time we restrict the scan to only the first 1024 ports using the `set
    PORTS` setting.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 为了节省时间，我们将扫描限制在前1024个端口，使用`set PORTS`设置。
- en: '[PRE101]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: 'The `run` command will initiate the scan using our predetermined settings.
    In a few moments we will receive feedback from the console:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '`run`命令将使用我们预定的设置启动扫描。几分钟后，我们将从控制台收到反馈：'
- en: '[PRE102]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: The important item of note here is that all modules operate in the same manner.
    Once you understand the method of searching for exploits you will be able to reuse
    the same steps repeatedly.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的重要事项是，所有模块都以相同的方式运行。一旦您了解了搜索漏洞的方法，您将能够重复使用相同的步骤。
- en: Using Metasploit to exploit Kioptrix
  id: totrans-389
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Metasploit来利用Kioptrix
- en: The time has come to take a look at using Metasploit to perform an attack against
    our Kioptrix machine. As we understand how to compile and use proof of concept
    code that is made available on the Internet we will be able to quickly appreciate
    the time savings that Metasploit provides. We will begin by connecting to our
    database.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候看看如何使用Metasploit对我们的Kioptrix机器进行攻击了。由于我们知道如何编译和使用互联网上提供的概念验证代码，我们将能够快速体会到Metasploit提供的时间节省。我们将首先连接到我们的数据库。
- en: '[PRE103]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: 'We should already have some information in our database. This can be verified:'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该已经在我们的数据库中有一些信息。这可以得到验证：
- en: '[PRE104]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: 'This command provides us with the following output:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令给我们提供了以下输出：
- en: '[PRE105]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: When reviewing these ports we find our previously exploited samba port 139 is
    still open. Now it is time to see what we can do without having to reformat exploit
    code.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查这些端口时，我们发现我们之前利用的samba端口139仍然是开放的。现在是时候看看在不必重新格式化利用代码的情况下我们能做些什么了。
- en: '[PRE106]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: 'This results in:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是：
- en: '![Using Metasploit to exploit Kioptrix](img/7744_04_13.jpg)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![使用Metasploit来利用Kioptrix](img/7744_04_13.jpg)'
- en: 'Name: The name column will be used in correlation to the USE command once we
    decide which exploit we will try.'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称：一旦我们决定尝试哪种漏洞利用，名称列将与USE命令相关联。
- en: 'Disclosure: Disclosure date is the actual date that the exploit was made known
    to the community or the vendor, not when the proof of concept code was released.'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 披露：披露日期是漏洞被公开或供应商知晓的实际日期，而不是概念验证代码发布的日期。
- en: 'Rank: Rank is very important since it indicates just how reliable the exploit
    is known to be.'
  id: totrans-402
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等级：等级非常重要，因为它表明漏洞利用的可靠性有多高。
- en: Description is well the description of the type of exploit this is.
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述也是这种漏洞利用的描述。
- en: 'We will be using the `trans2open` exploit as it is similar to what we performed
    manually earlier in the chapter. In `msfconsole` type:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`trans2open`漏洞利用，因为它类似于我们在本章前手动执行的操作。在`msfconsole`中输入：
- en: '[PRE107]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: 'When more information regarding an exploit is needed we can use the `info`
    command to receive the following output:'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要更多关于漏洞利用的信息时，我们可以使用`info`命令来接收以下输出：
- en: '[PRE108]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: This information is available for all of the exploits in Metasploit. When time
    permits, taking the time to familiarize yourself with some of the most commonly
    used exploits would be very beneficial in the long term as you will be able to
    avoid trying exploits that do not work on production systems.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit中的所有漏洞利用都提供这些信息。如果时间允许，花时间熟悉一些最常用的漏洞利用将对长远非常有益，因为您将能够避免尝试在生产系统上不起作用的漏洞利用。
- en: 'Now we need to set some of the options that are available:'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要设置一些可用的选项：
- en: '[PRE110]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '`RHOST` is the remote hosts and needs to be set to our Kioptrix machines IP
    address.'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '`RHOST`是远程主机，需要设置为我们的Kioptrix机器的IP地址。'
- en: '[PRE111]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '![Using Metasploit to exploit Kioptrix](img/7744_04_14.jpg)'
  id: totrans-414
  prefs: []
  type: TYPE_IMG
  zh: '![使用Metasploit来利用Kioptrix](img/7744_04_14.jpg)'
- en: The `show payloads` command provides a listing of all of the compatible payloads
    that can be used with this particular exploit. We will make use of `reverse_tcp`
    for this example. This payload type is small and usually effective although it
    does not have the full range of options available that meterpreter does.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '`show payloads`命令提供了可以与特定漏洞利用一起使用的所有兼容负载的列表。我们将在本例中使用`reverse_tcp`。这种负载类型通常很小且有效，尽管它没有meterpreter提供的全部选项。'
- en: '[PRE112]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: We will also have to set the `LHOST` and the `LPORT`.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '我们还需要设置`LHOST`和`LPORT`。 '
- en: '[PRE113]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: This is our localhost that the listener will be set up on.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的本地主机，监听器将在上面设置。
- en: '[PRE114]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: This is the port that we would like to listen on.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们想要监听的端口。
- en: 'Now that is out of the way and we can move on to exploitation:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这件事已经解决，我们可以继续进行利用：
- en: '[PRE115]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: If all goes as planned, you will receive the following confirmation and an open
    session that is very similar to the connection our manually compiled exploit provided
    to us earlier in the chapter.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您将收到以下确认和一个类似于我们在本章前手动编译的漏洞利用为我们提供的连接。
- en: '[PRE116]'
  id: totrans-425
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: 'To ensure that we have root, we will perform the following commands:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保我们有root权限，我们将执行以下命令：
- en: '[PRE118]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: 'We are looking at the messages for the root account and can see that Loneferret
    has left us a nice little message; type 1 to read it:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在查看root帐户的消息，并且可以看到Loneferret给我们留了一条不错的消息；输入1来阅读它：
- en: '[PRE120]'
  id: totrans-431
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: This last exercise should have made it clear that compared to manually finding
    and compiling code using Metasploit is a breeze. The best part about it is that
    you will be able to add your own modules and compiled code to the framework as
    well.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个练习应该已经清楚地表明，与手动查找和编译代码相比，使用Metasploit是轻而易举的。最好的部分是，您将能够将自己的模块和编译代码添加到框架中。
- en: Summary
  id: totrans-434
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter provided a solid introduction to exploitation. By taking advantage
    of the Kioptrix which is an intentionally vulnerable Linux distribution we were
    able to get hands-on practice in locating exploits on Exploit-DB and on BackTrack,
    and then correcting any errors we found in that code. We looked at the steps necessary
    to truly understand the penetration testing exploitation phase such as banner
    grabbing and transferring files to and from an exploited machine.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 本章对利用进行了扎实的介绍。通过利用Kioptrix，这是一个有意设置的易受攻击的Linux发行版，我们能够实际练习在Exploit-DB和BackTrack上定位漏洞，并纠正我们发现的任何错误。我们研究了真正理解渗透测试利用阶段所需的步骤，如横幅抓取和在受攻击的机器上传输文件。
- en: We looked at password cracking and brute forcing with both John the Ripper and
    THC Hydra, both of which will need to be understood in depth to prepare for later
    chapters. Password cracking is not going to go away anytime soon and expertise
    of this subject can be very beneficial in the long term.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 我们研究了使用John the Ripper和THC Hydra进行密码破解和暴力破解，这两者都需要深入理解，以便为后续章节做准备。密码破解在短期内不会消失，对这个主题的专业知识在长期内可能非常有益。
- en: The chapter also covered the steps necessary to transfer files to and from an
    exploited machine; this included the set up and configuration of the FTP daemon
    that comes preinstalled with BackTrack 5.
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 本章还涵盖了将文件传输到受攻击的机器以及从中传输文件所需的步骤；这包括设置和配置与BackTrack 5预装的FTP守护程序。
- en: Finally, we wrapped up the chapter with a look at Metasploit and how it can
    be used to simplify the task of penetration testing in many different ways. By
    performing hands-on exercises it quickly became clear that although manually finding
    and compiling exploit code can be beneficial, using Metasploit can significantly
    increase your overall productivity.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们总结了Metasploit以及它如何简化渗透测试任务的方式。通过实际操作，很快就清楚地看到，尽管手动查找和编译利用代码可能有益，但使用Metasploit可以显著提高整体生产力。
- en: In the next chapter, we will address techniques necessary to test the security
    of web applications and their underlying infrastructure. This includes detection
    of load balancers and web application firewalls. Also discussed is the use of
    tools such as w3af and Webscarab. In addition, our virtual lab is extended greatly
    with the addition of several machines including pfSense and Kioptrix Level 3.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论测试Web应用程序及其基础架构安全所需的技术。这包括负载均衡器和Web应用程序防火墙的检测。还讨论了诸如w3af和Webscarab之类的工具的使用。此外，我们的虚拟实验室得到了极大的扩展，包括了pfSense和Kioptrix
    Level 3等多台机器。
