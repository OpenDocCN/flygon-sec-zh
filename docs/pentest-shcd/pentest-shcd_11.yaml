- en: Real-World Scenarios – Part 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 真实场景 - 第3部分
- en: Here we go with our final practical part of this book. It takes a different
    approach, focusing on the **structured exception handling** (**SEH**) based buffer
    overflow, and is also based on the HTTP header, but using the GET request.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们书中最后的实际部分。它采用了不同的方法，专注于基于**结构化异常处理**（**SEH**）的缓冲区溢出，也基于HTTP头部，但使用了GET请求。
- en: Easy File Sharing Web Server
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Easy File Sharing Web Server
- en: Our target here will be the Easy File Sharing Web Server 7.2\. You can find
    the exploit at [https://www.exploit-db.com/exploits/39008/](https://www.exploit-db.com/exploits/39008/),
    and you can download the vulnerable application from [https://www.exploit-db.com/apps/60f3ff1f3cd34dec80fba130ea481f31-efssetup.exe](https://www.exploit-db.com/apps/60f3ff1f3cd34dec80fba130ea481f31-efssetup.exe).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是Easy File Sharing Web Server 7.2。您可以在[https://www.exploit-db.com/exploits/39008/](https://www.exploit-db.com/exploits/39008/)找到利用程序，并可以从[https://www.exploit-db.com/apps/60f3ff1f3cd34dec80fba130ea481f31-efssetup.exe](https://www.exploit-db.com/apps/60f3ff1f3cd34dec80fba130ea481f31-efssetup.exe)下载易受攻击的应用程序。
- en: Download and install the application; if you did this in the previous lab, then
    we have to turn off the web server in Sync Breeze Enterprise because we need port
    `80`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 下载并安装应用程序；如果您在上一个实验中已经这样做了，那么我们需要关闭 Sync Breeze Enterprise 中的Web服务器，因为我们需要端口`80`。
- en: 'Open Sync Breeze Enterprise and navigate to Tools | Advanced Options... | Server,
    and make sure that Enable Web Server on Port is disabled:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Sync Breeze Enterprise 并导航到 Tools | Advanced Options... | Server，确保在端口上启用Web服务器被禁用：
- en: '![](img/00384.jpeg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00384.jpeg)'
- en: Click on Save to save the changes and close it.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 点击保存以保存更改并关闭它。
- en: 'Open Easy File Sharing Web Server:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 Easy File Sharing Web Server：
- en: '![](img/00385.jpeg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00385.jpeg)'
- en: 'Click on Try it!. When the application opens, click on Start in the top-left
    corner:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 Try it!。当应用程序打开时，点击左上角的Start：
- en: '![](img/00386.jpeg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00386.jpeg)'
- en: Fuzzing
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Fuzzing
- en: 'Our parameter is the `GET` parameter; look at the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的参数是`GET`参数；请看以下截图：
- en: '![](img/00387.gif)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00387.gif)'
- en: 'The `/` after `GET` is our parameter; let''s build our fuzzing code:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`GET`后面的`/`是我们的参数；让我们构建我们的fuzzing代码：'
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And on our victim machine, start the Immunity Debugger as the administrator
    and attach to `fsws`:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在受害机器上，以管理员身份启动Immunity Debugger并附加到`fsws`：
- en: '![](img/00388.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00388.jpeg)'
- en: 'Let''s start with a fuzzing value of `1000`:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从`1000`开始一个fuzzing值：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, run the exploit:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行利用程序：
- en: '![](img/00389.gif)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00389.gif)'
- en: 'Nothing happened; let''s increase it to `3000`:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 什么都没发生；让我们增加到`3000`：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, once again run the exploit:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，再次运行利用程序：
- en: '![](img/00390.gif)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00390.gif)'
- en: 'Once again, it''s the same; let''s try `5000`:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，一样；让我们尝试`5000`：
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Then, once again, run the exploit:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，再次运行利用程序：
- en: '![](img/00391.gif)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00391.gif)'
- en: 'Also, scroll down in the stack window; you will see that we managed to overflow
    the SEH and nSEH:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 还要在堆栈窗口中向下滚动；您将看到我们成功溢出了SEH和nSEH：
- en: '![](img/00392.gif)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00392.gif)'
- en: 'We can confirm that by navigating to View | SEH chain or (*Alt* + *S*):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过导航到View | SEH chain或（*Alt* + *S*）来确认：
- en: '![](img/00393.gif)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00393.gif)'
- en: Controlling SEH
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制SEH
- en: 'Now, let''s try to get the offset of the SEH by creating the pattern by using
    Metasploit:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们尝试通过使用Metasploit创建模式来获取SEH的偏移量：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The exploit should look like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 利用程序应该是这样的：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Close the Immunity Debugger, and re-run Easy File Sharing Web Server. Run the
    Immunity Debugger as an administrator and attach it to `fsws`, then run the exploit.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭Immunity Debugger，重新运行 Easy File Sharing Web Server。以管理员身份运行Immunity Debugger并将其附加到`fsws`，然后运行利用程序。
- en: 'The application crashed; let''s use `mona` to perform some analysis on our
    pattern:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序崩溃了；让我们使用`mona`对我们的模式进行一些分析：
- en: '![](img/00394.gif)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00394.gif)'
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The output of the preceding command can be seen in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出可以在以下截图中看到：
- en: '![](img/00395.gif)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00395.gif)'
- en: So the offset of the nSEH should be after `4061`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 所以nSEH的偏移应该在`4061`之后。
- en: 'Let''s confirm that by restarting the application and the Immunity Debugger:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过重新启动应用程序和Immunity Debugger来确认：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, let''s run the exploit:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，运行利用程序：
- en: '![](img/00396.gif)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00396.gif)'
- en: 'Hit *Shift* + *F9* to bypass the exception:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 按下*Shift* + *F9*来绕过异常：
- en: '![](img/00397.gif)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00397.gif)'
- en: 'Get the SEH chain (*Alt* + *S*):'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 获取SEH链（*Alt* + *S*）：
- en: '![](img/00398.gif)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00398.gif)'
- en: 'Let''s look for the address `04AD6FAC` in the stack:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在堆栈中查找地址`04AD6FAC`：
- en: '![](img/00399.gif)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00399.gif)'
- en: Our Bs are in the next SEH, and our Cs are in the SEH. Now, we have control
    over SEH for this application.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的B位于下一个SEH中，我们的C位于SEH中。现在，我们对该应用程序的SEH有了控制。
- en: Injecting shellcode
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注入shellcode
- en: 'So, this is what the **shellcode** looks like:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是**shellcode**的样子：
- en: '![](img/00400.gif)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00400.gif)'
- en: What we need now is to set **nSEH** for a short jump operation, `\xeb\x10`,
    and set **SEH** with an address to the `pop`, `pop`, and `ret` operations. Let's
    try to find one using `mona`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要为短跳转操作设置**nSEH**，`\xeb\x10`，并为`pop`，`pop`和`ret`操作设置**SEH**地址。让我们尝试使用`mona`来找到一个。
- en: 'First, set the log file location in the Immunity Debugger:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在Immunity Debugger中设置日志文件位置：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then, extract the SEH details:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，提取SEH的详细信息：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following screenshot shows the output for the preceding command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了上述命令的输出：
- en: '![](img/00401.gif)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00401.gif)'
- en: We need an address without any bad characters, so open the log file from `c:\logs\fsws\seh.txt`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个没有任何坏字符的地址，所以从`c:\logs\fsws\seh.txt`中打开日志文件。
- en: 'Let''s select one, but remember to avoid any bad characters:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个，但记住要避免任何坏字符：
- en: '[PRE10]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Here is our address for SEH `0x1001a1bf`:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的SEH地址`0x1001a1bf`：
- en: '[PRE11]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Now, it is time to generate and bind TCP shellcode on port `4321`:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候在端口`4321`上生成和绑定TCP shellcode了。
- en: '[PRE12]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'This is what the structure of our exploit should look like:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的利用程序的结构应该是这样的：
- en: '![](img/00402.gif)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00402.gif)'
- en: 'Let''s take a look at our final exploit:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们最终的利用程序：
- en: '[PRE13]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Close the application and start it again. Then, run the exploit and run `nc`
    on port `4321`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭应用程序并重新启动。然后，运行利用程序并在端口`4321`上运行`nc`：
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The output of the preceding command is shown as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出如下所示：
- en: '![](img/00403.gif)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00403.gif)'
- en: It works fine!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 运行正常！
- en: Summary
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we did a real scenario on something new, which is SEH-based
    buffer overflow, and looked at how to get control over SEH and exploit it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们对一些新的东西进行了真实的场景，即基于SEH的缓冲区溢出，并看了如何控制SEH并利用它。
- en: What we have done in this book so far is to just scratch the surface of this
    type of attack, and you should practice this more because this is not the end.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们在本书中所做的只是触及了这种类型的攻击的表面，您应该多加练习，因为这还不是结束。
- en: In the next chapter, we will talk about security mechanisms in systems and how
    to make your code safer.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论系统中的安全机制以及如何使您的代码更安全。
