- en: Chapter 8. Architecting an IDS/IPS Range
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。设计IDS/IPS范围
- en: 'In this chapter, we will learn the techniques of designing and building a variety
    of IDS/IPS capabilities into our network range. We will also look at the deployment
    of typical host and endpoint security configurations. We will discuss the following
    topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习设计和构建各种IDS/IPS功能到我们的网络范围的技术。我们还将研究典型主机和端点安全配置的部署。我们将讨论以下主题：
- en: Deploying a network-based IDS
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署基于网络的IDS
- en: Implementing a host-based IPS and endpoint security
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施基于主机的IPS和端点安全
- en: Working with virtual switches
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用虚拟交换机
- en: Evasion
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规避
- en: This chapter will provide us with a methodology to use when we encounter a number
    of different monitoring devices. In this chapter, we will look at evasion, that
    is, techniques to avoid detection. While this is a popular topic, as a professional
    security tester, the reality is that it is rarely asked for; furthermore, it is
    dependent on so many factors, it is not something that is easy to prepare for.
    The success is largely determined by the type and location of the IDS sensors
    as well as their configuration. There is a possibility that you will be asked
    to evade detection as part of the scope of your work and this is why we cover
    it in the book.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将为我们提供一种方法论，用于当我们遇到多种不同的监控设备时使用。在本章中，我们将研究规避，即避免被检测到的技术。虽然这是一个热门话题，作为专业的安全测试人员，现实情况是很少被要求；而且，它取决于很多因素，不是一件容易准备的事情。成功很大程度上取决于入侵检测系统（IDS）传感器的类型和位置以及其配置。有可能会要求您规避检测作为工作范围的一部分，这就是为什么我们在本书中涵盖这一内容。
- en: Deploying a network-based IDS
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署基于网络的IDS
- en: As we previously discussed in [Chapter 6](ch06.html "Chapter 6. Creating an
    External Attack Architecture"), *Creating an External Attack Architecture*, when
    we deploy a network-based **Intrusion Detection System (IDS)**, we place a sensor
    on each segment of the network. The sensor consists of a network card that is
    placed in promiscuous mode, and this turns the MAC address filtering off. All
    of the traffic is passed up the stack and to the application that is monitoring
    the sensor. We also discussed the challenges of deploying sensors on a switch
    since the traffic is not sent out of all ports, and this can pose a challenge
    to provide data to the sensor.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第6章](ch06.html "第6章。创建外部攻击架构")中讨论的那样，当我们部署基于网络的入侵检测系统（IDS）时，我们在网络的每个段上放置一个传感器。传感器由放置在混杂模式的网络卡组成，这会关闭MAC地址过滤。所有的流量都会通过堆栈传递到监视传感器的应用程序。我们还讨论了在交换机上部署传感器的挑战，因为流量不会发送到所有端口，这可能会对向传感器提供数据构成挑战。
- en: 'With a network-based IDS, the function of the IDS is to process the network
    traffic at the packet level and then analyze it for characteristics or patterns
    that might be indications of an attack. As you think about this, keep in mind
    that the network sensor is capturing packets; so how many packets are traversing
    the network at any one time? This is one of the challenges of the network-based
    IDS (how to process traffic at ever increasing speeds of a network). However,
    we are getting ahead of ourselves. The first thing we want to do is design our
    architecture so that we have a good representation of a typical IDS we might see
    on a client''s network. We will be using the following diagram:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 对于基于网络的IDS，IDS的功能是在数据包级别处理网络流量，然后分析其中可能表明攻击的特征或模式。在考虑这一点时，请记住网络传感器正在捕获数据包；那么在任何时候有多少数据包在网络中传输？这是基于网络的IDS的挑战之一（如何处理网络速度不断增加的流量）。然而，我们正在超前。我们要做的第一件事是设计我们的架构，以便我们能够充分代表我们可能在客户网络上看到的典型IDS。我们将使用以下图表：
- en: '![Deploying a network-based IDS](img/477-1_08-1.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的IDS](img/477-1_08-1.jpg)'
- en: Our architecture
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的架构
- en: We can build the architecture and test sensors at every point, but there really
    is no point in doing that. This is because we have the luxury of using a virtual
    environment such as VMware. So, once we decide what we want to test with, we just
    change the network adapter to be connected to that switch. Again, this is another
    reason why we have made the choices that we have.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在每个点构建架构并测试传感器，但实际上这样做没有意义。这是因为我们有幸使用虚拟环境，比如VMware。因此，一旦我们决定要测试什么，我们只需将网络适配器更改为连接到该交换机。这也是我们做出选择的另一个原因。
- en: Another thing to note is that we want to have a victim to attack and see how
    the IDS responds, but an even better method, especially when it comes to evasion,
    is to channelize the attack traffic directly at the network sensor. This would
    provide us with the power to see whether the attack at the sensor can get through
    without being detected. We will do this later in the *Evasion* section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一件事要注意的是，我们希望有一个受害者来攻击并查看IDS的响应，但更好的方法，特别是在规避方面，是将攻击流量直接引导到网络传感器。这将使我们有能力看到攻击是否能够在不被检测到的情况下通过传感器。我们将在*规避*部分中进行这项工作。
- en: The next thing we will do is start up our three machines and verify whether
    we have the IDS up and functioning. Before we do this, you should verify your
    settings with the Network Security Toolkit, the Kali machine, and the victim and
    check that they are all connected to the VMnet2 switch. You might be wondering
    why we do not use the VMnet8 switch, as it would provide us with Internet connectivity
    and other built-in features of the VMware too. This is a valid question, and the
    biggest reason why we have selected another switch is that we want to ensure we
    do not have any spurious or abnormal traffic that could cause us problems with
    the sensor. The VMnet8 switch shares the adapter configuration with the host machine,
    and often, there are packets that are transmitted and can interfere with our results.
    Once the machines are started, we will start the Snort sensor. Log in to the Network
    Security Toolkit virtual machine, then click on **Activities** and select the
    Firefox icon.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将启动三台机器并验证我们是否已经启动并运行了IDS。在执行此操作之前，您应该使用网络安全工具包、Kali机器和受害者验证您的设置，并检查它们是否都连接到VMnet2开关。您可能会想知道为什么我们不使用VMnet8开关，因为它可以为我们提供互联网连接和VMware的其他内置功能。这是一个有效的问题，我们选择另一个开关的最大原因是我们希望确保没有任何偶发或异常的流量会给传感器带来问题。VMnet8开关与主机机器共享适配器配置，并且通常会传输数据包，可能会干扰我们的结果。一旦机器启动，我们将启动Snort传感器。登录到网络安全工具包虚拟机，然后点击**活动**并选择Firefox图标。
- en: 'When the Firefox web browser starts, if the username and password details are
    not filled in, enter the required information and click on **OK**. This should
    place you at the home page of the Network Security Toolkit Web User Interface.
    Then, navigate to **Security** | **Intrusion Detection** | **Snort IDS**, as shown
    in the following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当Firefox网络浏览器启动时，如果用户名和密码详情没有填写，请输入所需信息，然后点击**确定**。这将使您进入网络安全工具包Web用户界面的主页。然后，转到**安全**
    | **入侵检测** | **Snort IDS**，如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-3.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的IDS](img/477-1_08-3.jpg)'
- en: Once the Snort page opens, you will want to see which state you left the machine
    in when you either suspended or shutdown the virtual machine. If you do not see
    a sensor in a state listed, then you have to configure the interface for the sensor.
    Even though we explained this earlier, we will work through it again so that you
    do not have to look for it. If you do not see a sensor listed, then you need to
    scroll down and select the appropriate interface. For the book, we are using the
    eth1 interface, so the examples that follow will be based on this. If you have
    set the VMnet2 switch on another interface, then you will have to select that
    interface and not the one we are using.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Snort页面打开，您将想要查看您暂停或关闭虚拟机时留下的机器状态。如果您没有看到列出的状态传感器，则必须为传感器配置接口。即使我们之前解释过这一点，我们将再次进行操作，以便您不必寻找它。如果您没有看到列出的传感器，则需要向下滚动并选择适当的接口。对于本书，我们使用eth1接口，因此接下来的示例将基于此。如果您已将VMnet2开关设置为另一个接口，则必须选择该接口而不是我们使用的接口。
- en: Once you have selected the radio button for the appropriate interface, then
    click on **Setup/Start Snort** to start the sensor on the interface.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了适当接口的单选按钮，然后点击**设置/启动Snort**来启动接口上的传感器。
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will most likely have to click on the button twice to get the sensor to
    actually start.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您很可能需要点击两次按钮才能使传感器真正启动。
- en: 'Once the sensor has successfully started, you should see that the Snort sensor
    is in the **Running** state, as shown in the following screenshot:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦传感器成功启动，您应该看到Snort传感器处于**运行**状态，如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-4.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的IDS](img/477-1_08-4.jpg)'
- en: Screen showing Snort sensor is in the Running state (the cropped text is not
    important)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 显示Snort传感器处于运行状态的屏幕（裁剪的文本不重要）
- en: 'Once the process is in the state we want it to be in, we will verify whether
    our rule is turned on. Click on **Rules** and verify whether the **Scan** rules
    are selected. An example of this is shown in the following screenshot:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进程处于我们想要的状态，我们将验证我们的规则是否已打开。点击**规则**并验证是否选择了**扫描**规则。如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-5.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的IDS](img/477-1_08-5.jpg)'
- en: Screen to verify that the Scan rules are selected (the cropped text is not important)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 验证屏幕是否选择了扫描规则（裁剪的文本不重要）
- en: Note
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will have to reload the sensor if you made a change to the rules. The reload
    button is located to the right of the **Rules** button.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更改了规则，则必须重新加载传感器。重新加载按钮位于**规则**按钮的右侧。
- en: 'Now that our rules do what we want them to do, we are ready to verify whether
    our sensor is operating. We covered the steps for this earlier, but we won''t
    make you go find them. We have to open a terminal window and enter the following
    commands:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的规则已经达到我们想要的效果，我们准备验证我们的传感器是否正在运行。我们之前已经介绍了这些步骤，但我们不会让您自己去找。我们必须打开一个终端窗口并输入以下命令：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Once you have started Snort, open another window and use an illegal flag combination
    scan to verify the sensor is working. As a reminder, we used the Christmas tree
    scan in [Chapter 6](ch06.html "Chapter 6. Creating an External Attack Architecture"),
    *Creating an External Attack Architecture*, you can use this or any scan that
    contains illegal flags such as a FIN or a NULL scan.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您启动了Snort，打开另一个窗口并使用非法标志组合扫描来验证传感器是否正常工作。作为提醒，在[第6章](ch06.html "第6章。创建外部攻击架构")中，我们使用了圣诞树扫描，*创建外部攻击架构*，您可以使用这个或包含非法标志（如FIN或NULL扫描）的任何扫描。
- en: 'Another thing that we like about Network Security Toolkit in addition to the
    ease of setup of Snort is the fact that we have excellent tools for Snort. We
    will look at the tool **Base Analysis Search Engine** (**BASE**). To start BASE,
    you need to navigate to **Security** | **Intrusion Detection** | **BASE**. An
    example is shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Snort的易于设置之外，我们还喜欢网络安全工具包的另一点是我们有出色的Snort工具。我们将查看**Base Analysis Search Engine**（**BASE**）工具。要启动BASE，您需要导航到**安全**
    | **入侵检测** | **BASE**。示例如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-6.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: 'When the BASE tool starts, you will be asked to authenticate yourself. The
    credentials should already be entered for you, and if not, then you will have
    to enter the appropriate credentials to access the GUI. Once you have done this,
    click on **OK**, as shown in the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当BASE工具启动时，将要求您进行身份验证。凭据应该已经为您输入，如果没有，则必须输入适当的凭据以访问GUI。完成后，单击**确定**，如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-7.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: 'The BASE GUI allows us to record the alerts that the sensor detects in the
    graphical display. Return to your Kali machine and run the Christmas tree scan
    again. As a reminder, you configure the scan using the **X** option. Once the
    scan is complete, return to the **BASE** display and refresh the display, and
    you should now see detected TCP traffic as shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: BASE GUI允许我们在图形显示中记录传感器检测到的警报。返回到您的Kali机器并再次运行圣诞树扫描。作为提醒，您可以使用**X**选项配置扫描。扫描完成后，返回到**BASE**显示并刷新显示，您现在应该看到检测到的TCP流量，如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-8.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: 'A nice thing about the BASE tool is the information that you can examine from
    the alerts. We will do this now. Click on the percentage number and this will
    bring up another window with a list of the alerts that have been detected by the
    sensor. An example of this is shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: BASE工具的一个好处是您可以从警报中检查的信息。我们现在将这样做。单击百分比数字，这将打开另一个窗口，其中列出了传感器检测到的警报。示例如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-9.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: 'The next thing we want to do is to examine the alerts. We do this by clicking
    on an alert. When you click on the alert, you will see additional information
    about the alert. An example of this is shown in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要做的是检查警报。单击警报时，将看到有关警报的其他信息。示例如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-10.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: As the previous screenshot shows, the composition of the packet, including the
    display of the encapsulated data, is available for review. This shows that the
    **Nmap** tool sets the FIN, PUSH, and URGENT flags to represent the scan. Some
    tools will set all the six flags when they perform the scan.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，可以查看数据包的组成，包括封装数据的显示。这显示了**Nmap**工具设置FIN、PUSH和URGENT标志以表示扫描。一些工具在执行扫描时会设置所有六个标志。
- en: 'There are two links located in the **Meta** section and under the **Triggered
    Signature**. Click on the Snort link and it will bring up the rule that triggered
    the signature. An example of this is shown in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**Meta**部分和**触发签名**下有两个链接。单击Snort链接，将显示触发签名的规则。示例如下截图所示：'
- en: '![Deploying a network-based IDS](img/477-1_08-11.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: 'The previous screenshot shows information that you can examine to discover
    additional details not only about the signature, but also about the impact of
    the triggered event. Furthermore, you can address information on the false positive
    rating. This is important because many administrators that implement an IDS will
    turn off signatures that generate a high number of false alerts. In fact, as you
    may recall, we had to turn the scan rule on, and this is because it has a tendency
    for a high false positive rating. We will now examine the false positive rating
    of the Nmap XMAS scan. Scroll down and review the information. An example of this
    is shown in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了您可以检查的信息，以发现有关签名的其他详细信息，以及触发事件的影响。此外，您还可以了解有关误报率的信息。这很重要，因为许多实施IDS的管理员会关闭生成大量误报警报的签名。事实上，您可能还记得，我们不得不打开扫描规则，这是因为它有很高的误报率。现在我们将检查Nmap
    XMAS扫描的误报率。向下滚动并查看信息。示例如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-12.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: 部署基于网络的IDS
- en: 'We now have an IDS range that we can use to observe how our different tools
    and techniques will react. Before we do this, we will clear any alerts in the
    machine, and to do this, you need to go to the bottom of the **Query Results**
    screen and navigate to **action** | **Delete alert(s)**. Once you have done this,
    click on the **Entire Query** button to delete the alerts and then return to the
    main screen by clicking on **Home**. We will use the Nikto web scanning tool to
    see how the Snort sensor reacts when the scanner is used. We are going to scan
    the Network Security Toolkit web server that is on the network of the Snort sensor.
    To conduct the scan in the Kali Linux machine, open a terminal window and enter
    `nikto –ssl –h <IP address of the Sensor>`, as shown in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个IDS范围，可以用来观察我们不同的工具和技术的反应。在这之前，我们将清除机器中的任何警报，为此，您需要转到**查询结果**屏幕的底部，然后导航到**操作**
    | **删除警报**。完成此操作后，单击**整个查询**按钮以删除警报，然后通过单击**主页**返回到主屏幕。我们将使用Nikto Web扫描工具来查看Snort传感器在使用扫描程序时的反应。我们将扫描Snort传感器网络上的网络安全工具包Web服务器。要在Kali
    Linux机器上进行扫描，打开终端窗口并输入`nikto –ssl –h <传感器的IP地址>`，如下截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-13.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的 IDS](img/477-1_08-13.jpg)'
- en: The `ssl` option is used to force the check of **Secure Sockets Layer** (**SSL**),
    since in the default configuration, the Network Security Toolkit does not have
    a web server at port 80; only HTTPS port 443 is accessible. When the scan has
    finished, you will notice that there are several findings. To review the findings,
    you will need to scroll back through and look for them. As with most tools, there
    is a better way and we will explore this now.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`ssl` 选项用于强制检查 **安全套接字层** (**SSL**)，因为在默认配置中，网络安全工具包在端口 80 没有 web 服务器；只有 HTTPS
    端口 443 可以访问。扫描完成后，您会注意到有几个发现。要查看这些发现，您需要向后滚动并寻找它们。与大多数工具一样，有更好的方法，我们现在将探讨这一点。'
- en: 'In the terminal window, we will use the output capability of the tool to write
    it to a file. Enter `nikto –ssl –h <IP address of the Sensor> -o file.html`, as
    shown in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端窗口中，我们将使用工具的输出功能将其写入文件。输入 `nikto –ssl –h <传感器的 IP 地址> -o file.html`，如下面的截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-14.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的 IDS](img/477-1_08-14.jpg)'
- en: 'This has taken the output from the tool findings and written it to an HTML
    file. Open **Iceweasel** by navigating to **Applications** | **Internet** | **Iceweasel
    Web Browser**. When the browser opens, open the file that you have created and
    review the results. You will see the output is much easier to read, as shown in
    the following screenshot:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这将工具发现的输出写入了一个 HTML 文件。通过导航到 **应用程序** | **互联网** | **Iceweasel Web 浏览器** 来打开
    **Iceweasel**。当浏览器打开时，打开您创建的文件并查看结果。您会看到输出结果更容易阅读，如下面的截图所示：
- en: '![Deploying a network-based IDS](img/477-1_08-15.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的 IDS](img/477-1_08-15.jpg)'
- en: 'It is now time to return to our Snort sensor and BASE display to see whether
    we have any alerts. We have conducted a number of web scans and want to see what
    has been detected. Return to your Network Security Toolkit and refresh the BASE
    display and review the information. An example is shown in the following screenshot:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候返回到我们的 Snort 传感器和 BASE 显示，看看是否有任何警报。我们进行了许多网络扫描，想要看看检测到了什么。返回到您的网络安全工具包，刷新
    BASE 显示并查看信息。以下是示例截图：
- en: '![Deploying a network-based IDS](img/477-1_08-16.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![部署基于网络的 IDS](img/477-1_08-16.jpg)'
- en: As the previous screenshot shows, we have no alerts! Why is this? Well, this
    is part of the process of trial and error. We know that specific rules were loaded
    when we configured the Snort sensor because we had to enable some in the past.
    So, the process from here will be to try to enable more rules and see what happens.
    There is also a good chance that there is another problem, but as long as we send
    our illegal flag combination packets in, we get some sort of an alert, and this
    tells us the sensor is working. In this case, if you turn all of the rules on,
    there will still not be an alert. We will save the answer to this till we get
    to the section on evasion.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的截图所示，我们没有警报！为什么呢？这是试错过程的一部分。我们知道在配置 Snort 传感器时加载了特定规则，因为我们过去必须启用一些规则。因此，从这里开始的过程将是尝试启用更多规则并查看发生了什么。还有很大的可能性存在其他问题，但只要我们发送非法的标志组合数据包进去，我们就会收到某种警报，这告诉我们传感器正在工作。在这种情况下，即使您打开了所有规则，也不会有警报。我们将在规避部分得到答案。
- en: Implementing the host-based IDS and endpoint security
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施基于主机的 IDS 和端点安全
- en: There are a number of different ways that a site can configure and deploy their
    host-based protection or moreover, their endpoint security. As a tester, it is
    a matter of experimentation when it comes to implementing this on our target range.
    The majority of these products are commercial and you have to get trial versions
    or request a proof of concept implementation from the vendor. Either way, your
    ability to deploy this on your network range will be largely dependent on what
    your client has. This is information that can be obtained during the early stages
    of your non-intrusive target searching. However, it is usually provided to you
    at meetings to determine the scope of work, or during the social engineering phase
    of testing when it is allowed and is in scope.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一个站点可以配置和部署他们的基于主机的保护或者说他们的端点安全的不同方式。作为测试人员，在实施这些措施时需要进行实验。这些产品大多是商业产品，您必须从供应商那里获取试用版本或请求概念实施。无论哪种方式，您在网络范围内部署这些产品的能力将在很大程度上取决于您的客户拥有什么。这是在您进行非侵入式目标搜索的早期阶段获取的信息。然而，通常在会议上确定工作范围时或在允许并且在范围内的测试的社会工程阶段提供给您。
- en: We will look at some popular endpoint protection software from Symantec. As
    we said in the previous paragraph, there will be others you might encounter, but
    with the majority of these detection solutions, there is some alert or alarm threshold
    that is set. As a tester, that is what we have to determine. Consequently, this
    will be discussed in the section on evasion.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看 Symantec 的一些热门端点保护软件。正如我们在前一段中所说，您可能会遇到其他软件，但在这些检测解决方案的大多数中，都设置了一些警报或报警阈值。作为测试人员，这就是我们需要确定的。因此，这将在规避部分进行讨论。
- en: The version of Symantec we are going to look at is an older one (Version 11.0),
    but it will serve our purpose. The intent here is when you are preparing for an
    engagement, you will create as much as you can in your lab environment. Once you
    install an host-based IDS or an IPS, you look at its configuration to see what
    the tool uses to detect and/or block events.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要查看的 Symantec 版本是较旧的版本（版本 11.0），但它将满足我们的目的。这里的意图是，当您准备进行一项工作时，您将在实验室环境中尽可能多地创建。一旦您安装了基于主机的
    IDS 或 IPS，您将查看其配置，以了解工具用于检测和/或阻止事件的内容。
- en: 'With the Symantec tool, we look at the options in the tool configuration to
    gain this information. An example of the dashboard is shown in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Symantec 工具，我们查看工具配置中的选项以获取这些信息。以下是仪表板的示例截图：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-17.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-17.jpg)'
- en: 'As the previous screenshot shows, there are three main areas of protection.
    We only have one enabled at this time, and this is what we will look at first.
    We will navigate to **Options** | **Change Settings** | **Intrusion Prevention**
    to bring up the menu to change the settings for blocking suspected attack traffic.
    An example of this is shown in the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的屏幕截图所示，有三个主要的保护区域。我们目前只启用了一个，这是我们首先要看的。我们将导航到**选项** | **更改设置** | **入侵防范**，以打开菜单来更改阻止疑似攻击流量的设置。以下是此示例的示例：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-18.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-18.jpg)'
- en: As the previous screenshot shows, we have a number of values we can configure
    and customize, and this is one of the challenges we have as testers. If the administrator
    has tuned or changed the settings to something different, we might not be able
    to evade detection, but we are getting ahead of ourselves as we are not in the
    evasion section. We have changed the default values here.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的屏幕截图所示，我们有许多数值可以配置和自定义，这是我们作为测试人员面临的挑战之一。如果管理员已经调整或更改了设置为不同的值，我们可能无法逃避检测，但我们现在还没有进入逃避部分。我们已经在这里更改了默认值。
- en: 'The next thing we need to do is see whether we can detect a potential attack
    and actually block the IP address. We can use Nmap, but we prefer to use more
    of an attack tool and that is where Nikto comes in. We will direct it at the IP
    address of the Symantec machine and see what happens. An example of the results
    is shown in the following screenshot:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们需要做的是看看我们是否能够检测到潜在的攻击并实际上阻止IP地址。我们可以使用Nmap，但我们更喜欢使用更具攻击性的工具，这就是Nikto的用武之地。我们将把它指向Symantec机器的IP地址，看看会发生什么。以下是结果的示例：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-19.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-19.jpg)'
- en: 'As the previous screenshot shows, the attack was detected and the IP address
    is now blocked; this is why we changed the block to 60 seconds so that the Nikto
    scan will not take too long. Once the scan is complete, we can view the history
    of the detection and the corresponding blocks in the Symantec tool. All of these
    features are great for the user and are easy to use, but they are also good for
    the attacker. An example of the log results from a Nikto scan is shown in the
    following screenshot:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的屏幕截图所示，攻击已被检测到并且IP地址现在被阻止；这就是为什么我们将阻止时间改为60秒，这样Nikto扫描就不会花太长时间。扫描完成后，我们可以在Symantec工具中查看检测历史和相应的阻止。所有这些功能对用户来说非常好用，但对攻击者也很有利。以下是Nikto扫描的日志结果示例：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-20.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-20.jpg)'
- en: As the previous screenshot shows, the intrusion prevention tool has detected
    and subsequently blocked the attack attempts from the tool. The problem is that,
    as many of you reading this probably know, an IP block is not always a good idea,
    because we can spoof an IP address and then the user will be blocked. This is
    one of the reasons why the IP blocking is usually only configured for something
    that could lead to a significant loss.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的屏幕截图所示，入侵防范工具已经检测到并随后阻止了来自该工具的攻击尝试。问题在于，正如你们中的许多人可能知道的那样，IP阻止并不总是一个好主意，因为我们可以伪造IP地址，然后用户将被阻止。这就是为什么IP阻止通常只针对可能导致重大损失的东西进行配置的原因之一。
- en: 'There are several other parts of the Symantec tool and we will not cover them
    all here. However, we will look at one that is not network-related, but is actually
    host-related. The capability we are going to look at now is **Antivirus and Antispyware
    Protection**. The first thing we will do is click on the **Fix All** button and
    this will turn all of the protections on, as shown in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Symantec工具还有其他几个部分，我们这里不会全部涵盖。但是，我们将看一下一个与网络无关但实际上与主机相关的部分。我们现在要看的功能是**防病毒和防间谍软件保护**。我们要做的第一件事是点击**修复所有**按钮，这将打开所有的保护措施，如下一张屏幕截图所示：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-21.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-21.jpg)'
- en: Screen showing all of the protections on (the cropped text is not important)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕显示所有的保护措施（裁剪的文本不重要）
- en: 'We now have all of the endpoint protections enabled; consequently, any program
    that we try to put on the machine that is considered a threat will be flagged
    by the protection mechanisms. To demonstrate this, we will use the FU rootkit
    written in 2005 by Jamie Butler to show the weaknesses with the usage of the Intel
    architecture rings by Microsoft. A detailed explanation of this is beyond the
    scope of the book, but for those of you who want to know more, you can get the
    book *Rootkits: Subverting the Windows Kernel, Addison Wessely* that he co-authored
    with Greg Hoglund.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '我们现在已经启用了所有的端点保护；因此，任何我们尝试放入机器上被视为威胁的程序都将被保护机制标记。为了证明这一点，我们将使用Jamie Butler于2005年编写的FU
    rootkit来展示Microsoft使用Intel架构环的弱点。这个问题的详细解释超出了本书的范围，但是对于想了解更多的人，可以获取他与Greg Hoglund合著的书籍*Rootkits:
    Subverting the Windows Kernel, Addison Wessely*。'
- en: 'When we copy the executable file for the FU rootkit to the protected machine,
    it is instantly detected as a threat, as shown in the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将FU rootkit的可执行文件复制到受保护的机器上时，它立即被检测为威胁，如下一张屏幕截图所示：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-22.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-22.jpg)'
- en: 'As the previous screenshot shows, it has been detected and classified as a
    **Hacktool.Rootkit** and as it was considered a threat, it was deleted. We can
    look at more details of the detection by clicking on Antivirus and Antispyware
    Protection. Navigate to **Options** | **View Logs** | **Risk Log** to view the
    risks that have been detected. An example is shown in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的截图所示，它已被检测并分类为**Hacktool.Rootkit**，因为被视为威胁，所以被删除了。我们可以通过单击防病毒和防间谍软件保护来查看检测的更多细节。导航到**选项**
    | **查看日志** | **风险日志**以查看已检测到的风险。以下是一个示例截图：
- en: '![Implementing the host-based IDS and endpoint security](img/477-1_08-23.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![实施基于主机的IDS和端点安全性](img/477-1_08-23.jpg)'
- en: As the previous screenshot shows, the detection was made on two files, the executable
    is one and `msdirectx.sys`, which is the driver that is loaded and used to get
    access to the kernel memory. The FU rootkit was a pioneer since it was the first
    to achieve **Direct Kernel Object Memory** (**DKOM**) manipulation.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的截图所示，检测是在两个文件上进行的，可执行文件是一个，`msdirectx.sys`是加载和用于访问内核内存的驱动程序。FU rootkit是一个先驱，因为它是第一个实现**Direct
    Kernel Object Memory**（**DKOM**）操纵的。
- en: So, where does this leave us with our range architecture? Well, as it has been
    mentioned, the products that you are going to encounter are going to be of a wide
    variety. So, for the most part, we wait and see what the client has available,
    and then we start researching to get a copy of it and lab it up and experiment.
    The key, as many of you probably know, is that we have been detected because of
    the signature of the files. So, we will use a tool to change that signature; however,
    this is evasion so we will cover that later in this chapter.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这对我们的范围架构有什么影响呢？嗯，正如已经提到的，你将会遇到各种各样的产品。所以，在大多数情况下，我们等待并查看客户可用的产品，然后开始研究获取副本并进行实验。正如你们中的许多人可能知道的那样，关键在于我们因文件的签名而被检测到。因此，我们将使用工具来更改该签名；然而，这是逃避，所以我们将在本章后面进行讨论。
- en: Working with virtual switches
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用虚拟交换机
- en: 'When we are building our range, we have to take into account the types of switches
    that we have and whether we need to configure either a **Switch Port Analyzer**
    (**SPAN**) or a **Test Access Point** (**TAP**). Like most things, there are advantages
    and disadvantages to each. You can find out more at the website [http://www.networktaps.com](http://www.networktaps.com).
    An example of a comparison from the website is shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建我们的范围时，我们必须考虑我们拥有的交换机类型，以及我们是否需要配置**Switch Port Analyzer**（**SPAN**）或**Test
    Access Point**（**TAP**）。像大多数事情一样，每种方法都有优缺点。您可以在网站[http://www.networktaps.com](http://www.networktaps.com)上了解更多信息。以下是网站上的比较示例截图：
- en: '![Working with virtual switches](img/477-1_08-24.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![使用虚拟交换机](img/477-1_08-24.jpg)'
- en: If you are building your range with physical switches, then this is something
    you will have to take into consideration. However, if you are using virtual switches,
    then we do not have this challenge. We have looked at this once, but we want to
    look at it from an intrusion detection perspective. To do this, we are going to
    run our scans but this time not directly at the sensor. You will need the Kali
    Linux machine, OWASP, and the Network Security Toolkit. Start all the three virtual
    machines before we continue.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用物理交换机构建您的范围，那么这是您必须考虑的事情。但是，如果您使用虚拟交换机，那么我们就没有这个挑战。我们已经看过一次，但我们想从入侵检测的角度来看。为此，我们将运行我们的扫描，但这次不是直接在传感器上。在继续之前，您需要Kali
    Linux机器、OWASP和Network Security Toolkit。启动这三台虚拟机器后，我们将继续。
- en: 'Once the machines are online, we will conduct a scan from our Kali Linux machine
    against the OWASP machine and across the VMnet2 switch with the Network Security
    Toolkit running a Snort sensor. The setup is shown in the following diagram:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦机器上线，我们将从我们的Kali Linux机器对OWASP机器进行扫描，并跨VMnet2交换机运行Network Security Toolkit上的Snort传感器。设置如下图所示：
- en: '![Working with virtual switches](img/477-1_08-25.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![使用虚拟交换机](img/477-1_08-25.jpg)'
- en: You will next need to start the Snort sensor on the Network Security Toolkit
    machine. We covered the steps for this earlier in this chapter.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要在Network Security Toolkit机器上启动Snort传感器。我们在本章前面介绍了这些步骤。
- en: Note
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Start the sensor on the correct interface, select the one that is attached to
    VMnet2\. For the purposes of this book, we are using the eth1 interface.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在正确的接口上启动传感器，选择连接到VMnet2的接口。在本书中，我们使用eth1接口。
- en: Once the sensor is up and running, start the BASE GUI and clear all of the alerts
    that are currently listed. The next thing we want to do is conduct a scan against
    the OWASP machine from the Kali Linux machine. We can use any tool we want, but
    for the demonstration, we will use the Nikto tool that we used earlier. The target
    IP address for our OWASP machine is `10.2.0.132`, and this is the address we will
    use in our tools. In a Kali Linux terminal window, enter `nikto –h 10.2.0.132`
    to scan the OWASP machine. Return to the BASE display and see whether the attack
    has been detected.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器运行后，启动BASE GUI并清除当前列出的所有警报。我们接下来要做的是从Kali Linux机器对OWASP机器进行扫描。我们可以使用任何工具，但是为了演示，我们将使用之前使用过的Nikto工具。我们的OWASP机器的目标IP地址是`10.2.0.132`，这是我们在工具中将使用的地址。在Kali
    Linux终端窗口中，输入`nikto –h 10.2.0.132`来扫描OWASP机器。返回到BASE显示并查看攻击是否被检测到。
- en: 'An example is shown in the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是示例截图：
- en: '![Working with virtual switches](img/477-1_08-26.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![使用虚拟交换机](img/477-1_08-26.jpg)'
- en: Screen showing the BASE display (the cropped text is not important)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 显示BASE显示的屏幕（裁剪的文本不重要）
- en: 'As the previous screenshot shows, the traffic has generated some alerts. The
    next thing we will do is look at the alerts that the sensor generated. Click on
    **100%** and this will bring up a list of the alerts that the sensor reported.
    As we are using the Nikto tool, we are looking for the alerts that are related
    to web traffic. An example is shown in the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的截图所示，流量已经生成了一些警报。接下来我们要做的是查看传感器生成的警报。点击**100%**，这将显示传感器报告的警报列表。由于我们使用Nikto工具，我们正在寻找与Web流量相关的警报。以下是一个示例：
- en: '![Working with virtual switches](img/477-1_08-27.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![使用虚拟交换机](img/477-1_08-27.jpg)'
- en: 'We now have the alerts, so select one of them and examine it further. Earlier
    in the chapter when we examined the alerts, we saw additional information about
    the packet that generated the alert. However, we did not have any information
    on the payload of the packet. This is because there was no payload to capture.
    As these packets are attack patterns, we have a better chance of finding a payload.
    An example of a payload for a directory traversal attack is shown in the following
    screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了警报，所以选择其中一个并进一步检查。在本章早些时候我们检查警报时，我们看到了有关生成警报的数据包的附加信息。然而，我们没有任何有关数据包有效载荷的信息。这是因为没有有效载荷可以捕获。由于这些数据包是攻击模式，我们有更好的机会找到有效载荷。以下是目录遍历攻击的有效载荷示例：
- en: '![Working with virtual switches](img/477-1_08-28.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![使用虚拟交换机](img/477-1_08-28.jpg)'
- en: You can see that the sensor on a virtual switch does not require a SPAN or mirror
    to see the network traffic as a physical switch would, so we are ready to move
    on to another section.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，虚拟交换机上的传感器不需要SPAN或镜像来查看网络流量，就像物理交换机一样，所以我们准备继续下一节。
- en: Evasion
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规避
- en: In this section, we are going to discuss the topic of evasion. This comes from
    the often referred to concept of **Never Get Caught!** While this does make for
    good theatre, the reality is that this is rarely asked for in a penetration test.
    Furthermore, it is highly dependent on how the administrator has configured their
    environment. There is no guarantee that we will get through, but we can lab it
    up and at least find some things that might work if it is a part of our scope
    of work.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将讨论规避的主题。这来自于经常提到的**永远不要被抓住！**的概念。虽然这在戏剧中很有趣，但现实是渗透测试很少会要求这样做。此外，这高度依赖于管理员如何配置他们的环境。没有保证我们会通过，但我们可以进行实验，并至少找到一些可能在我们的工作范围内起作用的东西。
- en: Determining thresholds
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 确定阈值
- en: What we want to focus on is the fact that all of these tools have to have some
    form of threshold, and will be alert when they reach this threshold. This is where
    we can find ways to evade detection. If we revisit our Snort sensor and clear
    all of the existing alerts, we can attempt a few different things to see when
    we get detected and when we do not get detected.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想要关注的是所有这些工具都必须有某种阈值，并且在达到这个阈值时会发出警报。这就是我们可以找到规避检测的方法。如果我们重新审视我们的Snort传感器并清除所有现有的警报，我们可以尝试一些不同的事情，看看何时被探测到，何时没有被探测到。
- en: Note
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One thing to keep in mind is that any scan with illegal flag combinations will
    be detected instantly, so avoid these if evasion is part of your scope of work.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要记住的一件事是，任何带有非法标志组合的扫描都会立即被探测到，所以如果规避是你工作范围的一部分，要避免这些。
- en: For the Snort sensor, the threshold seems to be around five closed ports, that
    is, the receipt of RST packets can get you detected; therefore, as long as you
    stay below five scanned ports at any one time you should not be detected.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Snort传感器，阈值似乎在五个关闭的端口左右，也就是说，收到RST数据包会让你被探测到；因此，只要你在任何时候扫描的端口数保持在五个以下，你就不会被探测到。
- en: Stress testing
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 压力测试
- en: Another type of testing we might need to perform against our IDS sensor is stress
    testing. With this technique, we generate a lot of noise and see whether the attack
    can be masked by the noise, or alternatively whether the sensor can be overwhelmed
    and stop working. Within the Kali distribution, there are a number of tools for
    this, and you are welcome to try them out. You can find them by navigating to
    **Applications** | **Kali Linux** | **Stress Testing** and reviewing the programs
    that are there. We will leave this testing to you for homework. You will discover
    that the IDS tools have been around long enough to not be flooded with these attacks.
    Having said that, there is always a chance and this is why we covered it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能需要对我们的IDS传感器进行的另一种测试是压力测试。通过这种技术，我们产生大量噪音，看攻击是否能被噪音掩盖，或者传感器是否会被压倒而停止工作。在Kali发行版中，有许多工具可以做到这一点，欢迎你去尝试。你可以通过导航到**应用程序**
    | **Kali Linux** | **压力测试**来找到它们，并查看那里的程序。我们将把这个测试留给你做家庭作业。你会发现IDS工具已经存在了很长时间，不会被这些攻击淹没。话虽如此，总会有机会，这就是为什么我们要涵盖它的原因。
- en: Shell code obfuscation
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Shell代码混淆
- en: 'When it comes to the detection of exploits, the data that gets detected is
    the shell code; furthermore, the signature of that code. As it is a standard,
    it is easy for the tool to detect it. We will look at this now. You will need
    your Kioptrix machine as we are going to exploit it. We have discussed a number
    of ways to do this, and for our purposes, we are going to exploit it using the
    metasploit tool. There are a number of parameters that we can manipulate when
    we try to avoid detection, and unfortunately, there are no guarantees. If you
    use the Armitage tool, then you can select **Show Advanced Options** to view the
    additional parameters we can use. An example of this is shown in the following
    screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在检测利用程序时，被检测到的数据是shell代码；此外，还有该代码的签名。由于这是一个标准，工具很容易检测到它。我们现在来看看这个。你需要你的Kioptrix机器，因为我们要利用它。我们已经讨论了许多这样做的方法，对于我们的目的，我们将使用metasploit工具来利用它。当我们试图规避检测时，有许多参数可以操纵，不幸的是，没有保证。如果你使用Armitage工具，那么你可以选择**显示高级选项**来查看我们可以使用的额外参数。以下是一个示例：
- en: '![Shell code obfuscation](img/477-1_08-29.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![Shell代码混淆](img/477-1_08-29.jpg)'
- en: 'We will conduct the exploit with the default settings first to see what is
    detected by the BASE tool. Again, there are no guarantees when it comes to evasion,
    so it is a matter of experimentation and documenting your findings. An example
    of the exploit attempt is shown in the following screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先使用默认设置进行漏洞利用，看看BASE工具检测到了什么。再次强调，逃避没有保证，所以这是一个实验和记录你的发现的问题。漏洞利用尝试的示例如下截图所示：
- en: '![Shell code obfuscation](img/477-1_08-30.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![Shell code obfuscation](img/477-1_08-30.jpg)'
- en: 'As the previous screenshot shows, we have not been successful, so now we will
    modify the payload and see whether we have any better luck. This is the process:
    you try different things and find what works and does not work. This is why it
    is a good thing that evasion is rarely asked for.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们并没有成功，所以现在我们将修改载荷，看看我们是否有更好的运气。这是一个过程：你尝试不同的方法，找出什么有效，什么无效。这就是为什么很少会要求逃避的好事。
- en: 'In the advanced options, we can modify a number of the parameters, but at the
    time of writing this book, we were not able to successfully evade detection with
    any of these tools. If you want to learn more, you can gather more information
    and see a script that is written for antivirus evasion at: [http://healthtalkie.com/discussion/script-for-av-evasion-uz3mb.php](http://healthtalkie.com/discussion/script-for-av-evasion-uz3mb.php).'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在高级选项中，我们可以修改许多参数，但在撰写本书时，我们无法成功地使用这些工具逃避检测。如果你想了解更多，你可以收集更多信息，并查看一个针对反病毒逃避编写的脚本：[http://healthtalkie.com/discussion/script-for-av-evasion-uz3mb.php](http://healthtalkie.com/discussion/script-for-av-evasion-uz3mb.php)。
- en: We have one last thing to try with respect to evasion. Sometimes, it is easier
    to just try different ports that you know are not checked by default by an IDS.
    This omission is normal because of the fact that the traffic generates too many
    false positives.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 关于逃避，我们还有最后一件事要尝试。有时，尝试不同的端口可能更容易，因为你知道默认情况下IDS不会检查的端口。这种遗漏是正常的，因为流量会产生太多的误报。
- en: Earlier in the chapter, we conducted a scan against the Network Security Toolkit
    using the Nikto tool and there was nothing detected. We will now take a closer
    look at this. The scan we did against the NST was against the port 443 and the
    protocol *HTTPS*. There can be more than one reason why it was not detected. First,
    we will test whether it was not detected because the attack was directed at the
    port 443, which in fact would be encrypted traffic and the IDS is blind to that.
    We have a couple of choices on how we can accomplish this test. We can turn on
    the web server on the NST virtual machine, or we can activate the HTTPS protocol
    on the server of the OWASP machine. We will use the NST machine; we have to navigate
    to the configuration file and uncomment the HTTP line to get it running on the
    machine. In a terminal window, enter `gvim /etc/httpd/conf/httpd.conf` to open
    the configuration file.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的前面，我们使用Nikto工具对网络安全工具包进行了扫描，并没有发现任何问题。现在我们将更仔细地研究一下。我们对NST进行的扫描是针对端口443和协议*HTTPS*的。为什么没有被检测到可能有多个原因。首先，我们将测试是否没有被检测到是因为攻击是针对端口443的，实际上这是加密流量，IDS对此是盲目的。我们有几种选择来完成这个测试。我们可以在NST虚拟机上启动web服务器，或者在OWASP机器的服务器上激活HTTPS协议。我们将使用NST机器；我们必须导航到配置文件并取消注释HTTP行以在机器上运行它。在终端窗口中，输入`gvim
    /etc/httpd/conf/httpd.conf`来打开配置文件。
- en: 'Scroll down to the section of the server configuration and remove the `#` to
    uncomment `Listen 80`, as shown in the following screenshot:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动到服务器配置部分，并删除`#`以取消注释`Listen 80`，如下截图所示：
- en: '![Shell code obfuscation](img/477-1_08-31.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![Shell code obfuscation](img/477-1_08-31.jpg)'
- en: 'Once you have finished editing, exit the editor by navigating to **File** |
    **Save-Exit**. The next thing you have to do is restart the web server. In the
    terminal window, enter `service httpd restart` to restart the service. Once the
    service has restarted, we will scan using Nikto against the NST machine. For the
    first scan, we will use the SSL option, but before you do this, make sure that
    you clear all of the queries in BASE. Return to your Kali machine and scan the
    IP address of the NST machine. In our example, the machine address is 10.2.0.144
    and this is what we will use. In the terminal window, enter `nikto -ssl -h 10.2.0.144`.
    When the scan finishes, return to your BASE and see whether the scan was detected.
    Were you detected? The answer should be no! Why is this? Well, before we answer
    this, as with all good testing, we will prove it. There should not be any alerts
    in your BASE display. Return to your Kali machine and run the scan again without
    forcing it to go over SSL. In the terminal window, enter `nikto -h 10.2.0.144`.
    Once the scan finishes, return to the BASE display and see whether the scan was
    detected. An example of the dashboard is shown in the following screenshot:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑完成后，通过导航到**文件** | **保存-退出**退出编辑器。接下来你需要做的是重新启动web服务器。在终端窗口中，输入`service httpd
    restart`来重新启动服务。服务重新启动后，我们将使用Nikto对NST机器进行扫描。对于第一次扫描，我们将使用SSL选项，但在此之前，请确保清除BASE中的所有查询。返回到你的Kali机器并扫描NST机器的IP地址。在我们的例子中，机器地址是10.2.0.144，这就是我们将要使用的。在终端窗口中，输入`nikto
    -ssl -h 10.2.0.144`。扫描完成后，返回到你的BASE并查看扫描是否被检测到。你被检测到了吗？答案应该是否定的！为什么呢？好吧，在回答这个问题之前，和所有的良好测试一样，我们将证明它。你的BASE显示中不应该有任何警报。返回到你的Kali机器并再次运行扫描，不要强制它通过SSL。在终端窗口中，输入`nikto
    -h 10.2.0.144`。扫描完成后，返回到BASE显示并查看扫描是否被检测到。仪表板的示例如下截图所示：
- en: '![Shell code obfuscation](img/477-1_08-32.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![Shell code obfuscation](img/477-1_08-32.jpg)'
- en: Screen showing the BASE display (the cropped text is not important)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 显示BASE显示的屏幕（裁剪的文本不重要）
- en: As the previous screenshot shows, we can direct our attacks at the SSL port
    443, but the sensor does not set an alert. This is quite common, but there always
    is a chance that the administrator has turned on the rule to check HTTPS traffic.
    However, it does give us a potential method to evade detection. Again, your success
    will vary, but if it is a part of the scope of work, some of these techniques
    might assist you in evading the monitoring capability of the client. This technique
    is also the process of tunneling, where we tunnel a protocol over another port,
    such as the SSH port so that the IDS might not check it as it is usually encrypted.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面的屏幕截图所示，我们可以将攻击定向到SSL端口443，但传感器没有设置警报。这是相当常见的，但管理员总是有可能打开规则来检查HTTPS流量。然而，这确实给了我们一个规避检测的潜在方法。再次强调，您的成功将有所不同，但如果这是工作范围的一部分，这些技术中的一些可能会帮助您规避客户的监控能力。这种技术也是隧道技术的过程，我们通过另一个端口进行协议隧道，比如SSH端口，这样IDS可能不会检查它，因为通常是加密的。
- en: Summary
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed the requirement to build an IDS/IPS capability
    in our range architecture. We discussed how to deploy a network-based IDS and
    the configuration of a sensor placed on each network segment. We deployed the
    Snort IDS and detected a number of attacks once we deployed it.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了在我们的范围架构中构建IDS/IPS能力的要求。我们讨论了如何部署基于网络的IDS以及在每个网络段上放置传感器的配置。我们部署了Snort
    IDS，并在部署后检测到了许多攻击。
- en: Following the network IDS, we looked at host-based protections and a product
    from Symantec that provides a number of methods for endpoint protection. We attempted
    to attack the machine using the web attack tool Nikto, and triggered the software
    to block the IP address once the attack was detected. We finished the section
    on endpoint protection by attempting to transfer a malicious file into the machine
    and the Symantec tool successfully detected the file and deleted it before the
    file was transferred to the machine.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络IDS之后，我们研究了基于主机的保护以及赛门铁克提供的一种端点保护方法。我们尝试使用Web攻击工具Nikto攻击机器，并在检测到攻击后触发软件阻止IP地址。我们通过尝试将恶意文件传输到机器中来完成端点保护部分，赛门铁克工具成功检测到并在文件传输到机器之前将其删除。
- en: Finally, we closed the chapter with a discussion on the topic of evasion. We
    explained that this is rarely asked for in a professional testing scope, but there
    is a chance that it could be. As discussed in the chapter, there are no guarantees
    when it comes to this, because we will only be as successful as the administrator
    who has configured the devices allows us to be. Having said that, one of the highest
    rates of success is found when we use ports that are known for containing encrypted
    data. Furthermore, we verified this by scanning the Network Security Toolkit virtual
    machine on port 443 without being detected, but when we ran the attack at port
    80, we were detected.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们讨论了逃避检测的话题，结束了这一章节。我们解释说，在专业测试范围内很少会被要求进行逃避检测，但也有可能会被要求。正如本章所讨论的，这方面并没有保证，因为我们的成功取决于设备管理员的配置。话虽如此，当我们使用包含加密数据的端口时，成功率最高。此外，我们在未被发现的情况下扫描了网络安全工具包虚拟机的443端口，但当我们在80端口运行攻击时被发现了。
- en: This concludes the chapter. You have now deployed IDS/IPS into your range environment
    and you have seen methods to evade detection. In the next chapter, we will look
    at adding web servers and web applications to our range architecture.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了本章。您现在已经在您的范围环境中部署了IDS/IPS，并且已经了解了规避检测的方法。在下一章中，我们将研究如何将Web服务器和Web应用程序添加到我们的范围架构中。
