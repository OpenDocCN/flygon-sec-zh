["```py\nlst1=[\n[10.0.2.15,tcp,22,ssh,open,OpenSSH,protocol 2.0,syn-ack,OpenSSH-7.2p2 Debian 5,10,cpe:/o:linux:linux_kernel],                                                                    [10.0.2.15,tcp,80,http,open,nginx,,syn-ack,nginx-1.10.2,10,cpe:/a:igor_sysoev:nginx:1.10.2],\n  [10.0.2.15,tcp,111,rpcbind,open,,RPC #100000,syn-ack,-2-4,10,],\n  [10.0.2.15,tcp,443,https,open,nginx,,syn-ack,nginx-1.10.2,10,cpe:/a:igor_sysoev:nginx:1.10.2],\n  [10.0.2.15,tcp,8000,http,open,nginx,,syn-ack,nginx-1.10.2,10,cpe:/a:igor_sysoev:nginx:1.10.2],\n  [10.0.2.15,tcp,8002,rtsp,open,,,syn-ack,-,10,]\n]\n```", "```py\nlst = {\n\"ssh\":[[10.0.2.15,22,open,OpenSSH-7.2p2 Debian 5;10]],\n\"http\":[[10.0.2.15,80,open,nginx-1.10.2],[10.0.2.15,8000,open,nginx-1.10.2]],\n\"rcpbind\":[[10.0.2.15,111,open,-2-4,10]],\n\"https\":[[10.0.2.15,443,open,nginx-1.10.2]],\n\"rtsp\":[[10.0.2.15,8002,open,-]]\n}\n```", "```py\nself.processed_services= {\n\"ssh\":[[10.0.2.15,22,open,OpenSSH-7.2p2 Debian 5;10]],\n\"http\":[[10.0.2.15,80,open,nginx-1.10.2],[10.0.2.15,8000,open,nginx-1.10.2]],\n\"rcpbind\":[[10.0.2.15,111,open,-2-4,10]],\n\"https\":[[10.0.2.15,443,open,nginx-1.10.2]],\n}\nself.missed_services ={\n\"rtsp\":[[10.0.2.15,8002,open,-]]\n}\n```", "```py\nentries= {\"Entries\": {\"http_5\": [true, \"0\", \"0\"], \"http_trace_1\": [true, \"0\", \"0\"], \"http_trace_2\": [true, \"0\", \"0\"], \"http_trace_3\": [true, \"0\", \"0\"], \"http_banner_1\": [true, \"0\", \"0\"], \"http_banner_2\": [true, \"0\", \"0\"], \"http_robots_1\": [true, \"0\", \"0\"], \"http_robots_2\": [true, \"0\", \"0\"], \"http_headers_1\": [true, \"0\", \"0\"], \"http_headers_2\": [true, \"0\", \"0\"], \"http_methods_1\": [true, \"0\", \"0\"], \"http_methods_2\": [true, \"0\", \"0\"], \"http_web_dev_1\": [true, \"0\", \"0\"], \"http_web_dev_2\": [true, \"0\", \"0\"]}}\n```", "```py\nchild = pexpect.spawn('/usr/bin/ftp')\nchild = pexpect.spawn('/usr/bin/ssh user@example.com')\n```", "```py\nchild = pexpect.spawn('/usr/bin/ftp', [])\nchild = pexpect.spawn('/usr/bin/ssh', ['user@example.com'])\n```", "```py\n# the input is 'foobar'\nindex = p.expect(['bar', 'foo', 'foobar'])\n# returns 1('foo') even though 'foobar' is a \"better\" match\n```", "```py\nchild = pexpect.spawn('scp foo user@example.com:.')\nchild.expect('Password:')\nchild.sendline(mypassword)\n```", "```py\nchild = pexpect.spawn(ssh root@192.168.250.143)\ni=child.expect(['.*Permission denied.*', 'root@.* password:.*','.* Connection refused','.*(yes/no).*',pexpect.TIMEOUT,'[#\\$]',pexpect.EOF],timeout=15)\nif(i==1):\n       child.sendline('root')\n       j=child.expect(['root@.* password:.*', '[#\\$] ','Permission denied'],timeout=15)\n       if(j==1):   \n           self.print_Log( \"Login Successful with password root\")\n       else:\n           self.print_Log(\"No login with pw root\")\n```", "```py\nstart_sniffing()\n```"]