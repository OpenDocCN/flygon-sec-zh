- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: Chapter 1, Introduction to Python
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章，Python简介
- en: Yes, Python is an open source language in the truest sense. The difference between
    Python and other open source languages is we can literally see the source code
    of every Python module and even modify it on the fly.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，Python在最真实的意义上是一种开源语言。Python与其他开源语言的区别在于，我们可以看到每个Python模块的源代码，甚至可以在运行时修改它。
- en: The Python programming language is managed by the Python Software Foundation
    whose objective is to promote, protect, and advance the Python programming language.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python编程语言由Python软件基金会管理，其目标是推广、保护和推进Python编程语言。
- en: No, Java is a faster language.
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，Java是一种更快的语言。
- en: Python is an object-oriented language.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python是一种面向对象的语言。
- en: Yes, Python is very easy to learn because of its simplicity.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，Python非常容易学习，因为它很简单。
- en: Python plays amazingly well in the cyber security space. Most  offensive and
    defensive tools are written in Python. Most exploits are written in Python. Most
    of the fuzzes are written in Python. Python is a wonderful asset to have in your
    arsenal, if you are working in the cyber security space.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python在网络安全领域表现出色。大多数攻击性和防御性工具都是用Python编写的。大多数漏洞利用都是用Python编写的。大多数模糊测试都是用Python编写的。如果您在网络安全领域工作，Python是一个很好的资产。
- en: Times and technologies are changing and rapidly evolving. Right now, ML and
    AI are new, but 10 years down the line many offensive security tools may be revamped
    and will work with AI and ML capabilities. It does no harm to start early.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 时代和技术正在变化和迅速发展。现在，ML和AI是新的，但10年后，许多攻击性安全工具可能会进行改进，并且将具有AI和ML功能。提前开始并不会有害。
- en: Chapter 2, Building Python Scripts
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章，构建Python脚本
- en: The Python generator can be used against all real-world problems when you deal
    with streams of data – possibly infinite. For example dealing with real time streaming.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python生成器可以用于处理所有实际问题，当您处理数据流时，可能是无限的。例如处理实时流。
- en: Yes, we can do that. Try that, it's very handy.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，我们可以这样做。试试看，这非常方便。
- en: Yes, we can try that as well.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，我们也可以尝试。
- en: Chapter 3, Concept Handling
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章，概念处理
- en: Using it as an object-oriented language makes it very reusable. Any security
    tool written in Python follows object-oriented pattern. Nmap library, Scapy, Selenium,
    and so on are all written as object-oriented utilities.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其用作面向对象的语言使其非常可重用。用Python编写的任何安全工具都遵循面向对象的模式。Nmap库、Scapy、Selenium等都是以面向对象的方式编写的实用程序。
- en: XML can be parsed with LXML or the Etree module whereas CSV can be parsed with
    CSV, pandas module.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: XML可以使用LXML或Etree模块进行解析，而CSV可以使用CSV、pandas模块进行解析。
- en: Yes, we can try that. I leave that as a small task.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，我们可以尝试。我把它作为一个小任务留下。
- en: A method decorator is a signature that binds a method with some unique capability.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 方法装饰器是将方法与某些独特功能绑定的标志。
- en: Chapter 4, Advanced Python Modules
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章，高级Python模块
- en: We can make use of a Python library called `billiard`. It's very powerful.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用一个名为`billiard`的Python库。它非常强大。
- en: We may want to use threads, where we don't wish to have parallel execution,
    but we would want to control execution of a method. For example, if we wanted
    a method X to be executed for 10 seconds and terminate after that, we can invoke
    it with a thread and call join for 10 seconds.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可能希望使用线程，当我们不希望并行执行时，但我们希望控制方法的执行。例如，如果我们希望方法X在10秒内执行并在此后终止，我们可以使用线程调用join来执行10秒。
- en: Chapter 5, Vulnerability Scanner Python - Part 1
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章，漏洞扫描器Python-第1部分
- en: We are doing so to have control over the methods. We usually want a method X
    to be executed for N seconds and be terminated after that. The same thing can
    be better achieved with a combination of threads and multiprocessing.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们这样做是为了控制方法。我们通常希望方法X在N秒内执行并在此后终止。使用线程和多进程的组合可以更好地实现相同的功能。
- en: We can make use of the `multiprocess.pool` library to see whether we get better
    results and, furthermore, increasing the processor cores is always a good option.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以利用`multiprocess.pool`库来查看是否可以获得更好的结果，此外，增加处理器核心始终是一个不错的选择。
- en: 'Yes, there is another Python-Nmap utility, called `libnmap`: [https://libnmap.readthedocs.io/en/latest/process.html](https://libnmap.readthedocs.io/en/latest/process.html).'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，还有另一个Python-Nmap实用程序，称为`libnmap`：[https://libnmap.readthedocs.io/en/latest/process.html](https://libnmap.readthedocs.io/en/latest/process.html)。
- en: Yes, we can. Please explore more on this.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，我们可以。请在这方面进行更多探索。
- en: Chapter 6, Vulnerability Scanner Python - Part 2
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章，漏洞扫描器Python-第2部分
- en: Msfrpc. Although it is a great utility, I personally encountered issues with
    it when I invoked it concurrently over multiple sessions.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Msfrpc。虽然它是一个很好的实用工具，但我个人在同时在多个会话中调用它时遇到了问题。
- en: Give a try to the `Multiprocess.pool` module and increase processor cores.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试使用`Multiprocess.pool`模块并增加处理器核心。
- en: Yes, and of course we can.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，当然我们可以。
- en: Yes, the scanner is very scalable and flexible. Any CLI or web tool can integrate
    with it.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，扫描器非常可扩展和灵活。任何CLI或Web工具都可以与其集成。
- en: Chapter 7, Machine Learning and Cybersecurity
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章，机器学习和网络安全
- en: We can take a look at ExploitDB and see various associated vulnerabilities.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以查看ExploitDB并查看各种相关漏洞。
- en: Big-data infrastructure can be defined as the deployment of multiple computers
    to form a cluster that takes a file and processes it with parallel processing.
    Apache Hadoop is affected with multiple vulnerabilities and the same can be checked
    on ExploitDB.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 大数据基础设施可以定义为部署多台计算机以形成一个集群，使用并行处理处理文件。Apache Hadoop受到多个漏洞的影响，可以在ExploitDB上进行检查。
- en: AI mimics the human brain and works as neurons do, whereas machine learning
    doesn't.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AI模仿人脑并像神经元一样工作，而机器学习则不是。
- en: Deep Exploit is one of the tools in offensive security community that uses ML,
    it makes best use  both PT and ML domains.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Deep Exploit是攻击性安全社区中使用ML的工具之一，它充分利用了PT和ML领域。
- en: Chapter 8, Automating Web Application Scanning - Part 1
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章，自动化Web应用程序扫描-第1部分
- en: We can write Burp Suite extensions in Jyton.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以用Jyton编写Burp Suite扩展。
- en: Try automating SQL-MAP Cli with simple terminal automation.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试使用简单的终端自动化来自动化SQL-MAP Cli。
- en: Automated web application scanning surely offers time saving, but there is a
    trade-off with quality. Additionally, for business logic check, no automation
    can help.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动化的Web应用程序扫描确实节省时间，但质量方面存在一些折衷。此外，对于业务逻辑检查，没有任何自动化可以帮助。
- en: Chapter 9, Automating Web Application Scanning - Part 2
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章，自动化Web应用程序扫描-第2部分
- en: We can automate XSS detection, SSL strip, parameter pollution, and much more.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以自动化XSS检测，SSL剥离，参数污染等等。
- en: We can integrate Burp Suite API and our custom scanner or can use Burpsuite
    API with Nessus API.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以集成Burp Suite API和我们的自定义扫描程序，或者可以使用Burpsuite API与Nessus API。
- en: Chapter 10, Building a Custom Crawler
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章，构建自定义爬虫
- en: Simulated crawling with Phantoms, Selenium would be of great help to achieve
    the JavaScript and Ajax calls
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Phantoms，Selenium进行模拟爬行将对实现JavaScript和Ajax调用非常有帮助
- en: We can tale the injection points as the result and start fuzzing them using
    SQL, XSS, and other payloads.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以将注入点作为结果，并开始使用SQL，XSS和其他有效负载对它们进行模糊处理。
- en: Chapter 11, Reverse Engineering Linux Applications
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章，逆向工程Linux应用程序
- en: We can explore in the direction of terminal automation, and try to automate/control
    the execution of evans debugger, as we did with Metasploit automation using `pexpect`.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以探索终端自动化的方向，并尝试自动化/控制evans调试器的执行，就像我们使用`pexpect`自动化Metasploit一样。
- en: We should explore more on how to evade ASRL protection.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们应该更多地探索如何规避ASRL保护。
- en: 'This would be a good place to start : [https://sploitfun.wordpress.com/2015/05/08/bypassing-aslr-part-i](https://sploitfun.wordpress.com/2015/05/08/bypassing-aslr-part-i/).'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将是一个很好的开始地方：[https://sploitfun.wordpress.com/2015/05/08/bypassing-aslr-part-i](https://sploitfun.wordpress.com/2015/05/08/bypassing-aslr-part-i/)。
- en: Chapter 12, Reverse Engineering Windows Applications
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章，逆向工程Windows应用程序
- en: Again, Terminal automation is the answer. Additionally, Olly debugger comes
    with a Windows API that can be used to achieve automation.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次，终端自动化是答案。此外，Olly调试器带有一个可以用来实现自动化的Windows API。
- en: 'This is one of the good places to start: [https://bytesoverbombs.io/bypassing-dep-with-rop-32-bit-39884e8a2c4a](https://bytesoverbombs.io/bypassing-dep-with-rop-32-bit-39884e8a2c4a).'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个很好的开始地方：[https://bytesoverbombs.io/bypassing-dep-with-rop-32-bit-39884e8a2c4a](https://bytesoverbombs.io/bypassing-dep-with-rop-32-bit-39884e8a2c4a)。
- en: This is primarily due to different stack and OS kernel implementations.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这主要是由于不同的堆栈和操作系统内核实现。
- en: Chapter 13, Exploit Development
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章，利用开发
- en: SQLI, XSS, and CSRF can all be exploited with the approach described.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SQLI，XSS和CSRF都可以利用所描述的方法。
- en: We can make it as generic as possible, and try it against multiple applications
    to see its effectiveness.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以尽可能地使其通用，并尝试针对多个应用程序进行测试其有效性。
- en: Chapter 14, Cyber Threat Intelligence
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章，网络威胁情报
- en: One way would be to add more context to IOCs by interfacing with external websites
    such as virus-total and Cymon. To have better performance, we can think of increasing
    the processor cores.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一种方法是通过与virus-total和Cymon等外部网站进行接口，为IOCs添加更多上下文。为了获得更好的性能，我们可以考虑增加处理器核心。
- en: Yes, we can leverage celery and it would serve very well to execute scheduled
    jobs.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，我们可以利用celery，它可以很好地执行定时作业。
- en: Chapter 15, Other Wonders of Python
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章，Python的其他奇迹
- en: Yes, we can. We can use Python's `smtp` module to achieve the same.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，我们可以。我们可以使用Python的`smtp`模块来实现相同的功能。
- en: One way can be to use email as the delivery method. Additionally, we must also
    send the window information where the key is pressed, to have a complete context.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一种方法是使用电子邮件作为交付方式。此外，我们还必须发送按键的窗口信息，以获得完整的上下文。
- en: Making use of a custom generic algorithm that generates cryptic Python code
    can be a good approach to improve the shell code.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 利用生成隐晦Python代码的自定义通用算法可能是改进shell代码的一个很好的方法。
