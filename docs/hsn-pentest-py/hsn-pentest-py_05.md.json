["```py\nNmap=NmapPy([\"Nmap\",\"-Pn\",\"-sV\",\"-oX\",\"-\",\"127.0.0.1\"])\nNmap.scan()\n```", "```py\npip install Nmap\n```", "```py\nimport Nmap # import Nmap.py module\n Nmap_obj = Nmap.PortScanner() # instantiate Nmap.PortScanner object\n Nmap_obj.scan('192.168.0.143', '1-1024') # scan host 192.1680.143, ports from 1-1024\n Nmap_obj.command_line() # get command line used for the scan : Nmap -oX - -p 1-1024 192.1680.143\n Nmap_obj.scaninfo() # get Nmap scan informations {'tcp': {'services': '1-1024', 'method': 'connect'}}\n Nmap_obj.all_hosts() # get all hosts that were scanned\n Nmap_obj['192.1680.143'].hostname() # get one hostname for host 192.1680.143, usualy the user record\n Nmap_obj['192.1680.143'].hostnames() # get list of hostnames for host 192.1680.143 as a list of dict\n # [{'name':'hostname1', 'type':'PTR'}, {'name':'hostname2', 'type':'user'}]\n Nmap_obj['192.1680.143'].hostname() # get hostname for host 192.1680.143\n Nmap_obj['192.1680.143'].state() # get state of host 192.1680.143 (up|down|unknown|skipped)\n Nmap_obj['192.1680.143'].all_protocols() # get all scanned protocols ['tcp', 'udp'] in (ip|tcp|udp|sctp)\n Nmap_obj['192.1680.143']['tcp'].keys() # get all ports for tcp protocol\n Nmap_obj['192.1680.143'].all_tcp() # get all ports for tcp protocol (sorted version)\n Nmap_obj['192.1680.143'].all_udp() # get all ports for udp protocol (sorted version)\n Nmap_obj['192.1680.143'].all_ip() # get all ports for ip protocol (sorted version)\n Nmap_obj['192.1680.143'].all_sctp() # get all ports for sctp protocol (sorted version)\n Nmap_obj['192.1680.143'].has_tcp(22) # is there any information for port 22/tcp on host 192.1680.143\n Nmap_obj['192.1680.143']['tcp'][22] # get infos about port 22 in tcp on host 192.1680.143\n Nmap_obj['192.1680.143'].tcp(22) # get infos about port 22 in tcp on host 192.1680.143\n Nmap_obj['192.1680.143']['tcp'][22]['state'] # get state of port 22/tcp on host 192.1680.143\n```"]