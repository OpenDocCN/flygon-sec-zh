- en: Machine Learning in Anomaly Detection Systems
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 异常检测系统中的机器学习
- en: Unauthorized activity on a network can be a nightmare for any business. Protecting
    customers' data is the ultimate concern, and is the responsibility of every business
    owner. Deploying intrusion detection systems is a wise decision modern organizations
    can make to defend against malicious intrusions. Unfortunately, attackers and
    black hat hackers are always inventing new techniques to bypass protection, in
    order to gain unauthorized access to networks. That is why machine learning techniques
    are a good solution to protect networks from even sophisticated and  attacks.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何企业来说，网络上的未经授权活动可能是一场噩梦。保护客户数据是最重要的问题，也是每个企业所有者的责任。部署入侵检测系统是现代组织可以采取的明智决定，以防御恶意入侵。不幸的是，攻击者和黑客总是在想出新的技术来绕过保护，以获取对网络的未经授权访问。这就是为什么机器学习技术是保护网络免受甚至复杂和攻击的良好解决方案。
- en: This chapter will be a one-stop guide for discovering network anomalies and
    learning how to build intrusion detection systems from scratch, using publicly
    available datasets and cutting-edge, open source Python data science libraries.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将是发现网络异常并学习如何从头开始构建入侵检测系统的一站式指南，使用公开可用的数据集和尖端的开源Python数据科学库。
- en: 'In this chapter, we will cover the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: An overview of anomaly detection techniques
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常检测技术概述
- en: Network attacks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络攻击
- en: Detecting network anomalies
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测网络异常
- en: '**Host-based intrusion detection systems** (**HIDS**)'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于主机的入侵检测系统**（**HIDS**）'
- en: '**Network-based intrusion detection systems** (**NIDS**)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于网络的入侵检测系统**（**NIDS**）'
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'These are the requirements needed in this chapter:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要以下要求：
- en: A working knowledge of networking is required for this chapter.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章需要对网络有一定的了解。
- en: We are going to use the same Python libraries that we saw in earlier chapters,
    with the addition of a new library, called **Yellowbrick**. (You will find the
    installation instructions in this chapter.)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将使用在之前章节中看到的相同的Python库，还有一个名为**Yellowbrick**的新库。（你将在本章中找到安装说明。）
- en: You can find the code files used in this chapter in the GitHub repository at [https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter06](https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter06).
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以在GitHub存储库中找到本章中使用的代码文件[https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter06](https://github.com/PacktPublishing/Mastering-Machine-Learning-for-Penetration-Testing/tree/master/Chapter06)。
- en: An overview of anomaly detection techniques
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 异常检测技术概述
- en: 'We will now discuss network anomalies (which are our prime concern) and their
    detection methods. By definition, an anomaly is something outside of the norm,
    an unexpected pattern in data. The term anomaly is used widely in data mining,
    and is sometimes called an outlier. Anomaly detection techniques are often used
    for fraud detection and to find malicious activities. In networking, anomalies
    can occur for many reasons, but what is important to us, in this case, is malicious
    activity detection. Generally, we see three types of anomalies:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将讨论网络异常（这是我们主要关注的内容）及其检测方法。根据定义，异常是指数据中的异常模式，即超出正常范围的意外模式。异常这个术语在数据挖掘中被广泛使用，有时被称为异常值。异常检测技术通常用于欺诈检测和发现恶意活动。在网络中，异常可能由于许多原因而发生，但对我们来说，重要的是恶意活动的检测。通常，我们看到三种类型的异常：
- en: '**Point anomalies**: Anomalous individual data instances, compared to the rest
    of the data.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**点异常**：与其余数据相比，异常的个别数据实例。'
- en: '**Contextual anomalies**: Anomalous behaviors that occur only during specific
    contexts (periods of time, regions, and so on).'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**上下文异常**：仅在特定上下文（时间段、地区等）中发生的异常行为。'
- en: '**Collective anomalies**: A collection of anomalous activities, compared to
    the rest of the data.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集体异常**：与其余数据相比，一系列异常活动。'
- en: These anomalies can be detected using many techniques, based on the data that
    is available.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些异常可以使用许多技术来检测，这些技术基于可用的数据。
- en: Static rules technique
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 静态规则技术
- en: If we have training data, then we need to check that the data is balanced. If
    we don't have training data, the decision will be made based on the anomaly type;
    to detect point anomalies, it is recommended that you use percentiles and histograms.
    To detect collective anomalies, the decision will be based on the variance of
    the anomalies; to detect univariate anomalies, you can use Markov chains, or you
    can build a model and look at the residue. In a multivariate situation, we can
    use clustering and Markov models (if the anomalies are ordered) or k-Nearest-Neighbors
    (if the anomalies are unordered).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有训练数据，那么我们需要检查数据是否平衡。如果没有训练数据，决策将基于异常类型进行；要检测点异常，建议使用百分位数和直方图。要检测集体异常，决策将基于异常的方差；要检测单变量异常，可以使用马尔可夫链，或者可以构建模型并查看残差。在多变量情况下，我们可以使用聚类和马尔可夫模型（如果异常是有序的），或者k-最近邻（如果异常是无序的）。
- en: 'The different techniques are represented in the following diagram:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的技术在下图中表示：
- en: '![](img/00130.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00130.jpeg)'
- en: Network attacks taxonomy
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络攻击分类
- en: 'When it comes to network anomalies, our job is protecting the organization''s
    network from intruders. A network intrusion is a malicious activity that threatens
    the security of the network. Information security professionals have suggested
    many categorizations to classify network attacks for better study. For example,
    they have classified network attacks into the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络异常方面，我们的工作是保护组织的网络免受入侵者的侵害。网络入侵是威胁网络安全的恶意活动。信息安全专业人员已经提出了许多分类来对网络攻击进行更好的研究。例如，他们已经将网络攻击分类为以下几类：
- en: Infection (malware)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 感染（恶意软件）
- en: Exploding (buffer overflow)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 爆炸（缓冲区溢出）
- en: Probing (sniffing)
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探测（嗅探）
- en: Cheating (spoofing)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作弊（欺骗）
- en: Traverse (brute-forcing)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遍历（暴力破解）
- en: Concurrency (DDoS)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并发（DDoS）
- en: 'Attacks can also be categorized into passive and active attacks. An active
    attack is when the attacker has a direct effect on the network. The **Defense
    Advanced Research Projects Agency** (**DARPA**) has classified active attacks
    into four major categories, in its intrusion detection evaluation plan. The four
    categories are as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 攻击也可以分为被动和主动攻击。主动攻击是指攻击者对网络产生直接影响。国防高级研究计划局（DARPA）在其入侵检测评估计划中将主动攻击分为四大类。这四类如下：
- en: '**Denial of Service (DoS)**: DoS attacks are attempts to interrupt an authorized
    user''s access to the network. In other words, they block users from access to
    online services, like email.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**拒绝服务（DoS）**：DoS攻击是试图中断授权用户对网络的访问的尝试。换句话说，它们阻止用户访问在线服务，如电子邮件。'
- en: '**User to Root (U2R) attacks**: U2R attacks are hard to detect; they attempt
    to gain high (superuser) privileges. This is achieved by accessing systems as
    normal users and trying to exploit the system''s weaknesses later on, to escalate
    the privileges.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户到根（U2R）攻击**：U2R攻击很难检测；它们试图获得高（超级用户）权限。这是通过以普通用户的身份访问系统，并尝试后来利用系统的弱点来提升权限来实现的。'
- en: '**Remote to Local (R2L)**: An R2L attack is an attempt to interact with remote
    machines to gain access. One technique that is used is password guessing.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**远程到本地（R2L）**：R2L攻击是尝试与远程机器交互以获取访问权限。使用的一种技术是猜测密码。'
- en: '**Probe**: A probe is an attempt to gain information about the hosts in the
    network, including valid IP addresses, running services, and open ports. It is
    usually done by scanning. As you know, the information gathered will later be
    used to identify vulnerabilities in order to exploit them.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**探测**：探测是获取有关网络中主机的信息的尝试，包括有效的IP地址、运行的服务和开放的端口。通常是通过扫描完成的。如您所知，收集的信息将稍后用于识别漏洞以利用它们。'
- en: The detection of network anomalies
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络异常的检测
- en: 'Network **intrusion detection systems** (**IDSs**) are not a new idea. They
    have been proposed since the earliest network attacks. IDS can be categorized
    into two major categories, based on their deployment: HIDS and NIDS. The following
    diagram illustrates a high-level overview of an IDS architecture:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 网络入侵检测系统（IDSs）并不是一个新的想法。自最早的网络攻击以来就提出了IDS。IDS可以根据其部署分为两大类：HIDS和NIDS。以下图表说明了IDS架构的高级概述：
- en: '![](img/00131.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00131.jpeg)'
- en: HIDS
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HIDS
- en: HIDS are able to collect and monitor computer systems (especially their internals)
    in order to give security analysts a deep visibility into what's happening on
    critical systems, such as workstations, servers, and mobile devices. The main
    goal of an HIDS is to detect intrusions.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: HIDS能够收集和监视计算机系统（特别是它们的内部），以便为安全分析人员提供对关键系统（如工作站、服务器和移动设备）发生的情况的深入可见性。HIDS的主要目标是检测入侵。
- en: NIDS
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NIDS
- en: NIDS are responsible for detecting intrusions in network data. Basically, the
    detection is made based on specific patterns in sequential data. In other words,
    NIDSs read all of the incoming packets and try to find anomalies in them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: NIDS负责检测网络数据中的入侵。基本上，检测是基于顺序数据中的特定模式进行的。换句话说，NIDS读取所有传入的数据包，并尝试在其中找到异常。
- en: Anomaly-based IDS
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于异常的IDS
- en: 'When it comes to IDS, we are generally talking about two categories: host-based
    and network-based. But a new class of IDS has also arisen. The new category is
    anomaly-based. These systems work by using machine learning techniques to identify
    intrusions and anomalies in data. In the previous chapters, especially in [Chapter
    1](part0021.html#K0RQ0-49a67f1d6e7843d3b2296f38e3fe05f5), *Introduction to Machine
    Learning in Pen Testing*, we looked at the different models of machine learning:
    supervised, unsupervised, semi-supervised, and reinforcement learning. Anomaly-based
    IDS are also categorized into supervised and unsupervised systems, depending on
    the machine learning model used to detect the network intrusion. The information
    security community, after many years of research, has succeeded in providing a
    classification of the different methods used in IDS. One of the proposals, called
    *Shallow and Deep Networks Intrusion Detection System: A Taxonomy and Survey,* delivered
    by Elike Hodo, Xavier J. A. Bellekens, Andrew Hamilton, Christos Tachtatzis, and
    Robert C. Atkinson, gives a detailed overview of many machine learning techniques
    for reliable intrusion detection. Some of the techniques are presented in the
    following diagram:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在谈到IDS时，我们通常谈论两类：基于主机和基于网络的。但也出现了一种新的IDS类别。新类别是基于异常的。这些系统通过使用机器学习技术来识别数据中的入侵和异常。在以前的章节中，特别是在[第1章](part0021.html#K0RQ0-49a67f1d6e7843d3b2296f38e3fe05f5)，*渗透测试中的机器学习简介*中，我们看到了不同的机器学习模型：受监督的、无监督的、半监督的和强化学习。基于异常的IDS也根据用于检测网络入侵的机器学习模型被分类为受监督和无监督系统。信息安全社区经过多年的研究，已成功提供了IDS中使用的不同方法的分类。其中一项提议，名为*浅层和深层网络入侵检测系统：分类和调查*，由Elike
    Hodo、Xavier J. A. Bellekens、Andrew Hamilton、Christos Tachtatzis和Robert C. Atkinson提出，对可靠入侵检测的许多机器学习技术进行了详细概述。以下图表中呈现了一些技术：
- en: '![](img/00132.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00132.jpeg)'
- en: As you can see, we discussed many of the suggested techniques in previous chapters.
    Generally, in supervised anomaly detection, the input data and the anomaly classes
    are known. In other words, all of the data is labeled; even collecting labeled
    data is an exhausting and time-consuming task. The data that is captured will
    be processed before being sent to the detection engine. Unsupervised anomaly detection systems
    could be  novel solutions while they are working even if the data is not labeled.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，我们在前几章讨论了许多建议的技术。通常，在受监督的异常检测中，输入数据和异常类是已知的。换句话说，所有数据都是标记的；即使收集标记的数据也是一项繁重和耗时的任务。捕获的数据将在发送到检测引擎之前进行处理。无监督的异常检测系统可能是新颖的解决方案，即使数据没有标记也可以工作。
- en: 'Clustering is one of the most common techniques used in unsupervised systems.
    The two different systems can be combined into one hybrid intrusion detection
    system. An overall hybrid anomaly intrusion detection system is shown here:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 聚类是无监督系统中最常用的技术之一。这两种不同的系统可以合并成一个混合入侵检测系统。下面显示了一个总体混合异常入侵检测系统：
- en: '![](img/00133.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00133.jpeg)'
- en: 'If you want to build a successful and reliable anomaly-based network intrusion
    detection system, you need to consider many important factors. One of these factors
    is proximity measure; by definition, proximity means a measurement of the similarity,
    or dissimilarity, of objects. Thus, as discussed previously, these systems are
    trying to classify or cluster data into groups and so respectively measuring the
    proximity of objects to one another. Similarity measures take values between `0`
    and `1`, where `1` is the greatest similarity value. Euclidean distance and Manhattan
    distance are some common proximity measures. The selection of a suitable measure
    depends on the type of data (numeric or categorical). The anomalies are not detected
    arbitrarily, but are based on a scoring system. Sub-samples are marked by intrusion
    scores called **anomaly scores**. This scoring system is very beneficial to information
    security analysts; based on an ordered and ranked list of anomalies, they can
    select a threshold to work by, according to the severity. The following are some
    common anomaly scoring techniques used by anomaly network intrusion detection
    systems:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要构建一个成功和可靠的基于异常的网络入侵检测系统，您需要考虑许多重要因素。其中之一是接近度测量；根据定义，接近度意味着对对象的相似性或不相似性进行测量。因此，正如之前讨论的那样，这些系统试图将数据分类或分组，因此相应地测量对象之间的接近度。相似性度量的取值范围在`0`和`1`之间，其中`1`是最大的相似性值。欧几里得距离和曼哈顿距离是一些常见的接近度测量。合适的测量方法的选择取决于数据的类型（数值或分类）。异常不是任意检测的，而是基于评分系统。子样本由称为**异常分数**的入侵分数标记。这种评分系统对信息安全分析人员非常有益；基于有序和排名的异常列表，他们可以选择根据严重性来工作的阈值。以下是异常网络入侵检测系统使用的一些常见异常评分技术：
- en: '**Distance-based anomaly score estimation**:'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于距离的异常分数估计**：'
- en: '**Link-based outlier and anomaly detection in evolving datasets**: The dataset
    contains both continuous and categorical attributes. It uses a similarity metric
    to measure the link strength and the degree of association between two points.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**演变数据集中基于链接的离群值和异常检测**：数据集包含连续和分类属性。它使用相似性度量来衡量链接强度和两个点之间的关联程度。'
- en: '**Reduced memory load**: This defines an anomaly as a data point that has subset
    attributes that take on unusual values.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 减少内存负载：这将异常定义为具有子集属性的数据点，这些属性具有不寻常的值。
- en: '**Density-based anomaly score estimation**:'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基于密度的异常分数估计**：'
- en: '**Outlier detection for mixed attribute datasets**: This detects anomalies
    by computing the irregularity of values and the relationships between different
    types of attributes.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**混合属性数据集的离群检测**：通过计算值的不规则性和不同类型属性之间的关系来检测异常。'
- en: Building your own IDS
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建您自己的IDS
- en: By now, you know the different network anomaly detection techniques. We are
    now going to build our own network IDS with Python, from scratch. The University
    of California hosted a competition called *The Third International Knowledge Discovery
    and Data Mining Tools Competition*, and they provided a dataset called **KDD Cup
    1999 Data,** or **KDD 1990**. You can find it at [http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html](http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经了解了不同的网络异常检测技术。现在我们将使用Python从头开始构建我们自己的网络IDS。加利福尼亚大学举办了一场名为《第三届国际知识发现和数据挖掘工具竞赛》的比赛，他们提供了一个名为**KDD
    Cup 1999 Data**或**KDD 1990**的数据集。您可以在[http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html](http://kdd.ics.uci.edu/databases/kddcup99/kddcup99.html)找到它。
- en: The main aim of the competition was building a system that was able to distinguish
    between bad (attack) and good (normal) connections. Many modern proposals and
    machine learning solutions were made using the dataset. But as you can see, the
    dataset is old; the models were not able to detect modern network attacks, in
    addition to other issues, like data redundancy. A great study called *A Detailed
    Analysis of the KDD CUP 99 Data Set,* done by Mahbod Tavallaee, Ebrahim Bagheri,
    Wei Lu, and Ali A. Ghorbani, highlighted many issues in the KDD99 dataset. A new
    dataset arose to solve the issues, named NSL-KDD ([http://www.unb.ca/cic/datasets/nsl.html](http://www.unb.ca/cic/datasets/nsl.html)).
    Even that didn't solve all of the issues, but many improvements were made. The
    improvements reduced the data by about 75%.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 比赛的主要目的是构建一个能够区分恶意（攻击）和良好（正常）连接的系统。许多现代提案和机器学习解决方案都使用了数据集。但是正如你所看到的，数据集已经过时；这些模型无法检测到现代网络攻击，除了其他问题，如数据冗余。一项名为《KDD
    CUP 99数据集的详细分析》的研究，由Mahbod Tavallaee、Ebrahim Bagheri、Wei Lu和Ali A. Ghorbani完成，突出了KDD99数据集中的许多问题。出现了一个新的数据集来解决这些问题，名为NSL-KDD（[http://www.unb.ca/cic/datasets/nsl.html](http://www.unb.ca/cic/datasets/nsl.html)）。即使这也没有解决所有问题，但是进行了许多改进。这些改进减少了大约75%的数据。
- en: 'These are some additional, publicly available datasets that can help you to
    build your own intrusion detection systems:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些额外的公开可用数据集，可以帮助您构建自己的入侵检测系统：
- en: '**Coburg Intrusion Detection Data Sets** (**CIDDS**): [https://www.hs-coburg.de/index.php?id=927](https://www.hs-coburg.de/index.php?id=927)'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**科堡入侵检测数据集**（**CIDDS**）：[https://www.hs-coburg.de/index.php?id=927](https://www.hs-coburg.de/index.php?id=927)'
- en: '**UGR''16, A New Dataset for the Evaluation of Cyclostationarity-Based Network
    IDSs**: [https://nesg.ugr.es/nesg-ugr16/index.php#CAL](https://nesg.ugr.es/nesg-ugr16/index.php#CAL)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UGR''16，用于周期站点网络IDS评估的新数据集**：[https://nesg.ugr.es/nesg-ugr16/index.php#CAL](https://nesg.ugr.es/nesg-ugr16/index.php#CAL)'
- en: '**Intrusion Detection Evaluation Dataset (CICIDS2017)**: [http://www.unb.ca/cic/datasets/ids-2017.html](http://www.unb.ca/cic/datasets/ids-2017.html)'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**入侵检测评估数据集（CICIDS2017）**：[http://www.unb.ca/cic/datasets/ids-2017.html](http://www.unb.ca/cic/datasets/ids-2017.html)'
- en: 'For our model, we are going to use the **NSL_KDD **as a dataset for training
    and testing. To get it, just clone it from GitHub, or simply use it directly,
    since we are providing all of the datasets discussed in this book in the book''s
    GitHub repository. You can find it in the `Chapter 06` folder:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的模型，我们将使用**NSL_KDD**作为训练和测试的数据集。要获得它，只需从GitHub克隆它，或者直接使用它，因为我们在书的GitHub存储库中提供了本书中讨论的所有数据集。你可以在`Chapter
    06`文件夹中找到它：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/00134.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00134.jpeg)'
- en: 'The dataset contains different files:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集包含不同的文件：
- en: '`KDDTrain+.arff`: The full NSL-KDD training set, with binary labels in ARFF
    format.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTrain+.arff`：带有二进制标签的完整NSL-KDD训练集，以ARFF格式。'
- en: '`KDDTrain+.txt`: The full NSL-KDD training set, including attack-type labels
    and difficulty levels in CSV format.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTrain+.txt`：包含攻击类型标签和CSV格式的完整NSL-KDD训练集。'
- en: '`KDDTrain+_20Percent.ARFF`: A 20% subset of the `KDDTrain+.arff` file.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTrain+_20Percent.ARFF`：`KDDTrain+.arff`文件的20%子集。'
- en: '`KDDTrain+_20Percent.TXT`: A 20% subset of the `KDDTrain+.txt` file.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTrain+_20Percent.TXT`：`KDDTrain+.txt`文件的20%子集。'
- en: '`KDDTest+.ARFF`: The full NSL-KDD test set, with binary labels in ARFF format.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTest+.ARFF`：带有二进制标签的完整NSL-KDD测试集，以ARFF格式。'
- en: '`KDDTest+.TXT`: The full NSL-KDD test set, including attack-type labels and
    difficulty levels in CSV format.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTest+.TXT`：包含攻击类型标签和CSV格式的难度级别的完整NSL-KDD测试集。'
- en: '`KDDTest-21.ARFF`: A subset of the `KDDTest+.arff` file, which does not include
    records, with difficulty levels of 21 out of 21.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTest-21.ARFF`：`KDDTest+.arff`文件的子集，不包括记录，难度级别为21/21。'
- en: '`KDDTest-21.TXT`: A subset of the `KDDTest+.txt` file, which does not include
    records, with difficulty levels of 21 out of 21.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KDDTest-21.TXT`：`KDDTest+.txt`文件的子集，不包括记录，难度级别为21/21。'
- en: 'If you open `Field Names.csv`, you will see all of the 40 fields:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打开`Field Names.csv`，你会看到所有的40个字段：
- en: '![](img/00135.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00135.jpeg)'
- en: 'To import this dataset, we will use `pandas`:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 导入这个数据集，我们将使用`pandas`：
- en: '[PRE1]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If we check the columns with  `Data.columns`, we will see that the columns,
    or fields, are represented as numbers:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们检查`Data.columns`中的列，我们会看到列或字段被表示为数字：
- en: '![](img/00136.gif)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00136.gif)'
- en: 'To make our feature analysis easier, let''s assign a field name to a number
    for better feature representation. To do that, we will create an array called
    `Columns`, filled with field names, and load the dataset with it:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使我们的特征分析更容易，让我们为更好的特征表示给一个字段名称分配一个数字。为了做到这一点，我们将创建一个名为`Columns`的数组，其中填充了字段名称，并用它加载数据集：
- en: '[PRE2]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Load the data:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 加载数据：
- en: '[PRE3]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'These are the feature names:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是特征名称：
- en: '![](img/00137.gif)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00137.gif)'
- en: 'To better understand the dataset, we can use `pandas.DataFrame.describe`:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解数据集，我们可以使用`pandas.DataFrame.describe`：
- en: '[PRE4]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](img/00138.gif)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00138.gif)'
- en: 'Before training the model, some additional processing is needed. `sklearn.preprocessing.LabelEncoder` encodes
    labels with values between `0` and `n_classes-1` and `fit_transform(y)`. Fit the
    label encoder and return encoded labels. In our case, we are transforming non-numerical
    labels into numerical labels. Also, we need to pre-process four labels: `protocol_type`,
    `service`, `flag`, and `label`.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练模型之前，需要进行一些额外的处理。`sklearn.preprocessing.LabelEncoder`将标签编码为介于`0`和`n_classes-1`之间的值，并`fit_transform(y)`。适应标签编码器并返回编码标签。在我们的情况下，我们正在将非数字标签转换为数字标签。此外，我们需要预处理四个标签：`protocol_type`、`service`、`flag`和`label`。
- en: 'To do that, we use `fit.transform()`, which calibrates our measurements:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们使用`fit.transform()`，它校准我们的测量：
- en: '[PRE5]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](img/00139.gif)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00139.gif)'
- en: In scikit-learn, there are two different methods: `fit` and `fit_transform`.
    The difference between the two methods is that `fit` calculates the parameters
    (μ and σ, where μ is the mean of the population and σ is the standard deviation
    of the population) and saves them internally, while `fit_transform` does the same
    task  but also applies a transformation to a particular set of samples.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在scikit-learn中，有两种不同的方法：`fit`和`fit_transform`。这两种方法之间的区别在于，`fit`计算参数（μ和σ，其中μ是总体的平均值，σ是总体的标准差）并在内部保存它们，而`fit_transform`做同样的任务，但也对特定的样本集应用了转换。
- en: 'Let''s identify our data. In the following lines, we have used an additional
    NumPy method, `as_matrix()`, to convert the frame to its NumPy-array representation.
    In a NumPy-array, the return is not a NumPy matrix, but a NumPy array, according
    to the official documentation:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们识别我们的数据。在下面的行中，我们使用了一个额外的NumPy方法`as_matrix()`，将框架转换为它的NumPy数组表示。在NumPy数组中，返回的不是NumPy矩阵，而是NumPy数组，根据官方文档的说法：
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Usually, after this step, we would perform the model training; but this time,
    we are going to take more time to analyze and visualize our data and features.
    One of the tasks of data science is obtaining insights and knowledge, and visualization
    is essential to data science and machine learning. My recommendation is to play
    with data as much as you can, and poke around with different techniques. As you
    will have noticed, a machine learning system generally respects the same techniques,
    and your job, as a data scientist or machine learning expert, is to select the
    right features from the data. Machine learning algorithms are based on mathematics,
    and usually, you are not going to change the algorithm itself; instead, you'll
    want to perform some good feature engineering to build a reliable and good model
    with high accuracy that meets your goals.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在这一步之后，我们会进行模型训练；但这一次，我们将花更多时间来分析和可视化我们的数据和特征。数据科学的一个任务是获得洞察和知识，可视化对于数据科学和机器学习至关重要。我的建议是尽可能多地玩弄数据，并尝试不同的技术。正如你已经注意到的，机器学习系统通常遵循相同的技术，作为数据科学家或机器学习专家，你的工作是从数据中选择正确的特征。机器学习算法是基于数学的，通常情况下，你不会改变算法本身；相反，你会希望进行一些良好的特征工程，以构建一个可靠且准确度高的模型，以满足你的目标。
- en: 'Yellowbrick is a great visualization library and suite of visual diagnostic
    tools (visualizers). This library depends on scikit-learn and Matplotlib. You
    can install it by using `pip`:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Yellowbrick是一个很棒的可视化库和一套视觉诊断工具（可视化器）。这个库依赖于scikit-learn和Matplotlib。你可以使用`pip`来安装它：
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This library is very rich, letting you visualize features, classification,
    regression, clustering, and even text (for example, visualizing the frequency
    distribution of terms in a corpus):'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库非常丰富，让您可以可视化特征、分类、回归、聚类，甚至文本（例如，可视化语料库中术语的频率分布）：
- en: '[PRE8]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](img/00140.gif)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00140.gif)'
- en: '`visualizer.poof()` will display the plot as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`visualizer.poof()`将显示绘图如下：'
- en: '![](img/00141.gif)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00141.gif)'
- en: 'To save the plot, you can add `outpath`, like in the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存绘图，您可以添加`outpath`，就像下面这样：
- en: '[PRE9]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You can even export it as a PDF file. You may have noticed that in the line `visualizer
    = Rank1D(features=Columns, algorithm='shapiro')`, we used a method called `Rank1D` and
    an algorithm called `shapiro`, to rank features and detect the relationships between
    them. `Rank1D` and `Rank2D` evaluate single features or pairs of features. In
    our case, we used a one-dimensional ranking of features.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您甚至可以将其导出为PDF文件。 您可能已经注意到，在`visualizer = Rank1D(features=Columns, algorithm='shapiro')`一行中，我们使用了一个名为`Rank1D`的方法和一个名为`shapiro`的算法，以对特征进行排名并检测它们之间的关系。
    `Rank1D`和`Rank2D`评估单个特征或特征对。 在我们的案例中，我们使用了特征的一维排名。
- en: '`Rank2D` is a two-dimensional ranking of features. The following shows how
    to implement it:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`Rank2D`是特征的二维排名。 以下显示了如何实现它：'
- en: '[PRE10]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You can select from `pearson` or `covariance`:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从`pearson`或`covariance`中进行选择：
- en: '[PRE11]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/00142.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00142.jpeg)'
- en: 'Let''s go back to the ranking algorithms we used. The `shapiro` parameter refers
    to the Shapiro-Wilk ranking algorithm. You can select your ranking algorithm:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到我们使用的排名算法。 `shapiro`参数是指Shapiro-Wilk排名算法。 您可以选择您的排名算法：
- en: '![](img/00143.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00143.jpeg)'
- en: 'We previously discovered **P****rincipal Component Analysis** (**PCA**). Yellowbrick
    gives you the ability to decompose high-dimensional data into two or three dimensions,
    and plot them:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前发现了**主成分分析**（**PCA**）。 Yellowbrick使您能够将高维数据分解为二维或三维，并将其绘制出来：
- en: '[PRE12]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](img/00144.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00144.jpeg)'
- en: 'Also, the plot can be in 3D:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，绘图可以是3D的：
- en: '[PRE13]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The preceding code is presented in this graph:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码在此图中呈现：
- en: '![](img/00145.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00145.jpeg)'
- en: 'Now it is time to train our intrusion detection machine learning model. As
    usual, we split the data, select the classifier used, fit the model, and get the
    scoring results:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候训练我们的入侵检测机器学习模型了。 与往常一样，我们拆分数据，选择使用的分类器，拟合模型并获得评分结果：
- en: '[PRE14]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![](img/00146.gif)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00146.gif)'
- en: The score of our intrusion detection system is 85.7%. For more details, you
    can output the evaluation metrics (TF, FP, TN, FN, and Recall), as done in the
    previous models.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们入侵检测系统的得分为85.7％。 有关更多详细信息，您可以输出评估指标（TF，FP，TN，FN和Recall），就像在以前的模型中所做的那样。
- en: The Kale stack
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kale堆栈
- en: 'Monitoring is a difficult mission, especially when it comes to a team of hundreds
    of engineers, where metrics overload can occur. To solve this problem, in addition
    to a time series-based anomaly detection ability, there are many projects that
    we can use. One of them is the Kale stack. It consists of two parts: Skyline and
    Oculus. The role of Skyline is to detect anomalous metrics (an anomaly detection
    system), while Oculus is the anomaly correlation component. To download the two
    components, you can check the following repositories:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 监控是一项艰巨的任务，特别是在涉及数百名工程师的团队中，可能会发生指标过载。 为了解决这个问题，除了基于时间序列的异常检测能力之外，还有许多项目可以使用。
    其中之一是Kale堆栈。 它由两部分组成：Skyline和Oculus。 Skyline的作用是检测异常指标（异常检测系统），而Oculus是异常相关组件。
    要下载这两个组件，您可以查看以下存储库：
- en: 'Skyline: [http://github.com/etsy/skyline](http://github.com/etsy/skyline)'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skyline：[http://github.com/etsy/skyline](http://github.com/etsy/skyline)
- en: 'Oculus: [http://github.com/etsy/oculus](http://github.com/etsy/oculus)'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oculus：[http://github.com/etsy/oculus](http://github.com/etsy/oculus)
- en: 'You will need the following:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要以下内容：
- en: At least 8 GB RAM
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少8 GB RAM
- en: Quad Core Xeon 5620 CPU, or comparable
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四核Xeon 5620 CPU，或同等配置
- en: 1 GB disk space
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 GB磁盘空间
- en: Summary
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the fundamentals of network anomaly detection techniques,
    and the theories behind them. You learned how to build a machine learning based
    network anomaly detector with Python. There are many other techniques that you
    can use to build a machine learning IDS. The next chapter will enhance your skills
    by guiding you through deploying a fully-working threat hunting platform, using
    an amazing stack for open source projects called the ELK stack.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了网络异常检测技术的基础知识以及其背后的理论。 您学会了如何使用Python构建基于机器学习的网络异常检测器。 您可以使用许多其他技术来构建机器学习IDS。
    下一章将通过引导您部署一个完全工作的威胁猎杀平台来增强您的技能，该平台使用了一个名为ELK stack的开源项目堆栈。
- en: Questions
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is an anomaly?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是异常？
- en: What is a Markov chain?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 马尔可夫链是什么？
- en: What are hidden Markov models?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 隐藏的马尔可夫模型是什么？
- en: How can we detect anomalies with hidden Markov models?
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何使用隐藏的马尔可夫模型检测异常？
- en: What's the difference between time series anomaly detection and the other types
    of anomaly detection?
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 时间序列异常检测与其他类型的异常检测有什么区别？
- en: What's the difference between time series anomaly detection and other types
    of anomaly detection?
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 时间序列异常检测与其他类型的异常检测有什么区别？
- en: What's the difference between supervised and unsupervised machine learning anomaly
    detection?
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 监督和无监督机器学习异常检测有什么区别？
- en: Further reading
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '**Blog posts**:'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**博客文章**：'
- en: '**Anomaly detection articles**: [https://www.kdnuggets.com/tag/anomaly-detection](https://www.kdnuggets.com/tag/anomaly-detection)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**异常检测文章**：[https://www.kdnuggets.com/tag/anomaly-detection](https://www.kdnuggets.com/tag/anomaly-detection)'
- en: '**A practical guide to anomaly detection for DevOps**: [https://www.bigpanda.io/blog/a-practical-guide-to-anomaly-detection/](https://www.bigpanda.io/blog/a-practical-guide-to-anomaly-detection/)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps异常检测实用指南**：[https://www.bigpanda.io/blog/a-practical-guide-to-anomaly-detection/](https://www.bigpanda.io/blog/a-practical-guide-to-anomaly-detection/)'
- en: '**Papers**:'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**论文**：'
- en: '**Root-Cause Analysis for Time-Series Anomalies via Spatiotemporal Graphical
    Modeling in Distributed Complex Systems**:[https://arxiv.org/abs/1805.12296](https://arxiv.org/abs/1805.12296)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于时序异常的根本原因分析，通过分布式复杂系统中的时空图形建模：[https://arxiv.org/abs/1805.12296](https://arxiv.org/abs/1805.12296)
- en: '**A Generalized Active Learning Approach for Unsupervised Anomaly Detection**:[https://arxiv.org/abs/1805.09411](https://arxiv.org/abs/1805.09411)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种用于无监督异常检测的广义主动学习方法：[https://arxiv.org/abs/1805.09411](https://arxiv.org/abs/1805.09411)
- en: '**Towards Explaining Anomalies: A Deep Taylor Decomposition of One-Class Models**:[https://arxiv.org/abs/1805.06230](https://arxiv.org/abs/1805.06230)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 朝向异常的解释：一类模型的深度泰勒分解：[https://arxiv.org/abs/1805.06230](https://arxiv.org/abs/1805.06230)
- en: '**Towards an Efficient Anomaly-Based Intrusion Detection for Software-Defined
    Networks**:[https://arxiv.org/abs/1803.06762](https://arxiv.org/abs/1803.06762)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 朝着高效的基于异常的软件定义网络入侵检测：[https://arxiv.org/abs/1803.06762](https://arxiv.org/abs/1803.06762)
