["```py\ntrain_labels = np.zeros(702)\ntrain_labels[351:701] = 1\ntrain_matrix = extract_features(train_dir)\n```", "```py\nmodel = LinearSVC()\nmodel.fit(train_matrix,train_labels)\n```", "```py\nresult = model.predict(test_matrix)\nprint (confusion_matrix(test_labels,result))\n```", "```py\ndf = pd.read_csv(file_name, low_memory=False)\n```", "```py\noriginal_headers = list(df.columns.values)\ntotal_data = df[original_headers[:-1]]\ntotal_data = total_data.as_matrix()\ntarget_strings = df[original_headers[-1]]\n```", "```py\ntrain, test, target_train, target_test = train_test_split(total_data, target_strings, test_size=0.33, random_state=int(time.time()))\n```", "```py\nclassifiers = [\nRandomForestClassifier(n_estimators=100),\nDecisionTreeClassifier(),\nAdaBoostClassifier()] \n```", "```py\nfrom sklearn.svm import *\n```", "```py\nclf= SVC(kernel='rbf')\nclf.fit(Xdata, Ydata)\n```", "```py\nScore = clf.score(XdataT,YdataT)\nprint (\u201cThe Score of the SVM Classifier is\u201d, Score * 100)\n```"]