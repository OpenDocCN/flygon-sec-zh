["```\n    sudo apt-get install flex bison build-essential checkinstall libpcap-dev libnet1-dev libpcre3-dev libmysqlclient15-dev libnetfilter-queue-dev iptables-dev\n\n    ```", "```\n    wget https://libdnet.googlecode.com/files/libdnet-1.12.tgz\n\n    ```", "```\n    ln -s /usr/local/lib/libdnet.1.0.1 /usr/lib/libdnet.1\n\n    ```", "```\n    wget https://www.snort.org/downloads/snort/snort-2.9.7.0.tar.gz\n\n    ```", "```\n    tar -zxvf daq-2.0.4.tar.gz\n    cd daq-2.0.4\n    ./configure; make; sudo make install\n\n    ```", "```\nautostart-IDS.sh\n#!/bin/bash\n# Configures the virtual bridge between the two physical interfaces.\nifconfig eth0 0.0.0.0\nifconfig eth1 0.0.0.0\nbrctl addbr bridge0\nbrctl addif bridge0 eth0\nbrctl addif bridge0 eth1\nifconfig bridge0 up\n# Configures Snort and TCPdump tools to begin listen and inspecting\n# the network traffic that travels through the bridge interface.\nTCPdump -i bridge0 -w /root/IDS-log/networkdump/network-traffic-$(date +%y%m%d).cap &\nSnort -i bridge0 -v |tee /root/IDS-log/snortdump/Snort-dump-$(date +%y%m%d) &\n\n```", "```\n    cd /opt/kidsafe\n    sudo chown :www-data .\n    sudo chmod 775 .\n    sudo chown :proxy kidsafe.py\n    sudo chmod 770 kidsafe.py\n    sudo chown :www-data kidsafe.rules kidsafe.session\n    sudo chmod 664 kidsafe.rules kidsafe.session\n\n    ```", "```\n    sudo tar -xvzf /home/pi/kidsafe-webapp-0.2.0.tgz\n\n    ```", "```\n    cd /var/log/squid3\n    sudo touch kidsafe.log\n    sudo chown :www-data kidsafe.log\n\n    ```", "```\n    cp \u2013r /usr/share/doc/openvpn/examples/easy-rsa/2.0 /etc/openvpn/easy-rsa\n\n    ```", "```\n    local 192.168.2.0 # CHANGE THIS TO YOUR RASPBERRY PI IP ADDRESS\n    dev tun\n    proto udp. # This is the protocol\n    port 1194\n    ca /etc/openvpn/easy-rsa/keys/ca.crt\n    cert /etc/openvpn/easy-rsa/keys/Server.crt # USE YOUR CERT NAME YOU CREATED\n    key /etc/openvpn/easy-rsa/keys/Server.key # USE YOUR KEY NAME YOU CREATED\n    dh /etc/openvpn/easy-rsa/keys/dh1024.pem # IF YOU CHANGED THE ENCRYPTION SIZE ADJUST THIS\n    server 10.8.0.0 255.255.255.0\n    # These are the server and remote endpoints\n    ifconfig 10.8.0.1 10.8.0.2\n\n    # This adds a route to Client routing table for the OpenVPN Server\n    push \"route 10.8.0.1 255.255.255.255\"\n    # This adds a route to Client routing table for the OpenVPN Subnet\n    push \"route 10.8.0.0 255.255.255.0\"\n    # This is your local subnet\n    push \"route 192.168.2.0 255.255.255.0\" # CHANGE THIS TO YOUR RASPBERRY PI IP ADDRESS\n    # Set primary domain name server address to the Router\n    push \"dhcp-option DNS 8.8.8.8\"\n    push \"redirect-gateway def1\"\n    client-to-client\n    duplicate-cn\n    keepalive 10 120\n    tls-auth /etc/openvpn/easy-rsa/keys/ta.key 0\n    cipher AES-128-CBC\n    comp-lzo\n    user nobody\n    group nogroup\n    persist-key\n    persist-tun\n    status /var/log/openvpn-status.log 20\n    log /var/log/openvpn.log\n    verb 1\n\n    ```", "```\n    #!/bin/sh\n    iptables -t nat -A POSTROUTING -s 10.0.2.0/24 -o eth0 -j SNAT --to-source 192.168.X.X.\n\n    ```", "```\n    chmod 700 /etc/firewall-Openvpn-rules.sh\n    chown root /etc/firewall-Openvpn-rules.sh\n\n    ```", "```\n    apt-get install sudo\n    adduser tor\n    passwd tor\n    apt-get update\n    apt-get upgrade\n\n    ```", "```\n    iface eth0 inet static\n    address 10.0.1.167 <- chose an IP that fits to your network! This is only an example!\n    netmask 255.255.255.0 <- Apply the correct settings\n    network <- The IP network\n    broadcast <- enter the IP broadcast address\n    gateway 10.0.1.1 <- Enter your router or default gateway\n\n    ```", "```\n    SocksPort 0\n    Log notice file /var/log/tor/notices.log\n    RunAsDaemon 1\n    ORPort 9001\n    DirPort 9030\n    ExitPolicy reject *:*\n    Nickname xxx (you can chose whatever you like)\n    RelayBandwidthRate 100 KB # Throttle traffic to 100KB/s (800Kbps)\n    RelayBandwidthBurst 200 KB # But allow bursts up to 200KB/s (1600Kbps)\n\n    ```", "```\n    sudo dd if=~/Desktop/2014-09-09-wheezy-raspbian.img of=/dev/disk1.\n\n    ```", "```\n    iface wlan0 inet static\n    address 10.99.99.1\n    netmask 255.255.255.0\n    allow-hotplug wlan0\n    #iface wlan0 inet manual\n    #wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf\n    #iface default inet dhcp\n\n    ```", "```\n    interface=wlan0\n    driver=rt2800usb\n    ssid=DrChaos\n    hw_mode=g\n    channel=6\n    macaddr_acl=0\n    auth_algs=1\n    ignore_broadcast_ssid=0\n    wpa=2\n    wpa_passphrase=KaliRaspberry\n    wpa_key_mgmt=WPA-PSK\n    DAEMON_CONF=\"/etc/hostapd/hostapd.conf\"\n\n    ```", "```\n    echo 1 > /proc/sys/net/ipv4/ip_forward\n\n    ```", "```\n    iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n    iptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 22 -j REDIRECT --to-ports 22\n    iptables -t nat -A PREROUTING -i wlan0 -p udp --dport 53 -j REDIRECT --to-ports 53\n    iptables -t nat -A PREROUTING -i wlan0 -p tcp --syn -j REDIRECT --to-ports 9040\n    iptables -A FORWARD -i eth0 -o wlan0 -m state --state RELATED,ESTABLISHED -j ACCEPT\n    iptables -A FORWARD -i wlan0 -o eth0 -j ACCEPT\n    iptables-save > /etc/iptables.ipv4.nat\n\n    ```", "```\n    Log notice file /var/log/tor_notices.log\n    VirtualAddrNetwork 10.99.0.0/10\n    AutomapHostsSuffixes .onion,.exit\n    AutomapHostsOnResolve 1\n    TransPort 9040\n    TransListenAddress 10.99.99.1\n    DNSPort 53\n    DNSListenAddress 10.99.99.1\n\n    ```", "```\n    qemu-system-armw.exe -kernel kernel-qemu -cpu arm1176 -m 256 -M versatilepb -no-reboot -serial stdio -append \"root=/dev/sda2 panic=1 rootfstype=ext4 rw init=/bin/bash\" -hda raspbian.img\n\n    ```"]