["```py\nprint \"You have been hacked!\"\n\n```", "```py\nprint(\"You have been hacked!\")\n\n```", "```py\nC:\\Python27\\python wargames_print.py\n\n```", "```py\n/usr/bin/python ./wargames_print.py\n\n```", "```py\n#!/usr/bin/env python\n\n```", "```py\nprint(\"Shall we play a game?\\n\")\n\n```", "```py\n#!/usr/bin/env python\nprint(\"Shall we play a game?\\n\")\n\n```", "```py\npython /root/Desktop/wargames_print.py\n\n```", "```py\npython ./wargames_print.py\n\n```", "```py\n#!/usr/bin/env python\n\nhacker = \"me\"\n\ndef local_variable_example():\n    hacker = \"you\"\n    print(\"The local variable is %s\") % (hacker)\n\nlocal_variable_example()\nprint(\"The global variable is %s\") % (hacker)\n```", "```py\nimport module\n```", "```py\nfrom module import *\n```", "```py\nimport module as a\n```", "```py\nfrom module import function as a\n```", "```py\n#!/usr/bin/env python\nexecute=True\nif execute != False:\n    print(\"Do you want to play a game?\\n\")\n```", "```py\nprint(variable_name) #DEBUG\n```", "```py\ng/.*DEBUG/d\n\n```", "```py\n%s/.*DEBUG/#&\n\n```", "```py\nvariable_name = \"This is the sentence passed\"\n\n```", "```py\nvariable_name = 'This is the sentence passed'\n\n```", "```py\nvariable_name = 'This is the \"sentence\" passed'\n\n```", "```py\nvariable_name = \"This is the \\\"sentence\\\" passed\"\n\n```", "```py\nvariable_name = 5\n\n```", "```py\n#!/usr/bin/env python\n\nlist_example = [100,222,333,444,\"string value\"]\nlist_example_length = len(list_example)\nfor iteration in list_example:\n index_value = list_example.index(iteration)\n print(\"The length of list list_example is %s, the value at position %s is %s\") % (str(list_example_length), str(index_value), str(iteration).strip('[]'))\n\nprint(\"Script finished\")\n\n```", "```py\n#!/usr/bin/env python\n\nlist_example = [100,222,333,444]\nlist_value = list_example[2]\nstring_value_from_list = str(list_value)\nprint(\"String value from list: %s\") % (str(list_value))\n\n```", "```py\n#!/usr/bin/env python\n\nlist_example = [100,222,333,444]\nlist_value = list_example[2]\nint_value_from_list = int(list_value))\nprint(\"String value from list: %s\") % (str(list_value))\nprint(\"Integer value from list: %d\") % (int_value_from_list)\n\n```", "```py\n#!/usr/bin/env python\ndictionary_example = {'james':123,'jack':456}\nprint(dictionary_example['james'])\n\n```", "```py\n#!/usr/bin/env python\nname = \"Hacker\"\nprint(\"My profession is \"+name+\", what is yours?\")\n```", "```py\n#!/usr/bin/env python\nname = \"Hacker\"\nprint(\"My profession is %s, what is yours?\") % (name)\n```", "```py\n#!/usr/bin/env python\n\nname = \"Hacker\"\nname2 = \"Penetration Tester\"\n\nprint(\"My profession is %s, what is yours? %s\") % (name, name2)\n\n```", "```py\n#!/usr/bin/env python\n\nname = \"Hacker\"\nname2 = \"Penetration Tester\"\nyears = 15\n\nprint(\"My profession is %s, what is yours? %s, with %d years experience!\") % (name, name2, years)\n\n```", "```py\n#!/usr/bin/env python\n\na = 10\nb = 5\nif a == 10 and b == 5:\n print(\"The condition has been met\")\nelse:\n print(\"the condition has not been met\")\n\n```", "```py\n#!/usr/bin/env python\n\na = False\nb = False\nif not(a and b):\n print(\"The condition has been met\")\nelse:\n print(\"The condition has not been met\")\n\n```", "```py\n#!/usr/bin/env python\n\nvariable = \"X-Team\"\n\nif \"Team\" in variable:\n print(\"The value of Team is in the variable\")\nelse:\n print(\"The value of Team is not in the variable\")\n\n```", "```py\nx = 1\nif x == 1:\n print(\"The variable x has a value of 1\")\n\n```", "```py\n#!/usr/bin/env python\nx=1\nif x == 3:\n print(\"The variable x has a value of 3\")\nelif x == 2:\n print(\"The variable x has a value of 2\")\nelif x == 1:\n print(\"The variable x has a value of 1\")\nelse:\n print(\"The variable x does not have a value of 1, 2, or 3\")\n\n```", "```py\n#!/usr/bin/env python\n\nexecute=True\nif execute != False:\n print(\"Do you want to play a game?\\n\")\n\n```", "```py\nx=5\nwhile x > 0:\nprint(\"Your current count is: %d\") % (x)\n x -= 1\n\n```", "```py\nfor iteration in range(1,15,1):\n print(\"Your current count is: %d\") % (iteration)\n\n```", "```py\n#!/usr/bin/\nnumeric = 15\nwhile numeric > 0:\n    print(\"Your current count is: %d\") %(numeric)\n    numeric -= 1\n    if numeric == 5:\n        break\nprint(\"Your count is finished!\")\n```", "```py\n#!/usr/bin/env python\n\nnumeric = 15\nfor iteration in range(numeric,5,-1):\n print(\"Your current count is: %d\") % (iteration)\n\nprint(\"Your count is finished!\")\n\n```", "```py\ntry:\n import docx\n from docx.shared import Inches\nexcept:\n sys.exit(\"[!] Install the docx writer library as root or through sudo: pip install python-docx\")\n\n```", "```py\n#!/usr/bin/env perl\n\n# Function in Perl\nsub wargames{\n print \"Do you want to play a game?\\n\";\nprint \"In Perl\\n\";\n}\n\n# Function call\nwargames();\n\n```", "```py\n#!/usr/bin/env python\n\n# Function in Python\ndef wargames():\n print(\"Do you want to play a game?\")\nprint(\"In Python\")\nreturn\n\n# Function call\nwargames()\n\n```", "```py\n#!/usr/bin/env python\n#Author: Chris Duffy\n#Date: 2015\nx = 5 #This defines the value of the x followed by a comment\n\n```", "```py\n\"\"\"\nAuthor: Chris Duffy\nDate: 2015\n\"\"\"\n\n```", "```py\n#!/usr/bin/env python\n\nimport sys\n\narguments = sys.argv\nprint(\"The number of arguments passed was: %s\") % (str(len(arguments)))\ni=0\nfor x in arguments:\n print(\"The %d argument is %s\") % (i,x)\n i+=1\n\n```", "```py\ndef get_ip(inter):\n s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n ip_addr = socket.inet_ntoa(fcntl.ioctl(s.fileno(), 0x8915, struct.pack('256s', inter[:15]))[20:24])\n return ip_addr\n\n```", "```py\ndef get_mac_address(inter):\n s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n info = fcntl.ioctl(s.fileno(), 0x8927,  struct.pack('256s', inter[:15]))\n mac_address = ''.join(['%02x:' % ord(char) for char in info[18:24]])[:-1]\n return mac_address\n\n```", "```py\ndef get_localhost_details(interfaces_eth, interfaces_wlan):\n    hostdata = \"None\"\n    hostname = \"None\"\n    windows_ip = \"None\"\n    eth_ip = \"None\"\n    wlan_ip = \"None\"\n    host_fqdn = \"None\"\n    eth_mac = \"None\"\n    wlan_mac = \"None\"\n    windows_mac = \"None\"\n    hostname = socket.gethostbyname(socket.gethostname())\n    if hostname.startswith(\"127.\") and os.name != \"nt\":\n        hostdata = socket.gethostbyaddr(socket.gethostname())\n        hostname = str(hostdata[1]).strip('[]')\n        host_fqdn = socket.getfqdn()\n        for interface in interfaces_eth:\n            try:\n                eth_ip = get_ip(interface)\n                if not \"None\" in eth_ip:\n                    eth_mac = get_mac_address(interface)\n                break\n            except IOError:\n                pass\n        for interface in interfaces_wlan:\n            try:\n                wlan_ip = get_ip(interface)\n                if not \"None\" in wlan_ip:\n                    wlan_mac = get_mac_address(interface)\n                break\n            except IOError:\n                pass\n    else:\n        windows_ip = socket.gethostbyname(socket.gethostname())\n        windows_mac = hex(getnode()).lstrip('0x')\n        windows_mac = ':'.join(pos1+pos2 for pos1,pos2 in zip(windows_mac[::2],windows_mac[1::2]))\n        hostdata = socket.gethostbyaddr(socket.gethostname())\n        hostname = str(hostdata[1]).strip(\"[]\\'\")\n        host_fqdn = socket.getfqdn()\n    return hostdata, hostname, windows_ip, eth_ip, wlan_ip, host_fqdn, eth_mac, wlan_mac, windows_mac\n```", "```py\ndef get_public_ip(request_target):\n    grabber = urllib2.build_opener()\n    grabber.addheaders = [('User-agent','Mozilla/5.0')]\n    try:\n        public_ip_address = grabber.open(target_url).read()\n    except urllib2.HTTPError, error:\n        print(\"There was an error trying to get your Public IP: %s\") % (error)\n    except urllib2.URLError, error:\n        print(\"There was an error trying to get your Public IP: %s\") % (error)\n    return public_ip_address\n```", "```py\nimport urllib2\n\ndef get_public_ip(request_target):\n    grabber = urllib2.build_opener()\n    grabber.addheaders = [('User-agent','Mozilla/5.0')]\n    try:\n        public_ip_address = grabber.open(target_url).read()\n    except urllib2.HTTPError, error:\n        print(\"There was an error trying to get your Public IP: %s\") % (error)\n    except urllib2.URLError, error:\n        print(\"There was an error trying to get your Public IP: %s\") % (error)\n    return public_ip_address\npublic_ip = \"None\"\ntarget_url = \"http://ip.42.pl/raw\"\npublic_ip = get_public_ip(target_url)\nif not \"None\" in public_ip:\n    print(\"Your Public IP address is: %s\") % (str(public_ip))\nelse:\n    print(\"Your Public IP address was not found\")\n```"]