["```py\n#!/usr/bin/env python\nimport urllib2, argparse, sys\ndefhost_test(filename):\n    file = \"headrequests.log\"\n    bufsize = 0\n    e = open(file, 'a', bufsize)\n    print(\"[*] Reading file %s\") % (file)\n    with open(filename) as f:\n        hostlist = f.readlines()\n    for host in hostlist:\n        print(\"[*] Testing %s\") % (str(host))\n        target = \"http://\" + host\n        target_secure = \"https://\" + host\n        try:\n            request = urllib2.Request(target)\n            request.get_method = lambda : 'HEAD'\n            response = urllib2.urlopen(request)\n        except:\n            print(\"[-] No web server at %s\") % (str(target))\n            response = None\n        if response != None:\n            print(\"[*] Response from %s\") % (str(target))\n            print(response.info())\n            details = response.info()\n            e.write(str(details))\n        try:\n            response_secure = urllib2.urlopen(request_secure)\n            request_secure.get_method = lambda : 'HEAD'\n            response_secure = urllib2.urlopen(request_secure)\n        except:\n            print(\"[-] No web server at %s\") % (str(target_secure))\n            response_secure = None\n        if response_secure != None:\n            print(\"[*] Response from %s\") % (str(target_secure))\n            print(response_secure.info())\n            details = response_secure.info()\n            e.write(str(details))\n    e.close()\n```", "```py\n#!/usr/bin/env python\nimport urllib2, argparse, sys\ndefhost_test(filename, host):\n    file = \"headrequests.log\"\n    bufsize = 0\n    e = open(file, 'a', bufsize)\n    print(\"[*] Reading file %s\") % (file)\n    with open(filename) as f:\n        locations = f.readlines()\n    for item in locations:\n        target = host + \"/\" + item\n        try:\n            request = urllib2.Request(target)\n            request.get_method = lambda : 'GET'\n            response = urllib2.urlopen(request)\n        except:\n            print(\"[-] %s is invalid\") % (str(target.rstrip('\\n')))\n            response = None\n        if response != None:\n            print(\"[+] %s is valid\") % (str(target.rstrip('\\n')))\n            details = response.info()\n            e.write(str(details))\n    e.close()\n```", "```py\ngo http://192.168.195.159/dvwa/index.php\nshow\n\n```"]